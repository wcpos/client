{"version":3,"sources":["../../common/src/components/table/styles.ts","../../common/src/components/table/cell.tsx","../../common/src/components/table/row.tsx","../../common/src/components/sort-icon/styles.ts","../../common/src/components/sort-icon/sort-icon.tsx","../../common/src/components/table/header-cell.tsx","../../common/src/components/table/header-row.tsx","../../common/src/components/table/body.tsx","../../common/src/components/table/header.tsx","../../common/src/components/table/empty-row.tsx","../../common/src/components/table/table.tsx","../../common/src/components/table/index.ts","../../common/src/screens/pos/pos.tsx","../../common/src/screens/common/ui-settings.tsx","../../common/src/components/format/address.tsx","../../common/src/components/format/date.tsx","../../common/src/components/format/currency.tsx","../../common/src/components/format/index.ts","../../common/src/components/format/name.tsx","../../common/src/components/format/number.tsx","../../common/src/components/format/list.tsx","../../common/src/components/tabs/styles.ts","../../common/src/components/tabs/tab.tsx","../../common/src/components/tabs/tabs.tsx","../../common/src/components/tree/styles.ts","../../common/src/components/tree/raw.tsx","../../common/src/components/tree/json/styles.ts","../../common/src/components/tree/json/value.tsx","../../common/src/components/tree/json/object.tsx","../../common/src/components/tree/json/array.tsx","../../common/src/components/tree/json/node.tsx","../../common/src/components/tree/tree.tsx","../../common/src/components/checkbox/styles.ts","../../common/src/components/checkbox/label.tsx","../../common/src/components/checkbox/icon.tsx","../../common/src/components/checkbox/checkbox.tsx","../../common/src/components/search/styles.ts","../../common/src/components/search/search.tsx","../../common/src/components/arrow/styles.ts","../../common/src/components/arrow/arrow.tsx","../../common/src/hooks/use-data-observable/use-data-observable.tsx","../../common/src/components/draggable/draggable.tsx","../../common/src/components/collapsible/collapsible.tsx","../../common/src/components/draggable/index.ts","../../common/src/hooks/use-on-layout.ts","../../common/src/components/tree/json/utils.ts","../../common/src/components/collapsible/styles.ts","../../common/src/screens/pos/styles.ts","../../common/src/components/numpad/styles.ts","../../common/src/components/numpad/numpad.tsx","../../common/src/screens/pos/cart/rows/cells/quantity.tsx","../../common/src/screens/pos/cart/rows/cells/price.tsx","../../common/src/screens/pos/cart/rows/cells/total.tsx","../../common/src/screens/pos/cart/rows/cells/tax.tsx","../../common/src/components/meta-data/styles.ts","../../common/src/components/meta-data/meta-data.tsx","../../common/src/screens/pos/cart/rows/cells/edit-modal.tsx","../../common/src/screens/pos/cart/rows/cells/actions.tsx","../../common/src/components/snackbar/use-snackbar.ts","../../common/src/screens/pos/cart/rows/line-item.tsx","../../common/src/screens/pos/cart/rows/cells/fee-and-shipping-price.tsx","../../common/src/screens/pos/cart/rows/fee-line.tsx","../../common/src/screens/pos/cart/rows/shipping-line.tsx","../../common/src/screens/pos/cart/table.tsx","../../common/src/components/combobox/styles.ts","../../common/src/components/combobox/combobox.tsx","../../common/src/screens/common/customer-select.tsx","../../common/src/screens/common/add-edit-customer.tsx","../../common/src/screens/pos/cart/totals.tsx","../../common/src/hooks/use-auth-login/auth-login-provider.tsx","../../common/src/screens/pos/cart/buttons.tsx","../../common/src/hooks/use-auth-login/use-auth-login.ts","../../common/src/screens/pos/cart/cart.tsx","../../common/src/components/webview/webview.web.tsx","../../common/src/components/accordion/styles.ts","../../common/src/components/accordion/accordion.tsx","../../common/src/screens/pos/checkout/checkout.tsx","../../common/src/components/gutter/styles.ts","../../common/src/components/gutter/gutter.tsx","../../common/src/screens/pos/products/products.tsx","../../common/src/screens/common/row.tsx","../../common/src/screens/common/table.tsx","../../common/src/screens/products/cells/image.tsx","../../common/src/screens/products/cells/name.tsx","../../common/src/screens/common/product-categories.tsx","../../common/src/screens/common/product-tags.tsx","../../common/src/screens/common/price.tsx","../../common/src/components/menu/styles.ts","../../common/src/components/menu/item.tsx","../../common/src/components/menu/menu.tsx","../../common/src/components/dropdown/dropdown.tsx","../../common/src/components/select/select.tsx","../../common/src/screens/products/cells/modal.tsx","../../common/src/screens/products/cells/delete-dialog.tsx","../../common/src/screens/products/cells/index.ts","../../common/src/screens/products/cells/actions.tsx","../../common/src/screens/common/date.tsx","../../common/src/screens/products/styles.ts","../../common/src/screens/products/products.tsx","../../common/src/screens/orders/cells/modal.tsx","../../common/src/screens/orders/cells/actions.tsx","../../common/src/screens/orders/cells/address.tsx","../../common/src/screens/orders/cells/customer.tsx","../../common/src/screens/orders/cells/index.ts","../../common/src/screens/orders/cells/note.tsx","../../common/src/screens/orders/cells/status.tsx","../../common/src/screens/orders/styles.ts","../../common/src/screens/orders/orders.tsx","../../common/src/screens/customers/add-customer-modal.tsx","../../common/src/screens/customers/cells/address.tsx","../../common/src/screens/customers/cells/name.tsx","../../common/src/screens/customers/cells/index.ts","../../common/src/screens/customers/cells/avatar.tsx","../../common/src/screens/customers/cells/email.tsx","../../common/src/screens/customers/cells/actions.tsx","../../common/src/screens/customers/styles.ts","../../common/src/screens/customers/customers.tsx","../../common/src/screens/support/auth-db.tsx","../../common/src/screens/support/store-db.tsx","../../common/src/screens/support/support.tsx","../../common/src/screens/header/user-menu/user-settings.tsx","../../common/src/screens/header/user-menu/styles.ts","../../common/src/screens/header/user-menu/user-menu.tsx","../../common/src/screens/header/online/online.tsx","../../common/src/screens/header/notifications/notifications.tsx","../../common/src/screens/header/styles.ts","../../common/src/screens/header/right.tsx","../../common/src/navigators/main.tsx"],"names":["Row","styled","View","Cell","HeaderRow","HeaderCell","HeaderTextWrapper","MemoizedCell","React","children","cellData","flexGrow","flexShrink","flexBasis","width","style","rowData","dataKey","String","displayName","MemoizedRow","columns","map","column","index","hide","key","getCellProps","Container","Up","active","theme","COLOR_PRIMARY","COLOR_DISABLED","Down","SortIcon","direction","visible","MemoizedHeaderCell","sort","sortBy","defaultSortDirection","sortDirection","label","disableSort","hideLabel","sortable","showSortIndicator","newSortDirection","onPress","event","hovered","undefined","MemoizedHeaderRow","getHeaderCellProps","Body","Object","assign","Header","EmptyRow","message","MemoizedEmptyRow","viewabilityConfig","minimumViewTime","viewAreaCoveragePercentThreshold","stickyHeaderIndices","MemoizedTable","data","footer","empty","rest","keyExtractor","item","get","childCount","count","renderItemFunction","Array","isArray","child","find","type","props","renderItem","headerComponent","ListHeaderComponent","ListFooterComponent","ListEmptyComponent","Table","POSContext","currentOrder","setCurrentOrder","currentCustomer","setCurrentCustomer","POS","storeDB","useStoreDB","resources","useUIResource","productsUI","useObservableSuspense","posProducts","cartUI","cart","isDragging","productColumnWidth","useSharedValue","useOnLayout","containerLayout","setContainerLayout","productColumnLayout","setProductColumnLayout","handleStartColumnResize","context","value","handleColumnResize","current","withSpring","clamp","translationX","console","log","handleEndColumnResize","atomicPatch","productsColumnStyle","useAnimatedStyle","handleContainerLayout","handleProductColumnLayout","orderQuery","collections","orders","where","eq","useObservableState","$","pipe","filter","o","length","useWhyDidYouUpdate","Provider","onLayout","as","Animated","fallback","ui","onStart","onActive","onEnd","status","UiSettings","t","useTranslation","id","split","setVisible","open","activator","name","tooltip","onRequestClose","checked","onChange","atomicSet","display","i","title","reset","addresses","default","AU","AT","BE","CA","CH","CL","CN","CZ","DE","EE","FI","DK","FR","HK","HU","IN","IS","IT","JP","TW","LI","NL","NZ","NO","PL","PT","SK","RS","SI","ES","SE","TR","UG","US","VN","format","Date","symbol","Name","firstName","lastName","Number","prefix","suffix","List","array","Address","address","showName","addr","template","country","hasOwnProperty","first_name","last_name","state_code","state","state_upper","toUpperCase","city_upper","city","matches","match","forEach","regex","RegExp","prop","replace","line","idx","trim","FormatDate","Currency","FormatCurrency","TabsContainer","Tab","Pressable","Label","Text","selected","TEXT_COLOR","TEXT_COLOR_SECONDARY","onSelect","Tabs","tabs","position","tabItems","useMemo","tab","Raw","TextInput","RawButtonContainer","raw","JSON","stringify","multiline","numberOfLines","editable","ObjectNode","JsonValue","keyPath","deep","flexDirection","JsonObject","isCollapsed","onExpand","_keyPath","nextDeep","collapsed","setCollapsed","alignItems","numberOfItems","getOwnPropertyNames","itemName","renderCollapsed","list","renderNotCollapsed","JsonArray","JsonNode","getObjectType","originalValue","toISOString","Tree","rootName","setRaw","background","size","accessoryLeft","PressableContainer","disabled","css","Box","CHECKBOX_BACKGROUND_COLOR","CHECKBOX_WIDTH","CHECKBOX_HEIGHT","CHECKBOX_BORDER_WIDTH","CHECKBOX_BORDER_COLOR","CHECKBOX_BORDER_RADIUS","Check","Icon","LabelWrapper","info","CheckboxIcon","hasError","focused","pressed","color","Checkbox","helpText","checkedRaw","onChangeRaw","useUncontrolledState","Input","Actions","Search","actions","onSearch","filters","renderFilters","filterLabel","onRemove","removable","clearable","leftAccessory","action","Left","Right","Arrow","renderArrow","useDataObservable","collectionName","initialQuery","collection","query","setQuery","useNavigation","Error","data$","useObservable","inputs$","switchMap","q","shareReplay","catchError","err","error","Draggable","lowerBound","upperBound","Math","min","max","onGestureEvent","minX","minY","maxX","maxY","useAnimatedGestureHandler","ctx","Collapsible","aref","useAnimatedRef","progress","useDerivedValue","withTiming","height","opacity","ref","h","nativeEvent","layout","setLayout","obj","Symbol","iterator","prototype","toString","call","slice","parse","string","result","indexOf","eval","e","PAGE_MAIN_PADDING_Y","PAGE_MAIN_PADDING_X","ProductsColumn","CartColumn","CheckoutColumn","Display","DisplayText","Keys","Key","KeyText","keys","Numpad","placeholder","displayText","setDisplayText","handleKeyPress","Quantity","lineItem","quantity","quantity$","Price","price","price$","Total","total","Tax","tax","MetaData","handleAddRow","meta","EditModal","onClose","handleChangeTaxClass","newValue","a","taxClass","hasProperty","property","schema","topLevelFields","includes","methodTitle","primaryAction","Section","taxStatus","metaData","showSnackbar","options","SnackbarContext","show","useSnackbar","dismissable","backgroundStyle","removeCartLine","LineItem","FeeAndShippingPrice","total$","FeeLine","fee","ShippingLine","shipping","CartTable","order","items","onSort","padding","addFeeLine","flex","addShippingLine","methodId","ScrollView","Combobox","choices","selectedRaw","searchValue","setOpen","showPopover","choiceComponents","choice","Item","onFocus","onClear","hideBackdrop","matchWidth","CustomerSelect","selectedCustomer","onSelectCustomer","search","prev","customers","orderBy","customer","localId","AddEditCustomer","useAppState","setFirstName","email","setEmail","setSelected","handleSave","customersCollection","insert","replicationState","syncRestApi","push","error$","subscribe","code","run","content","toJSON","Totals","totalTax","totalTax$","AuthLoginContext","Buttons","showAuthLogin","Group","marginBottom","customerNote","remove","accessoryRight","number","pricesIncludeTax","currencySymbol","Cart","get$","handleSort","items$","isRxDocument","cart$","handleSelectCustomer","addCustomer","cartTabs","grow","WebView","src","onError","onMessage","onLoad","window","addEventListener","removeEventListener","allowpaymentrequest","LabelContainer","Content","Accordion","currentIndex","setCurrentIndex","Checkout","paymentUrlMeta","saveOrder","Platform","OS","Gutter","Products","totalRecords","products","totalRecords$","recordsShowing","category","tag","useProductQuery","site","useSite","wpCredentials","useWpCredentials","navigation","http","baseURL","wcApiUrl","params","fields","posts_per_page","headers","Authorization","jwt","then","auditIdsFromServer","catch","response","navigate","login","useAudit","f","set","DefaultCell","cells","forceRender","_sortBy","_sortDirection","maybeSortedData","_flatten","indexes","_orderBy","getItemLayout","d","offset","Image","product","thumbnail","handleChangeText","ProductCategories","categories","handleSelectCategory","tagsArray","cat","tags","Skeleton","numberOfTags","ProductTags","handleSelectTag","FormattedPrice","TEXT_COLOR_INVERSE","useTheme","handlePress","calculatedStyled","hoverBackgroundColor","MENU_ITEM_HOVER_BACKGROUND_COLOR","backgroundColor","Menu","rawItem","snakeCase","Dropdown","_activator","placement","popoverStyle","paddingLeft","paddingRight","Select","choicesRaw","hidePopover","selectedChoice","x","onLabelClick","rightAccessory","minWidth","maxHeight","Modal","regularPrice","salePrice","onSale","DeleteDialog","secondaryActions","image","showDialog","setShowDialog","dateCreated","handleOpen","Customer","customer_id","billing","note","Orders","AddCustomer","avatarUrl","showModal","setShowModal","Customers","AuthDB","counts","deleteAll","table","printToConsole","userDB","exec","StoreDB","values","Support","UserSettings","taxRates$","taxes","taxRates","sectioned","zIndex","DropDown","UserMenu","showSettings","setShowSettings","dispatch","CommonActions","foo","Online","online","Notifications","HeaderRight","Drawer","createDrawerNavigator","MainNavigator","openDrawer","route","DrawerActions","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","textAlign","margin","headerBackgroundContainerStyle","headerLeftContainerStyle","headerRightContainerStyle","headerTitleContainerStyle","headerLeft","headerRight","Navigator","Screen","component"],"mappings":"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","file":"static/js/1.a06e8856.chunk.js","sourcesContent":["import styled from 'styled-components/native';\n\nexport const Row = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n\tborder-bottom-width: 1px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n`;\n\nexport const Cell = styled.View`\n\tpadding: 5px;\n\talign-items: flex-start;\n`;\n\nexport const HeaderRow = styled.View`\n\tflex-direction: row;\n\tborder-bottom-width: 2px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n\tbackground-color: #ffffff;\n`;\n\nexport const HeaderCell = styled.View`\n\tpadding: 5px;\n`;\n\nexport const HeaderTextWrapper = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\n\nexport interface TableCellProps {\n\tchildren?: React.ReactNode;\n\tcellData?: any;\n\tcolumn?: any;\n\tdataKey?: string | number;\n\trowData?: any;\n\tstyle?: ViewStyle;\n\t// rowIndex: number;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tindex?: number;\n}\n\nconst Cell = ({\n\tchildren,\n\tcellData,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tstyle,\n\trowData,\n\tdataKey,\n}: TableCellProps) => {\n\tif (children) {\n\t\treturn (\n\t\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t\t{typeof children === 'function' ? children({ cellData }) : children}\n\t\t\t</Styled.Cell>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t<Text>{String(cellData ?? '')}</Text>\n\t\t</Styled.Cell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedCell = React.memo(Cell);\nMemoizedCell.displayName = 'Table.Body.Row.Cell';\n\nexport default MemoizedCell;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Cell, { TableCellProps } from './cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetCellPropsFunction = () => TableCellProps;\n\nexport interface TableRowProps {\n\tchildren?: React.ReactNode;\n\trowData: any;\n\tcolumns?: ColumnProps[];\n\tstyle?: ViewStyle;\n}\n\nconst Row = ({ rowData, columns, style, children }: TableRowProps) => {\n\t// const key = rowData.id;\n\t// const renderCells = React.memo(() => {\n\n\t// }, [columns])\n\n\treturn (\n\t\t<Styled.Row style={style}>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column: ColumnProps, index: number) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst cellData = rowData[dataKey];\n\t\t\t\t\tconst { flexGrow, flexShrink, flexBasis, width } = column;\n\n\t\t\t\t\tconst getCellProps: GetCellPropsFunction = () => ({\n\t\t\t\t\t\tcellData,\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\trowData,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ cellData, column, getCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <Cell {...getCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.Row>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedRow = React.memo(Row) as unknown as React.FC<TableRowProps> & { Cell: typeof Cell };\nMemoizedRow.displayName = 'Table.Row';\nMemoizedRow.Cell = Cell;\n\nexport default MemoizedRow;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tpadding: 3px;\n\topacity: 0.6;\n`;\n\nexport const Up = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ active, theme }) =>\n\t\tactive ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n\tmargin-bottom: 2px;\n`;\n\nexport const Down = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ active, theme }) => (active ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED)};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\ntype SortDirection = import('../table/types').SortDirection;\n\nexport interface SortIconProps {\n\t/**\n\t *\n\t */\n\tdirection?: SortDirection;\n\t/**\n\t *\n\t */\n\tvisible?: boolean;\n}\n\nexport const SortIcon = ({ direction, visible = true }: SortIconProps) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Up active={direction === 'asc'} />\n\t\t\t<Styled.Down active={direction === 'desc'} />\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { GestureResponderEvent, ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport SortIcon from '../sort-icon';\n\n/**\n *\n */\nexport interface HeaderCellProps {\n\tchildren?: React.ReactNode;\n\tdataKey: string | number;\n\tdefaultSortDirection?: import('./types').SortDirection;\n\t// headerCellRenderer?: import('./types').HeaderCellRenderer;\n\tlabel?: string;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: ViewStyle;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tdisableSort?: boolean;\n\thideLabel?: boolean;\n}\n\n/**\n *\n */\nconst HeaderCell = ({\n\tchildren,\n\tsort,\n\tsortBy,\n\tdataKey,\n\tdefaultSortDirection = 'asc',\n\tsortDirection,\n\t// headerCellRenderer,\n\tlabel,\n\tstyle,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tdisableSort = false,\n\thideLabel = false,\n}: HeaderCellProps) => {\n\tconst sortable = !disableSort && typeof sort === 'function';\n\tconst showSortIndicator = sortable && sortBy === dataKey;\n\n\tconst newSortDirection =\n\t\tsortBy !== dataKey ? defaultSortDirection : sortDirection === 'desc' ? 'asc' : 'desc';\n\n\tconst handlePress = (event: GestureResponderEvent) => {\n\t\tif (typeof sort === 'function') {\n\t\t\tsort({\n\t\t\t\tdefaultSortDirection,\n\t\t\t\tevent,\n\t\t\t\tsortBy: dataKey,\n\t\t\t\tsortDirection: newSortDirection,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Styled.HeaderCell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t{sortable ? (\n\t\t\t\t<Pressable onPress={handlePress}>\n\t\t\t\t\t{\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t({ hovered }) => (\n\t\t\t\t\t\t\t<Styled.HeaderTextWrapper>\n\t\t\t\t\t\t\t\t<Text>{children || label}</Text>\n\t\t\t\t\t\t\t\t<SortIcon\n\t\t\t\t\t\t\t\t\tvisible={hovered || showSortIndicator}\n\t\t\t\t\t\t\t\t\tdirection={showSortIndicator ? sortDirection : undefined}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Styled.HeaderTextWrapper>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Pressable>\n\t\t\t) : (\n\t\t\t\t!hideLabel && <Text>{children || label}</Text>\n\t\t\t)}\n\t\t</Styled.HeaderCell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderCell = React.memo(HeaderCell);\nMemoizedHeaderCell.displayName = 'Table.Header.Row.Cell';\n\nexport default MemoizedHeaderCell;\n","import * as React from 'react';\nimport * as Styled from './styles';\nimport HeaderCell, { HeaderCellProps } from './header-cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetHeaderCellPropsFunction = () => HeaderCellProps & { column: ColumnProps };\n\n/**\n *\n */\nexport interface HeaderRowProps {\n\tchildren?: React.ReactNode;\n\tcolumns?: import('./types').ColumnProps[];\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: import('react-native').ViewStyle;\n}\n\n/**\n *\n */\nconst HeaderRow = ({ columns, sort, sortBy, sortDirection, children, style }: HeaderRowProps) => {\n\treturn (\n\t\t<Styled.HeaderRow>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column, index) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t} = column;\n\n\t\t\t\t\tconst getHeaderCellProps: GetHeaderCellPropsFunction = () => ({\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t\tsortBy,\n\t\t\t\t\t\tsortDirection,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ column, getHeaderCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <HeaderCell {...getHeaderCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.HeaderRow>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderRow = React.memo(HeaderRow) as unknown as React.FC<HeaderRowProps> & {\n\tCell: typeof HeaderCell;\n};\nMemoizedHeaderRow.displayName = 'Table.Header.Row';\nMemoizedHeaderRow.Cell = HeaderCell;\n\nexport default MemoizedHeaderRow;\n","import * as React from 'react';\nimport Row from './row';\n\nconst Body: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nBody.displayName = 'Table.Body';\n\nexport default Object.assign(Body, { Row });\n","import * as React from 'react';\nimport HeaderRow from './header-row';\n\nconst Header: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nHeader.displayName = 'Table.Header';\n\nexport default Object.assign(Header, { Row: HeaderRow });\n","import * as React from 'react';\nimport Text from '../text';\n\ninterface EmptyRowProps {\n\tmessage?: string;\n}\n\nconst EmptyRow = ({ message = 'No results found' }: EmptyRowProps) => {\n\treturn <Text>{message}</Text>;\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedEmptyRow = React.memo(EmptyRow);\nEmptyRow.displayName = 'Table.Row.Empty';\n\nexport default MemoizedEmptyRow;\n","import * as React from 'react';\nimport { FlatListProps, ListRenderItem } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler'; // swipeable rows?\nimport get from 'lodash/get';\nimport Row from './row';\nimport HeaderRow from './header-row';\nimport Body from './body';\nimport Header from './header';\nimport EmptyRow from './empty-row';\n\nexport interface TableProps {\n\tchildren?: React.ReactNode;\n\tcolumns: import('./types').ColumnProps[];\n\tdata: any[];\n\tempty?: string;\n\tfooter?: React.ReactElement;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: any;\n}\n\n/**\n * Tables rows must be onscreen for minimumViewTime to trigger onViewableItemsChanged\n */\nconst viewabilityConfig = {\n\tminimumViewTime: 500,\n\tviewAreaCoveragePercentThreshold: 0,\n};\n\n/**\n * Keeps the header row pinned to the top of the table\n */\nconst stickyHeaderIndices = [0];\n\nconst Table = ({\n\tchildren,\n\tcolumns,\n\tdata,\n\tempty,\n\tfooter,\n\tsort,\n\tsortBy,\n\tsortDirection,\n\t...rest\n}: TableProps) => {\n\tconst keyExtractor = React.useCallback(\n\t\t(item: any, index: number) => get(item, 'localId') || index,\n\t\t[]\n\t);\n\tconst childCount = React.Children.count(children);\n\n\t/**\n\t * create and memoize the renderItem function\n\t */\n\tconst renderItemFunction: ListRenderItem<typeof Row> = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Body);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\treturn ({ item, index }) => child.props.children({ item, columns, index });\n\t\t\t}\n\t\t}\n\t\tif (typeof children === 'function') {\n\t\t\treturn ({ item, index }) => children({ item, columns, index });\n\t\t}\n\t\treturn ({ item }: any) => <Row rowData={item} columns={columns} />;\n\t}, [children, childCount, columns]);\n\n\tconst renderItem = React.useCallback(renderItemFunction, [renderItemFunction]);\n\n\t/**\n\t * create and memoize the headerComponent\n\t */\n\tconst headerComponent = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Header);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\treturn React.cloneElement(child.props.children, {\n\t\t\t\t\tcolumns,\n\t\t\t\t\tsort,\n\t\t\t\t\tsortBy,\n\t\t\t\t\tsortDirection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<HeaderRow columns={columns} sort={sort} sortBy={sortBy} sortDirection={sortDirection} />\n\t\t);\n\t}, [children, childCount, columns, sort, sortBy, sortDirection]);\n\n\treturn (\n\t\t<FlatList\n\t\t\tdata={data}\n\t\t\trenderItem={renderItem}\n\t\t\tkeyExtractor={keyExtractor}\n\t\t\tListHeaderComponent={headerComponent}\n\t\t\tListFooterComponent={footer}\n\t\t\tListEmptyComponent={EmptyRow}\n\t\t\tstickyHeaderIndices={stickyHeaderIndices}\n\t\t\tviewabilityConfig={viewabilityConfig}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedTable = React.memo(Table) as unknown as React.FC<TableProps> & {\n\tHeader: typeof Header;\n\tBody: typeof Body;\n};\nMemoizedTable.displayName = 'Table';\nMemoizedTable.Header = Header;\nMemoizedTable.Body = Body;\n\nexport default MemoizedTable;\n","import Table from './table';\n\nexport default Table;\n","import * as React from 'react';\nimport { View, Text, PanResponderGestureState, LayoutChangeEvent } from 'react-native';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { from, of } from 'rxjs';\nimport { switchMap, tap, catchError, map, filter } from 'rxjs/operators';\n// import { PanGestureHandler } from 'react-native-gesture-handler';\n// import { useAnimatedGestureHandler, useSharedValue } from 'react-native-reanimated';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n// import useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useStoreDB from '@wcpos/common/src/hooks/use-store-db';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport ErrorBoundary from '@wcpos/common/src/components/error-boundary';\nimport Draggable from '@wcpos/common/src/components/draggable';\nimport Gutter from '@wcpos/common/src/components/gutter';\nimport useOnLayout from '@wcpos/common/src/hooks/use-on-layout';\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport clamp from 'lodash/clamp';\nimport Cart from './cart';\nimport Products from './products';\nimport Checkout from './checkout';\nimport * as Styled from './styles';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface POSContextProps {\n\tcurrentOrder?: OrderDocument;\n\tsetCurrentOrder: React.Dispatch<React.SetStateAction<OrderDocument | undefined>>;\n\tcurrentCustomer?: CustomerDocument;\n\tsetCurrentCustomer: React.Dispatch<React.SetStateAction<CustomerDocument | undefined>>;\n}\n\nexport const POSContext = React.createContext<POSContextProps>({\n\tcurrentOrder: undefined,\n\t// @ts-ignore\n\tsetCurrentOrder: undefined,\n\tcurrentCustomer: undefined,\n\t// @ts-ignore\n\tsetCurrentCustomer: undefined,\n});\n\n/**\n *\n */\nconst POS = () => {\n\tconst { storeDB } = useStoreDB() as { storeDB: StoreDatabase };\n\tconst resources = useUIResource();\n\tconst productsUI = useObservableSuspense(resources.posProducts);\n\tconst cartUI = useObservableSuspense(resources.cart);\n\tconst [currentOrder, setCurrentOrder] = React.useState<OrderDocument | undefined>();\n\tconst [currentCustomer, setCurrentCustomer] = React.useState<CustomerDocument | undefined>();\n\n\t/**\n\t * Resizing the POS columns\n\t */\n\tconst isDragging = React.useRef(false);\n\tconst productColumnWidth = useSharedValue(productsUI.get('width'));\n\tconst [containerLayout, setContainerLayout] = useOnLayout();\n\tconst [productColumnLayout, setProductColumnLayout] = useOnLayout();\n\tconst handleStartColumnResize = React.useCallback((event, context) => {\n\t\tcontext.productColumnWidth = productColumnWidth.value;\n\t}, []);\n\tconst handleColumnResize = React.useCallback(\n\t\t(event, context) => {\n\t\t\tif (productColumnLayout && containerLayout) {\n\t\t\t\tisDragging.current = true;\n\t\t\t\tproductColumnWidth.value = withSpring(\n\t\t\t\t\tclamp((productColumnLayout.width + event.translationX) / containerLayout.width, 0.2, 0.8)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.log('@TODO - why null?', productColumnLayout);\n\t\t\t}\n\t\t},\n\t\t[containerLayout, productColumnLayout]\n\t);\n\tconst handleEndColumnResize = React.useCallback((event, context) => {\n\t\tisDragging.current = false;\n\t\tproductsUI.atomicPatch({ width: productColumnWidth.value });\n\t}, []);\n\tconst productsColumnStyle = useAnimatedStyle(() => ({\n\t\tflexBasis: `${productColumnWidth.value * 100}%`,\n\t}));\n\tconst handleContainerLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetContainerLayout(event);\n\t\t}\n\t};\n\tconst handleProductColumnLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetProductColumnLayout(event);\n\t\t}\n\t};\n\n\tconst orderQuery = storeDB.collections.orders.find().where('status').eq('pos-open');\n\n\tconst orders: OrderDocument[] = useObservableState(\n\t\torderQuery.$.pipe(\n\t\t\tfilter((o) => {\n\t\t\t\t/** @TODO - remove this hack!\n\t\t\t\t * why is orderQuery emitting on changes to order.lineItems??\n\t\t\t\t */\n\t\t\t\treturn orders?.length !== o.length;\n\t\t\t})\n\t\t),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('POS', {\n\t\tstoreDB,\n\t\tproductsUI,\n\t\tcartUI,\n\t\tcurrentOrder,\n\t\torderQuery,\n\t\torders,\n\t\thandleColumnResize,\n\t\thandleStartColumnResize,\n\t\thandleEndColumnResize,\n\t\tproductsColumnStyle,\n\t\thandleContainerLayout,\n\t\thandleProductColumnLayout,\n\t});\n\n\treturn (\n\t\t<POSContext.Provider\n\t\t\tvalue={{ currentOrder, setCurrentOrder, currentCustomer, setCurrentCustomer }}\n\t\t>\n\t\t\t<Styled.Container onLayout={handleContainerLayout}>\n\t\t\t\t<Styled.ProductsColumn\n\t\t\t\t\tas={Animated.View}\n\t\t\t\t\tonLayout={handleProductColumnLayout}\n\t\t\t\t\tstyle={productsColumnStyle}\n\t\t\t\t>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<React.Suspense fallback={<Text>Loading products...</Text>}>\n\t\t\t\t\t\t\t<Products ui={productsUI} storeDB={storeDB} />\n\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Styled.ProductsColumn>\n\t\t\t\t<Draggable\n\t\t\t\t\tonStart={handleStartColumnResize}\n\t\t\t\t\tonActive={handleColumnResize}\n\t\t\t\t\tonEnd={handleEndColumnResize}\n\t\t\t\t>\n\t\t\t\t\t<Animated.View>\n\t\t\t\t\t\t<Gutter />\n\t\t\t\t\t</Animated.View>\n\t\t\t\t</Draggable>\n\t\t\t\t{currentOrder && currentOrder.status === 'pos-checkout' ? (\n\t\t\t\t\t<Styled.CheckoutColumn>\n\t\t\t\t\t\t<Checkout />\n\t\t\t\t\t</Styled.CheckoutColumn>\n\t\t\t\t) : (\n\t\t\t\t\t<Styled.CartColumn>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<React.Suspense fallback={<Text>Loading cart...</Text>}>\n\t\t\t\t\t\t\t\t<Cart ui={cartUI} orders={orders} />\n\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Styled.CartColumn>\n\t\t\t\t)}\n\t\t\t</Styled.Container>\n\t\t</POSContext.Provider>\n\t);\n};\n\nexport default POS;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface UiSettingsProps {\n\tui: import('@wcpos/common/src/hooks/use-ui').UIDocument;\n}\n\nconst UiSettings = ({ ui }: UiSettingsProps) => {\n\tconst { t } = useTranslation();\n\tconst key = ui.id.split('_')[1];\n\tconst columns = ui.get('columns');\n\tconst [visible, setVisible] = React.useState(false);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tactivator={<Icon name=\"cog\" onPress={() => setVisible(true)} tooltip=\"Table Settings\" />}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t>\n\t\t\t<Text>Columns</Text>\n\t\t\t{columns.map((column: any, index: number) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${column.key}`)}\n\t\t\t\t\t\t\tchecked={!column.hide}\n\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\tcolumns[index] = { ...column, hide: !checked };\n\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{column.display\n\t\t\t\t\t\t\t? column.display.map((display: any, i: number) => (\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-indent\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tkey={display.key}\n\t\t\t\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${display.key}`)}\n\t\t\t\t\t\t\t\t\t\tchecked={!display.hide}\n\t\t\t\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\t\t\t\tcolumn.display[i] = { ...display, hide: !checked };\n\t\t\t\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Button title=\"Restore Default Settings\" onPress={ui.reset} />\n\t\t</Popover>\n\t);\n};\n\nexport default UiSettings;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../text';\n\ntype Countries =\n\t| 'default'\n\t| 'AU'\n\t| 'AT'\n\t| 'BE'\n\t| 'CA'\n\t| 'CH'\n\t| 'CL'\n\t| 'CN'\n\t| 'CZ'\n\t| 'DE'\n\t| 'EE'\n\t| 'FI'\n\t| 'DK'\n\t| 'FR'\n\t| 'HK'\n\t| 'HU'\n\t| 'IN'\n\t| 'IS'\n\t| 'IT'\n\t| 'JP'\n\t| 'TW'\n\t| 'LI'\n\t| 'NL'\n\t| 'NZ'\n\t| 'NO'\n\t| 'PL'\n\t| 'PT'\n\t| 'SK'\n\t| 'RS'\n\t| 'SI'\n\t| 'ES'\n\t| 'SE'\n\t| 'TR'\n\t| 'UG'\n\t| 'US'\n\t| 'VN';\n\ninterface Address {\n\taddress_1?: string;\n\taddress_2?: string;\n\tcity?: string;\n\tcompany?: string;\n\tcountry?: Countries;\n\tfirst_name?: string;\n\tlast_name?: string;\n\tpostcode?: string;\n\tstate?: string;\n}\n\ntype Template = Address & {\n\tname?: string;\n\tstate_code?: string;\n\tstate_upper?: string;\n\tcity_upper?: string;\n};\n\nexport interface FormatAddressProps {\n\taddress: Address;\n\tshowName: boolean;\n}\n\nconst addresses = {\n\tdefault: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}\\n{postcode}\\n{country}',\n\tAU: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {state} {postcode}\\n{country}',\n\tAT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tBE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCA: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {state_code}&nbsp;&nbsp;{postcode}\\n{country}',\n\tCH: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{state}\\n{postcode} {city}\\n{country}',\n\tCN: '{country} {postcode}\\n{state}, {city}, {address_2}, {address_1}\\n{company}\\n{name}',\n\tCZ: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tEE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFR: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city_upper}\\n{country}',\n\tHK: '{company}\\n{first_name} {last_name_upper}\\n{address_1}\\n{address_2}\\n{city_upper}\\n{state_upper}\\n{country}',\n\tHU: '{name}\\n{company}\\n{city}\\n{address_1}\\n{address_2}\\n{postcode}\\n{country}',\n\tIN: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{state}, {country}',\n\tIS: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tIT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode}\\n{city}\\n{state_upper}\\n{country}',\n\tJP: '{postcode}\\n{state} {city} {address_1}\\n{address_2}\\n{company}\\n{last_name} {first_name}\\n{country}',\n\tTW: '{company}\\n{last_name} {first_name}\\n{address_1}\\n{address_2}\\n{state}, {city} {postcode}\\n{country}',\n\tLI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNZ: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{country}',\n\tNO: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tRS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tES: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{state}\\n{country}',\n\tSE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tTR: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city} {state}\\n{country}',\n\tUG: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}, {country}',\n\tUS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}, {state_code} {postcode}\\n{country}',\n\tVN: '{name}\\n{company}\\n{address_1}\\n{city}\\n{country}',\n};\n\nexport const FormatAddress = ({ address, showName }: FormatAddressProps) => {\n\tconst addr = { ...address } as Template; // clone address\n\tlet template =\n\t\taddr.country && addresses.hasOwnProperty(addr.country)\n\t\t\t? addresses[addr.country]\n\t\t\t: addresses.default;\n\n\tObject.assign(addr, {\n\t\tname: showName && `${addr.first_name} ${addr.last_name}`,\n\t\tstate_code: addr.state,\n\t\tstate_upper: addr.state?.toUpperCase(),\n\t\tcity_upper: addr.city?.toUpperCase(),\n\t});\n\n\tconst matches = template.match(/\\{[\\w]+\\}/g);\n\tmatches &&\n\t\tmatches.forEach((match) => {\n\t\t\tconst regex = new RegExp(match, 'g');\n\t\t\tconst prop = match.split(/{|}/g)[1] as Extract<keyof Template, string>;\n\t\t\ttemplate = template.replace(regex, addr[prop] || '');\n\t\t});\n\n\treturn (\n\t\t<View>\n\t\t\t{template.split('\\n').map((line, idx) => {\n\t\t\t\tif (line.trim()) {\n\t\t\t\t\treturn <Text key={idx}>{line}</Text>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</View>\n\t);\n};\n","import * as React from 'react';\nimport { format } from 'date-fns';\nimport Text from '../text';\n\nexport interface FormatDateProps {\n\tvalue: string;\n}\n\nconst FormatDate = ({ value }: FormatDateProps) => {\n\treturn <Text>{format(new Date(value || ''), 'dd/MM/yyyy')}</Text>;\n};\n\nexport default React.memo(FormatDate);\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatCurrencyProps {\n\tchildren: React.ReactNode;\n\tdecimal?: string;\n\tformat?: {\n\t\tneg: string;\n\t\tpos: string;\n\t\tzero: string;\n\t};\n\tprecision?: number;\n\tsymbol?: string;\n\tthousand?: string;\n}\n\nconst FormatCurrency = ({ children, symbol }: FormatCurrencyProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{symbol} {children}\n\t\t</Text>\n\t);\n};\n\nexport default React.memo(FormatCurrency);\n","import { FormatName, FormatNameProps } from './name';\nimport { FormatNumber, FormatNumberProps } from './number';\nimport { FormatList, FormatListProps } from './list';\nimport { FormatAddress, FormatAddressProps } from './address';\nimport FormatDate, { FormatDateProps } from './date';\nimport FormatCurrency, { FormatCurrencyProps } from './currency';\n\nexport type {\n\tFormatNameProps,\n\tFormatNumberProps,\n\tFormatListProps,\n\tFormatAddressProps,\n\tFormatDateProps,\n\tFormatCurrencyProps,\n};\nexport default {\n\tName: FormatName,\n\tNumber: FormatNumber,\n\tList: FormatList,\n\tAddress: FormatAddress,\n\tDate: FormatDate,\n\tCurrency: FormatCurrency,\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNameProps {\n\tfirstName?: string;\n\tlastName?: string;\n}\n\nexport const FormatName = ({ firstName, lastName }: FormatNameProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{firstName} {lastName}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNumberProps {\n\tchildren: React.ReactNode;\n\tprefix?: string;\n\tsuffix?: string;\n\tdecimalSeparator?: string;\n}\n\nexport const FormatNumber = ({ children, prefix, suffix }: FormatNumberProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{prefix} {children} {suffix}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatListProps {\n\tarray?: [];\n}\n\nexport const FormatList = ({ array }: FormatListProps) => {\n\treturn (\n\t\t<>\n\t\t\t{array?.map((item, index) => {\n\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\treturn <Text>{item}, </Text>;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t})}\n\t\t</>\n\t);\n};\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\n\nexport const Container = styled.View`\n\theight: 100%;\n`;\n\nexport const TabsContainer = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Tab = styled(Pressable)<{ selected: boolean }>`\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n`;\n\nexport const Label = styled(Text)<{ selected: boolean }>`\n\tcolor: ${({ selected, theme }) => (selected ? theme.TEXT_COLOR : theme.TEXT_COLOR_SECONDARY)};\n`;\n","import React from 'react';\nimport * as Styled from './styles';\n\nexport interface TabProps {\n\tlabel: string;\n\tselected: boolean;\n\tonSelect: () => void;\n}\n\nexport const Tab = ({ label, selected, onSelect }: TabProps) => {\n\treturn (\n\t\t<Styled.Tab selected={selected} onPress={onSelect}>\n\t\t\t<Styled.Label selected={selected}>{label}</Styled.Label>\n\t\t</Styled.Tab>\n\t);\n};\n","import React from 'react';\nimport { Tab } from './tab';\nimport * as Styled from './styles';\n\nexport interface TabsProps {\n\t/**\n\t * List of tabs.\n\t */\n\ttabs: string[];\n\t/**\n\t * Index of selected tab.\n\t */\n\tselected: number;\n\t/**\n\t * Callback when tab is selected.\n\t */\n\tonSelect: (selectedTabIndex: number) => void;\n\t/**\n\t * Content to display in tabs.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * Content to display in tabs.\n\t */\n\tposition?: 'top' | 'bottom';\n}\n\n/**\n * Use to alternate among related views sharing the same context.\n */\nexport const Tabs = ({ tabs, selected, onSelect, children, position = 'top' }: TabsProps) => {\n\tconst tabItems = React.useMemo(\n\t\t() =>\n\t\t\ttabs.map((tab, index) => (\n\t\t\t\t<Tab\n\t\t\t\t\tkey={tab}\n\t\t\t\t\tlabel={tab}\n\t\t\t\t\tselected={selected === index}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onSelect(index)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[tabs, selected, onSelect]\n\t);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{position === 'bottom' && children}\n\t\t\t<Styled.TabsContainer>{tabItems}</Styled.TabsContainer>\n\t\t\t{position === 'top' && children}\n\t\t</Styled.Container>\n\t);\n};\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\nimport Button from '../button';\n\nexport const Raw = styled.TextInput`\n\tmax-height: 300px;\n`;\n\nexport const Container = styled.View`\n\tposition: relative;\n\twidth: 100%;\n`;\n\nexport const RawButtonContainer = styled.View`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface RawTreeProps {\n\tdata: any;\n}\n\nexport const Raw = ({ data }: RawTreeProps) => {\n\tconst raw = JSON.stringify(data, null, '  ');\n\n\treturn (\n\t\t<Styled.Raw multiline numberOfLines={raw.split('\\n').length} editable={false} value={raw} />\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const ObjectNode = styled.View`\n\tpadding-left: 20px;\n`;\n","import * as React from 'react';\nimport Text from '../../text';\nimport * as Styled from './styles';\n\nexport interface JsonValueProps {\n\tname: string;\n\tvalue: any;\n\toriginalValue: any;\n\tkeyPath?: string[];\n\tdeep?: number;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n}\n\nexport const JsonValue = ({ name, value, keyPath = [], deep = 0 }: JsonValueProps) => {\n\treturn (\n\t\t<Styled.ObjectNode style={{ flexDirection: 'row' }}>\n\t\t\t<Text type=\"info\">{name} : </Text>\n\t\t\t<Text>{String(value)}</Text>\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonObjectProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonObject = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonObjectProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\t\tconst collapseValue = ' {...}';\n\t\tconst numberOfItems = keyList.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'keys' : 'key';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = keyList.map((key) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={key}\n\t\t\t\tname={key}\n\t\t\t\tdata={data[key]}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text>{' {'}</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>{'}'}</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonArrayProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonArray = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonArrayProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst collapseValue = ' [...]';\n\t\tconst numberOfItems = data.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'items' : 'item';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = data.map((item: any, index: number) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={index}\n\t\t\t\tname={`${index}`}\n\t\t\t\tdata={item}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text> [</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>]</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { JsonValue } from './value';\nimport { JsonObject } from './object';\nimport { JsonArray } from './array';\nimport { getObjectType } from './utils';\n\nexport interface JsonNodeProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonNode = ({\n\tdata,\n\tname,\n\tisCollapsed = (keyPath: string[]) => keyPath.length > 0,\n\tonExpand = () => {},\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonNodeProps) => {\n\tconst dataType = getObjectType(data);\n\n\tswitch (dataType) {\n\t\tcase 'String':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={`\"${data}\"`}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Number':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Boolean':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={!!data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Date':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data.toISOString()}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Null':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"null\"\n\t\t\t\t\toriginalValue=\"null\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Undefined':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"undefined\"\n\t\t\t\t\toriginalValue=\"undefined\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Object':\n\t\t\treturn (\n\t\t\t\t<JsonObject\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Array':\n\t\t\treturn (\n\t\t\t\t<JsonArray\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import * as React from 'react';\nimport { Raw } from './raw';\nimport { JsonNode } from './json/node';\nimport Button from '../button';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface TreeProps {\n\tdata: any;\n\trootName?: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tfallback?: React.ReactNode;\n}\n\nexport const Tree = ({\n\tdata,\n\trootName = 'root',\n\tisCollapsed,\n\tonExpand,\n\tfallback = null,\n}: TreeProps) => {\n\tconst [raw, setRaw] = React.useState(false);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{raw ? (\n\t\t\t\t<Raw data={data} />\n\t\t\t) : (\n\t\t\t\t<JsonNode\n\t\t\t\t\tdata={data}\n\t\t\t\t\tname={rootName}\n\t\t\t\t\tdeep={-1}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Styled.RawButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"raw\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonPress={() => setRaw(!raw)}\n\t\t\t\t\taccessoryLeft={\n\t\t\t\t\t\traw ? (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility-off\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility\" />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Styled.RawButtonContainer>\n\t\t</Styled.Container>\n\t);\n};\n","import styled, { css } from 'styled-components/native';\nimport Icon from '../icon';\nimport Pressable from '../pressable';\n\nexport const PressableContainer = styled(Pressable)`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${({ disabled }) =>\n\t\tdisabled &&\n\t\tcss`\n\t\t\topacity: 0.5;\n\t\t`}\n`;\n\nexport const Box = styled.View<{ checked: boolean | undefined }>`\n\tflex: 0 1 auto;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-style: solid;\n\tbackground-color: ${({ theme, checked }) =>\n\t\tchecked ? theme.CHECKBOX_BACKGROUND_COLOR : 'transparent'};\n\twidth: ${({ theme }) => theme.CHECKBOX_WIDTH};\n\theight: ${({ theme }) => theme.CHECKBOX_HEIGHT};\n\tborder-width: ${({ theme }) => theme.CHECKBOX_BORDER_WIDTH};\n\tborder-color: ${({ theme }) => theme.CHECKBOX_BORDER_COLOR};\n\tborder-radius: ${({ theme }) => theme.CHECKBOX_BORDER_RADIUS};\n`;\n\nexport const Check = styled(Icon)`\n\tcolor: #fff;\n`;\n\nexport const LabelWrapper = styled.View`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0 5px;\n`;\n","import * as React from 'react';\nimport Text from '../text';\nimport { LabelWrapper } from './styles';\n\ntype Props = {\n\tlabel?: React.ReactNode;\n\tchecked?: boolean;\n\tinfo?: React.ReactNode;\n};\n\nconst Label = ({ label, checked, info }: Props) => {\n\treturn (\n\t\t<LabelWrapper>\n\t\t\t<Text>{label}</Text>\n\t\t\t{info && <Text>{info}</Text>}\n\t\t</LabelWrapper>\n\t);\n};\n\nexport default Label;\n","import * as React from 'react';\nimport { Box, Check } from './styles';\n\ntype Props = {\n\tchecked?: boolean;\n\thasError?: boolean;\n\tdisabled?: boolean;\n\tfocused?: boolean;\n\thovered?: boolean;\n\tpressed?: boolean;\n};\n\nexport default function CheckboxIcon({\n\tchecked,\n\thasError,\n\tdisabled,\n\tfocused,\n\thovered,\n\tpressed,\n}: Props) {\n\tconst errorState = hasError && !disabled && !checked;\n\tconst iconColor = disabled ? '#ccc' : '#FFFFFF';\n\treturn (\n\t\t<Box checked={checked}>\n\t\t\t{checked && <Check name=\"check\" size=\"small\" disabled={disabled} color=\"#FFF\" />}\n\t\t</Box>\n\t);\n}\n","import * as React from 'react';\nimport useUncontrolledState from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Label from './label';\nimport Icon from './icon';\nimport * as Styled from './styles';\n\nexport interface CheckboxProps {\n\t/**\n\t * True if selected.\n\t */\n\tchecked?: boolean;\n\t/**\n\t * Label to display next to the Checkbox.\n\t */\n\tlabel: React.ReactNode;\n\t/**\n\t * Additional text to aid in use.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Disables the input.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Called when selection state changes. Should propagate change to `checked` prop.\n\t *\n\t * If not set, component will be an uncontrolled component. @see https://reactjs.org/docs/uncontrolled-components.html\n\t */\n\tonChange?: (checked: boolean) => void;\n\n\t// helpText?: React.ReactNode;\n}\n\n/**\n * @TODO - hover, focus states\n */\nexport const Checkbox = ({\n\tlabel,\n\tdisabled,\n\thelpText,\n\tchecked: checkedRaw = false,\n\tonChange: onChangeRaw,\n}: CheckboxProps) => {\n\tconst [checked, onChange] = useUncontrolledState(checkedRaw, onChangeRaw);\n\tconst onPress = React.useCallback(() => onChange?.(!checked), [checked, onChange]);\n\n\t// const onPress = () => {\n\t// \tif (disabled) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst _checked = !checked;\n\t// \tsetChecked(_checked);\n\t// \tif (typeof onChange === 'function') {\n\t// \t\tonChange(_checked, { target: { name, checked: _checked } });\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<Styled.PressableContainer disabled={disabled} onPress={onPress}>\n\t\t\t<Icon checked={checked} disabled={disabled} />\n\t\t\t<Label label={label} checked={checked} info={helpText} />\n\t\t</Styled.PressableContainer>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tflex-direction: row;\n\twidth: 100%;\n\talign-items: center;\n`;\n\nexport const Input = styled.View`\n\tflex: 1;\n`;\n\nexport const Actions = styled.View`\n\tflex-direction: row;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport Tag from '../tag';\nimport * as Styled from './styles';\n\n/**\n *\n */\nexport type SearchActionsProps = {\n\t/**\n\t *\n\t */\n\taction: () => void;\n} & Pick<import('../icon/icon').IconProps, 'name'>; // pass-through props\n\n/**\n *\n */\nexport type SearchFiltersProps = {\n\t/**\n\t *\n\t */\n\tlabel: string;\n} & Pick<import('../tag/tag').TagProps, 'onRemove'>; // pass-through props\n\n/**\n *\n */\nexport type SearchProps = {\n\t/**\n\t * Pass-through to TextInput onChange prop\n\t */\n\tonSearch: (value: string) => void;\n\t/**\n\t * Buttons displayed to the right of the search field\n\t */\n\tactions?: (SearchActionsProps | React.ReactElement)[];\n\t/**\n\t * Tags displayed in the search field\n\t */\n\tfilters?: SearchFiltersProps[];\n} & Pick<\n\timport('../textinput/textinput').TextInputProps,\n\t'label' | 'value' | 'onClear' | 'placeholder'\n>; // pass-through props\n\n/**\n *\n */\nexport const Search = ({ actions, onSearch, filters, ...rest }: SearchProps) => {\n\tconst renderFilters = React.useMemo(() => {\n\t\tif (filters) {\n\t\t\treturn filters.map(({ label: filterLabel, onRemove }) => (\n\t\t\t\t<Tag removable onRemove={onRemove}>\n\t\t\t\t\t{filterLabel}\n\t\t\t\t</Tag>\n\t\t\t));\n\t\t}\n\t\treturn undefined;\n\t}, [filters]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Input>\n\t\t\t\t<TextInput\n\t\t\t\t\thideLabel\n\t\t\t\t\tclearable\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tleftAccessory={renderFilters}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t</Styled.Input>\n\t\t\t{actions && (\n\t\t\t\t<Styled.Actions>\n\t\t\t\t\t{actions.map((action) => {\n\t\t\t\t\t\tif (React.isValidElement(action)) {\n\t\t\t\t\t\t\treturn action;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <Icon name={action.name} onPress={action.action} />;\n\t\t\t\t\t})}\n\t\t\t\t</Styled.Actions>\n\t\t\t)}\n\t\t</Styled.Container>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\twidth: 8px;\n\theight: 8px;\n`;\n\nexport const Left = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-right-width: 4px;\n\tborder-right-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Right = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-left-width: 4px;\n\tborder-left-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Up = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n\nexport const Down = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface ArrowProps {\n\tdirection?: 'left' | 'right' | 'up' | 'down';\n\tsize?: 'small' | 'large' | 'default';\n}\n\nexport const Arrow = ({ direction = 'down', size = 'default' }: ArrowProps) => {\n\tconst renderArrow = () => {\n\t\tswitch (direction) {\n\t\t\tcase 'left':\n\t\t\t\treturn <Styled.Left />;\n\t\t\tcase 'right':\n\t\t\t\treturn <Styled.Right />;\n\t\t\tcase 'up':\n\t\t\t\treturn <Styled.Up />;\n\t\t\tdefault:\n\t\t\t\treturn <Styled.Down />;\n\t\t}\n\t};\n\n\treturn <Styled.Container>{renderArrow()}</Styled.Container>;\n};\n","import * as React from 'react';\nimport { useObservable, useSubscription } from 'observable-hooks';\nimport { switchMap, catchError, shareReplay, first } from 'rxjs/operators';\nimport { useNavigation } from '@react-navigation/native';\nimport useStoreDB from '@wcpos/common/src/hooks/use-store-db';\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\nexport interface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tfilters?: Record<string, unknown>;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/**\n *\n *\n * @param collectionName\n * @param initialQuery\n * @param options\n * @returns\n */\nexport const useDataObservable = (\n\tcollectionName: 'products' | 'orders' | 'customers',\n\tinitialQuery: QueryState,\n\toptions = {}\n) => {\n\tconst { storeDB } = useStoreDB() as { storeDB: StoreDatabase };\n\tconst collection = storeDB.collections[collectionName];\n\tconst [query, setQuery] = React.useState<QueryState>(initialQuery);\n\tconst navigation = useNavigation();\n\n\tif (!collection) {\n\t\tthrow Error('Collection not found');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst data$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\t// distinctUntilChanged((a, b) => a[0] === b[0]),\n\t\t\t\t// debounceTime(150),\n\t\t\t\tswitchMap(([q]) => {\n\t\t\t\t\t// const regexp = new RegExp(escape(q.search), 'i');\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst RxQuery = collection.query(q);\n\t\t\t\t\t// \t.find({\n\t\t\t\t\t// \t\tselector: {\n\t\t\t\t\t// \t\t\tdateCreatedGmt: { $regex: regexp },\n\t\t\t\t\t// \t\t},\n\t\t\t\t\t// \t})\n\t\t\t\t\t// \t// @ts-ignore\n\t\t\t\t\t// \t.sort({ [q.sortBy]: q.sortDirection });\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t}),\n\t\t\t\tshareReplay(1),\n\t\t\t\tcatchError((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn err;\n\t\t\t\t})\n\t\t\t),\n\t\t[query]\n\t);\n\n\t/**\n\t *\n\t */\n\t// useSubscription(data$.pipe(first()), (result: any) => {\n\t// \t// if first and empty, do an id audit\n\t// \tif (result.length === 0) {\n\t// \t\t// @ts-ignore\n\t// \t\tcollection.audit().catch((err: any) => {\n\t// \t\t\tif (err && err.response && err.response.status === 401) {\n\t// \t\t\t\t// @ts-ignore\n\t// \t\t\t\tnavigation.navigate('Modal', { login: true });\n\t// \t\t\t}\n\t// \t\t\tconsole.warn(err);\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t/**\n\t *\n\t */\n\t// React.useEffect(() => {\n\t// \t// @ts-ignore\n\t// \tcollection.restApiQuery(query).then((replicationState: any) => {\n\t// \t\treplicationState.error$.subscribe((err: any) => {\n\t// \t\t\tif (err.code === 401) {\n\t// \t\t\t\t// @ts-ignore\n\t// \t\t\t\tnavigation.navigate('Modal', { login: true });\n\t// \t\t\t}\n\t// \t\t});\n\t// \t});\n\t// }, [collection, query]);\n\n\t/**\n\t *\n\t */\n\treturn { data$, query, setQuery };\n};\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Animated, {\n\tuseAnimatedGestureHandler,\n\tuseSharedValue,\n\tuseAnimatedStyle,\n\twithSpring,\n} from 'react-native-reanimated';\nimport { PanGestureHandler, PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n\nconst clamp = (value: number, lowerBound: number, upperBound: number) => {\n\t'worklet';\n\n\treturn Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nexport interface DraggableProps {\n\tchildren: React.ReactNode;\n\t/**\n\t *\n\t */\n\tonStart?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonActive?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonEnd?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\tminX?: number;\n\tminY?: number;\n\tmaxX?: number;\n\tmaxY?: number;\n}\n\nexport const Draggable = ({\n\tchildren,\n\tonStart,\n\tonActive,\n\tonEnd,\n\tminX,\n\tminY,\n\tmaxX,\n\tmaxY,\n}: DraggableProps) => {\n\tconst onGestureEvent = useAnimatedGestureHandler<\n\t\tPanGestureHandlerGestureEvent,\n\t\t{ x: number; y: number }\n\t>({\n\t\tonStart(event, ctx) {\n\t\t\tif (onStart) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonStart(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonActive(event, ctx) {\n\t\t\tif (onActive) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonActive(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonEnd(event, ctx) {\n\t\t\tif (onEnd) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonEnd(event, ctx);\n\t\t\t}\n\t\t},\n\t});\n\n\treturn <PanGestureHandler onGestureEvent={onGestureEvent}>{children}</PanGestureHandler>;\n};\n\nexport default Draggable;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Animated, {\n\tuseAnimatedRef,\n\t// measure,\n\tuseSharedValue,\n\tuseAnimatedStyle,\n\tuseDerivedValue,\n\twithSpring,\n\twithTiming,\n\trunOnUI,\n} from 'react-native-reanimated';\nimport useOnLayout from '@wcpos/common/src/hooks/use-on-layout';\nimport * as Styled from './styles';\n\nexport interface CollapsibleProps {\n\t/**\n\t * Toggle the expanded state of the Collapsible.\n\t */\n\topen: boolean;\n\t/**\n\t * Content that should be collapsible.\n\t */\n\tchildren: React.ReactNode;\n}\n\n/**\n * Make long sections of information available in a block that can expand or collapse.\n *\n * Should not wrap views with shadows, as shadow will be clipped.\n */\nexport const Collapsible = ({ open, children }: CollapsibleProps) => {\n\tconst aref = useAnimatedRef<View>();\n\tconst progress = useDerivedValue(() => (open ? withTiming(1) : withTiming(0)));\n\tconst height = useSharedValue(0);\n\n\tconst style = useAnimatedStyle(() => ({\n\t\theight: height.value * progress.value,\n\t\topacity: progress.value,\n\t}));\n\n\treturn (\n\t\t<Styled.Container as={Animated.View} style={style}>\n\t\t\t<View\n\t\t\t\tref={aref}\n\t\t\t\tonLayout={({\n\t\t\t\t\tnativeEvent: {\n\t\t\t\t\t\tlayout: { height: h },\n\t\t\t\t\t},\n\t\t\t\t}) => {\n\t\t\t\t\theight.value = h;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t</Styled.Container>\n\t);\n};\n","export { Draggable as default } from './draggable';\n","import * as React from 'react';\nimport { LayoutRectangle, ViewProps } from 'react-native';\n\n/**\n * Custom hook to use with `View.onLayout` to get layout of View.\n */\nexport const useOnLayout = (): [LayoutRectangle | null, Required<ViewProps>['onLayout']] => {\n\tconst [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n\tconst onLayout = React.useCallback<Required<ViewProps>['onLayout']>(\n\t\t({ nativeEvent }) => {\n\t\t\tsetLayout(nativeEvent.layout);\n\t\t},\n\t\t[setLayout]\n\t);\n\n\treturn [layout, onLayout];\n};\n\nexport default useOnLayout;\n","/**\n * Get Object type.\n * @param obj {*} object to get type\n * @returns {*}\n */\nfunction getObjectType(obj: any) {\n\tif (\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\t!Array.isArray(obj) &&\n\t\ttypeof obj[Symbol.iterator] === 'function'\n\t) {\n\t\treturn 'Iterable';\n\t}\n\treturn Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n/**\n * Parse.\n * @param string {String} string to parse\n * @returns {*}\n */\nfunction parse(string: string) {\n\tlet result = string;\n\n\t// Check if string contains 'function' and start with it to eval it\n\tif (result.indexOf('function') === 0) {\n\t\treturn eval(`(${result})`); // eslint-disable-line no-eval\n\t}\n\n\ttry {\n\t\tresult = JSON.parse(string);\n\t} catch (e) {\n\t\t// Error\n\t}\n\treturn result;\n}\n\nexport { getObjectType, parse };\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\toverflow: hidden;\n`;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n\nexport const ProductsColumn = styled.View`\n\theight: 100%;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n\tflex-basis: 60%;\n`;\n\nexport const CartColumn = styled.View`\n\theight: 100%;\n\tflex: 1;\n`;\n\nexport const CheckoutColumn = styled.View`\n\theight: 100%;\n\tflex: 1;\n`;\n","import styled from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Display = styled.View`\n\tflex-direction: row;\n`;\n\nexport const DisplayText = styled(Text)`\n\tflex: 1;\n`;\n\nexport const Keys = styled.View`\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tflex-direction: row;\n`;\n\nexport const Key = styled(Pressable)`\n\tflex-grow: 1;\n\tflex-shrink: 0;\n\tflex-basis: 30%;\n\talign-items: center;\n\tmargin: 1px;\n`;\n\nexport const KeyText = styled(Text)``;\n","import * as React from 'react';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface NumpadProps {\n\tdisplay?: 'below' | 'center' | 'bottom' | 'inline';\n\tplaceholder?: string;\n}\n\nconst keys = ['7', '8', '9', '4', '5', '6', '1', '2', '3', '-', '0', '.'];\n\nexport const Numpad = ({ display = 'below', placeholder = '0' }: NumpadProps) => {\n\tconst [displayText, setDisplayText] = React.useState(placeholder);\n\n\tconst handleKeyPress = (key: string) => {\n\t\tsetDisplayText(displayText + key);\n\t};\n\n\tconst handleBackspace = () => {\n\t\tsetDisplayText(displayText);\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Display>\n\t\t\t\t<Styled.DisplayText>{displayText}</Styled.DisplayText>\n\t\t\t\t<Icon name=\"backspace\" onPress={handleBackspace} />\n\t\t\t</Styled.Display>\n\t\t\t<Styled.Keys>\n\t\t\t\t{keys.map((key) => (\n\t\t\t\t\t<Styled.Key key={`button-${key}`} onPress={() => handleKeyPress(key)}>\n\t\t\t\t\t\t<Styled.KeyText>{key}</Styled.KeyText>\n\t\t\t\t\t</Styled.Key>\n\t\t\t\t))}\n\t\t\t</Styled.Keys>\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Numpad from '@wcpos/common/src/components/numpad';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Quantity = ({ lineItem }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst quantity = useObservableState(lineItem.quantity$, lineItem.quantity);\n\n\tconst handleChangeText = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ quantity: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\tactivator={\n\t\t\t\t<Button title={String(quantity)} onPress={() => setVisible(true)} background=\"outline\" />\n\t\t\t}\n\t\t>\n\t\t\t<Numpad placeholder={String(quantity)} />\n\t\t</Popover>\n\t);\n};\n\nexport default Quantity;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Price = ({ lineItem }: Props) => {\n\tconst price = useObservableState(lineItem.price$, lineItem.price);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ price: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttitle={String(price)}\n\t\t\tonPress={() => {\n\t\t\t\tconsole.log('numpad');\n\t\t\t}}\n\t\t\tbackground=\"outline\"\n\t\t/>\n\t);\n};\n\nexport default Price;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Format from '@wcpos/common/src/components/format';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'total' | 'subtotal';\n}\n\nconst Total = ({ item, type = 'total' }: Props) => {\n\tconst total = useObservableState(item[`${type}$`], item[type]);\n\tuseWhyDidYouUpdate('CartLineItemTotal', { item, total });\n\n\treturn <Format.Currency>{total}</Format.Currency>;\n};\n\nexport default Total;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'totalTax' | 'subtotalTax';\n}\n\nconst Tax = ({ item, type = 'totalTax' }: Props) => {\n\tconst tax = useObservableState(item[`${type}$`], item[type]);\n\treturn <Text>{tax}</Text>;\n};\n\nexport default Tax;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View``;\n\nexport const Row = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Cell = styled.View`\n\tflex: 1;\n\tpadding: 5px;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface MetaDataProps {\n\tdata: { id: number; key: string; value: string }[];\n}\n\nexport const MetaData = ({ data }: MetaDataProps) => {\n\tconst handleAddRow = () => {\n\t\tconsole.log('hi');\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{data?.map((meta) => (\n\t\t\t\t<Styled.Row key={meta.key}>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Key\" value={meta.key} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Value\" value={meta.value} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Icon name=\"add\" onPress={handleAddRow} />\n\t\t\t\t</Styled.Row>\n\t\t\t))}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\n\nexport interface EditModalProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\tonClose: () => void;\n}\n\nconst EditModal = ({ item, onClose }: EditModalProps) => {\n\tuseObservableState(item.$); // re-render\n\n\tconst handleChangeTaxClass = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ taxClass: newValue });\n\t};\n\n\tconst hasProperty = (property: string) => {\n\t\treturn item.collection.schema.topLevelFields.includes(property);\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={item.name || item.methodTitle}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t{hasProperty('name') && <TextInput label=\"Name\" value={item.name} />}\n\t\t\t\t{hasProperty('taxStatus') && (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"Taxable\"\n\t\t\t\t\t\tchecked={item.taxStatus === 'taxable'}\n\t\t\t\t\t\tonChange={(value) => item.atomicPatch({ taxStatus: value ? 'taxable' : 'none' })}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{hasProperty('taxClass') && (\n\t\t\t\t\t<TextInput label=\"Tax Class\" value={item.taxClass} onChange={handleChangeTaxClass} />\n\t\t\t\t)}\n\t\t\t\t<MetaData\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata={item.metaData}\n\t\t\t\t/>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default EditModal;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Icon from '@wcpos/common/src/components/icon';\nimport { useSnackbar } from '@wcpos/common/src/components/snackbar/use-snackbar';\nimport { POSContext } from '../../../pos';\nimport EditModal from './edit-modal';\n\ninterface ActionProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst Actions = ({ item }: ActionProps) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst { currentOrder } = React.useContext(POSContext);\n\tconst undoFeeRemove = () => {\n\t\tconsole.log('Undo remove', item);\n\t};\n\n\tconst showSnackbar = useSnackbar({\n\t\tmessage: 'Item removed',\n\t\tdismissable: true,\n\t\taction: { label: 'Undo', action: undoFeeRemove },\n\t});\n\n\tconst handleRemove = () => {\n\t\tcurrentOrder?.removeCartLine(item);\n\t\tshowSnackbar();\n\t};\n\n\treturn (\n\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t<Icon name=\"more-vert\" size=\"large\" onPress={() => setVisible(true)} backgroundStyle=\"none\" />\n\t\t\t<Icon\n\t\t\t\tname=\"remove\"\n\t\t\t\tsize=\"x-large\"\n\t\t\t\tonPress={handleRemove}\n\t\t\t\tbackgroundStyle=\"none\"\n\t\t\t\ttype=\"critical\"\n\t\t\t/>\n\t\t\t{visible && <EditModal item={item} onClose={() => setVisible(false)} />}\n\t\t</View>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport { SnackbarOptions, SnackbarContext } from './snackbar-provider';\n\n/**\n * Get a function for showing a Snackbar with the specified options.\n *\n * Simply call the function to show the Snackbar, which will be automatically\n * dismissed.\n *\n * @example\n * const showSnackbar = useSnackbar({ message: 'This is a Snackbar!' })\n * <Button onClick={showSnackbar}>Show Snackbar!</Button>\n */\nexport const useSnackbar = (options: SnackbarOptions): (() => void) => {\n\tconst context = React.useContext(SnackbarContext);\n\n\treturn React.useCallback(() => context.show(options), [context, options]);\n};\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Quantity from './cells/quantity';\nimport Price from './cells/price';\nimport Total from './cells/total';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\titem: import('@wcpos/common/src/database').LineItemDocument;\n\tcolumns: any;\n}\n\nconst LineItem = ({ item, columns }: Props) => {\n\tuseWhyDidYouUpdate('CartLineItem', { item, columns });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <Quantity lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'subtotalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} type=\"subtotalTax\" />;\n\t\t\t\t\t\t\t\tcase 'subtotal':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} type=\"subtotal\" />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} />;\n\t\t\t\t\t\t\t\tcase 'total':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={item} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default LineItem;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst FeeAndShippingPrice = ({ item }: Props) => {\n\tconst price = useObservableState(item.total$, item.total);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ total: newValue });\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttitle={price}\n\t\t\tonPress={() => {\n\t\t\t\tconsole.log('numpad');\n\t\t\t}}\n\t\t\tbackground=\"outline\"\n\t\t/>\n\t);\n};\n\nexport default FeeAndShippingPrice;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tfee: import('@wcpos/common/src/database').FeeLineDocument;\n\tcolumns: any;\n}\n\nconst FeeLine = ({ fee, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={fee} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={fee} />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={fee} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={fee} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default FeeLine;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tshipping: import('@wcpos/common/src/database').ShippingLineDocument;\n\tcolumns: any;\n}\n\nconst ShippingLine = ({ shipping, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={shipping} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\t\treturn <Text>{shipping.methodTitle}</Text>;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={shipping} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default ShippingLine;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport { from, of, combineLatest, zip, Observable } from 'rxjs';\nimport { switchMap, tap, catchError, map } from 'rxjs/operators';\nimport { useTranslation } from 'react-i18next';\nimport orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Pressable from '@wcpos/common/src/components/pressable';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Button from '@wcpos/common/src/components/button';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport LineItem from './rows/line-item';\nimport FeeLine from './rows/fee-line';\nimport ShippingLine from './rows/shipping-line';\n\ntype ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype LineItemDocument = import('@wcpos/common/src/database').LineItemDocument;\ntype FeeLineDocument = import('@wcpos/common/src/database').FeeLineDocument;\ntype ShippingLineDocument = import('@wcpos/common/src/database').ShippingLineDocument;\n\ninterface ICartTableProps {\n\torder: OrderDocument;\n\tcolumns: ColumnProps[];\n\titems: any;\n\tquery: any;\n\tonSort: Sort;\n\tui: any;\n}\n\nconst CartTable = ({ order, columns, items, query, onSort, ui }: ICartTableProps) => {\n\tconst { t } = useTranslation();\n\n\t// const items$ = useObservable(\n\t// \t(inputs$) =>\n\t// \t\tinputs$.pipe(\n\t// \t\t\t// @ts-ignore\n\t// \t\t\tswitchMap(([o, q]) => o.getCart$(q))\n\t// \t\t),\n\t// \t[order, query]\n\t// ) as Observable<any[]>;\n\n\t// const items = useObservableState(items$, []);\n\tconst footer = React.useMemo(() => {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={{ flexDirection: 'row', padding: 5, alignItems: 'center' }}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addFeeLine({ name: 'Fee', total: '10' });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text style={{ flex: 1 }}>Add fee</Text>\n\t\t\t\t\t<Icon name=\"addCircleOutline\" />\n\t\t\t\t</Pressable>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={{ flexDirection: 'row', padding: 5, alignItems: 'center' }}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addShippingLine({\n\t\t\t\t\t\t\tmethodTitle: 'Shipping',\n\t\t\t\t\t\t\tmethodId: 'test',\n\t\t\t\t\t\t\ttotal: '5',\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text style={{ flex: 1 }}>Add shipping</Text>\n\t\t\t\t\t<Icon name=\"addCircleOutline\" />\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t);\n\t}, [order]);\n\n\tuseWhyDidYouUpdate('CartTable', { columns, items, query, onSort, ui });\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={items}\n\t\t\tsort={onSort}\n\t\t\tsortBy={query.sortBy}\n\t\t\tsortDirection={query.sortDirection}\n\t\t\tfooter={footer}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row columns={columns}>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{t(`cart.column.label.${column.key}`)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }): React.ReactElement | null => {\n\t\t\t\t\tswitch (item.collection.name) {\n\t\t\t\t\t\tcase 'line_items':\n\t\t\t\t\t\t\treturn <LineItem item={item} columns={columns} />;\n\t\t\t\t\t\tcase 'fee_lines':\n\t\t\t\t\t\t\treturn <FeeLine fee={item} columns={columns} />;\n\t\t\t\t\t\tcase 'shipping_lines':\n\t\t\t\t\t\t\treturn <ShippingLine shipping={item} columns={columns} />;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default CartTable;\n","import styled from 'styled-components/native';\n\nexport const ScrollView = styled.ScrollView`\n\tmax-height: 200px;\n`;\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport TextInput from '../textinput';\nimport * as Styled from './styles';\n\nexport interface ComboboxChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tkey: string;\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface ComboboxProps {\n\t/**\n\t * Label to display above the input.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: ComboboxChoice[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: any) => void;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonSearch?: (value: string) => void;\n\t/**\n\t * Search term\n\t */\n\tsearchValue?: string | null;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Set this to `true` to hide the label on top of the input. `label` property is still mandatory for accessibility purposes, even if not shown.\n\t */\n\thideLabel?: boolean;\n}\n\n/**\n * Let the user search and choose one option from multiple ones.\n */\nexport const Combobox = ({\n\tlabel,\n\tchoices,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\tsearchValue,\n\tonSearch,\n\thideLabel,\n}: ComboboxProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.key}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onChange(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={open}\n\t\t\tactivator={\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel={label}\n\t\t\t\t\thideLabel={hideLabel}\n\t\t\t\t\tonFocus={showPopover}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tvalue={searchValue || selected}\n\t\t\t\t\tclearable\n\t\t\t\t\tonClear={() => onChange(null)}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonRequestClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n\t\t\thideBackdrop\n\t\t\tmatchWidth\n\t\t>\n\t\t\t<Styled.ScrollView>{choiceComponents}</Styled.ScrollView>\n\t\t</Popover>\n\t);\n};\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport {\n\tswitchMap,\n\ttap,\n\tdebounceTime,\n\tcatchError,\n\tdistinctUntilChanged,\n\tmap,\n} from 'rxjs/operators';\nimport orderBy from 'lodash/orderBy';\nimport { useTranslation } from 'react-i18next';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Combobox from '@wcpos/common/src/components/combobox';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface CustomerSelectProps {\n\tselectedCustomer?: CustomerDocument;\n\tonSelectCustomer: (value: CustomerDocument) => void;\n}\n\nconst CustomerSelect = ({ selectedCustomer, onSelectCustomer }: CustomerSelectProps) => {\n\tconst { t } = useTranslation();\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tconst customers = useObservableState(data$, []) as CustomerDocument[];\n\n\tconst choices = React.useMemo(() => {\n\t\tconst sortedCustomers = orderBy(customers, 'lastName');\n\n\t\treturn sortedCustomers.map((customer) => ({\n\t\t\tlabel: `${customer.firstName} ${customer.lastName}`,\n\t\t\tvalue: customer,\n\t\t\tkey: customer.localId,\n\t\t}));\n\t}, [customers]);\n\n\tuseWhyDidYouUpdate('Customer Select', {\n\t\tselectedCustomer,\n\t\tonSelectCustomer,\n\t\tcustomers,\n\t\tonSearch,\n\t\tquery,\n\t\tsetQuery,\n\t\tdata$,\n\t});\n\n\treturn (\n\t\t<Combobox\n\t\t\tlabel=\"Search customers\"\n\t\t\thideLabel\n\t\t\tchoices={choices}\n\t\t\tplaceholder={t('customers.search.placeholder')}\n\t\t\tselected={\n\t\t\t\tselectedCustomer\n\t\t\t\t\t? // @ts-ignore\n\t\t\t\t\t  `${selectedCustomer.firstName} ${selectedCustomer.lastName}`\n\t\t\t\t\t: ''\n\t\t\t}\n\t\t\tonSearch={onSearch}\n\t\t\tsearchValue={query.search}\n\t\t\tonChange={onSelectCustomer}\n\t\t/>\n\t);\n};\n\nexport default CustomerSelect;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport interface AddEditCustomerProps {\n\tcustomer?: import('@wcpos/common/src/database').CustomerDocument;\n}\n\nconst AddEditCustomer = ({ customer }: AddEditCustomerProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [visible, setVisible] = React.useState(false);\n\tconst [firstName, setFirstName] = React.useState(customer?.firstName);\n\tconst [email, setEmail] = React.useState(customer?.email);\n\tconst [selected, setSelected] = React.useState(0);\n\tconst show = React.useCallback(() => setVisible(true), []);\n\tconst hide = React.useCallback(() => setVisible(false), []);\n\n\tconst title = customer ? 'Edit Customer' : 'Add Customer';\n\n\tconst handleSave = async () => {\n\t\tconst currentCustomer = customer;\n\t\tif (!currentCustomer) {\n\t\t\tconst customersCollection = storeDB?.collections.customers;\n\t\t\t// @ts-ignore\n\t\t\tconst currentCustomer = await customersCollection?.insert({ firstName, email });\n\t\t} else {\n\t\t\tcurrentCustomer.atomicPatch({ firstName, email });\n\t\t}\n\n\t\tif (currentCustomer) {\n\t\t\t// @ts-ignore\n\t\t\tconst replicationState = currentCustomer.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t// showAuthLogin();\n\t\t\t\t\tconsole.log('need to login');\n\t\t\t\t}\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\t};\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"First Name\" value={firstName} onChange={setFirstName} />\n\t\t\t\t<TextInput label=\"Email\" value={email} onChange={setEmail} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>{customer ? <Tree data={customer.toJSON()} /> : null}</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Icon name=\"addCustomer\" onPress={show} tooltip=\"Add new customer\" />\n\t\t\t{visible && (\n\t\t\t\t<Dialog\n\t\t\t\t\ttitle={title}\n\t\t\t\t\topen\n\t\t\t\t\tonClose={hide}\n\t\t\t\t\tprimaryAction={{ label: 'Save', action: handleSave }}\n\t\t\t\t>\n\t\t\t\t\t<Tabs tabs={['Form', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</Tabs>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default AddEditCustomer;\n","import * as React from 'react';\nimport { useObservableSuspense, useObservableState, useObservable } from 'observable-hooks';\nimport { View } from 'react-native';\nimport Text from '@wcpos/common/src/components/text';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\n\ninterface Props {\n\torder: OrderDocument;\n}\n\nconst Totals = ({ order }: Props) => {\n\tconst total = useObservableState(order.total$, order.total);\n\tconst totalTax = useObservableState(order.totalTax$, order.totalTax);\n\n\treturn (\n\t\t<>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Total Tax:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{totalTax}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Order Total:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{total}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</>\n\t);\n};\n\nexport default Totals;\n","import * as React from 'react';\nimport LoginForm from './login-form';\n\n// @ts-ignore\nexport const AuthLoginContext = React.createContext(() => {});\n/**\n *\n */\nexport const AuthLoginProvider: React.FC = ({ children }) => {\n\tconst [visible, setVisible] = React.useState(false);\n\n\tconst show = () => {\n\t\tsetVisible(true);\n\t};\n\n\treturn (\n\t\t<AuthLoginContext.Provider value={show}>\n\t\t\t{children}\n\t\t\t{visible && <LoginForm onClose={() => setVisible(false)} />}\n\t\t</AuthLoginContext.Provider>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Button from '@wcpos/common/src/components/button';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\nimport Text from '@wcpos/common/src/components/text';\nimport useAuthLogin from '@wcpos/common/src/hooks/use-auth-login';\nimport { POSContext } from '../pos';\n\nexport interface ButtonsProps {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Buttons = ({ order }: ButtonsProps) => {\n\tconst { setCurrentOrder } = React.useContext(POSContext);\n\tconst [visible, setVisible] = React.useState(false);\n\tconst showAuthLogin = useAuthLogin();\n\n\treturn (\n\t\t<>\n\t\t\t<Button.Group style={{ marginBottom: 5 }}>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Add Note\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.atomicPatch({ customerNote: 'This is a note!' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Order Meta\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetVisible(true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Save\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\tconst replicationState = order.syncRestApi({\n\t\t\t\t\t\t\tpush: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t\t\t\tshowAuthLogin();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.run(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Button.Group>\n\t\t\t<Button.Group>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Void\"\n\t\t\t\t\ttype=\"critical\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\torder.remove();\n\t\t\t\t\t\tsetCurrentOrder(undefined);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ width: '80px' }}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Checkout\"\n\t\t\t\t\taccessoryRight={<Text type=\"inverse\">{order.total}</Text>}\n\t\t\t\t\ttype=\"success\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\torder.atomicPatch({ status: 'pos-checkout' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Button.Group>\n\t\t\t{visible && (\n\t\t\t\t<Dialog\n\t\t\t\t\ttitle=\"Order Data\"\n\t\t\t\t\topen\n\t\t\t\t\tonClose={() => setVisible(false)}\n\t\t\t\t\tprimaryAction={{ label: 'Save', action: () => setVisible(false) }}\n\t\t\t\t>\n\t\t\t\t\t<Dialog.Section>\n\t\t\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"Price Includes Tax\"\n\t\t\t\t\t\t\tchecked={order.pricesIncludeTax}\n\t\t\t\t\t\t\tonChange={(value) => order.atomicPatch({ pricesIncludeTax: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MetaData\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata={order.metaData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput label=\"Currency Symbol\" value={order.currencySymbol} />\n\t\t\t\t\t</Dialog.Section>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Buttons;\n","import * as React from 'react';\nimport { AuthLoginContext } from './auth-login-provider';\n\nexport const useAuthLogin = () => {\n\treturn React.useContext(AuthLoginContext);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { useObservableState, useObservable } from 'observable-hooks';\nimport { Observable } from 'rxjs';\nimport { switchMap, filter } from 'rxjs/operators';\nimport { isRxDocument } from 'rxdb/plugins/core';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport Tag from '@wcpos/common/src/components/tag';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from './table';\nimport CustomerSelect from '../../common/customer-select';\nimport AddCustomer from '../../common/add-edit-customer';\nimport UISettings from '../../common/ui-settings';\nimport Totals from './totals';\nimport Buttons from './buttons';\nimport { POSContext } from '../pos';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\n\ninterface ICartProps {\n\tui: any;\n\torders: OrderDocument[];\n}\n\nconst Cart = ({ ui, orders = [] }: ICartProps) => {\n\tuseWhyDidYouUpdate('Cart', { ui, orders });\n\tconst { currentOrder, setCurrentOrder, currentCustomer, setCurrentCustomer } =\n\t\tReact.useContext(POSContext);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst [query, setQuery] = React.useState({\n\t\tsortBy: 'id',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst handleSort = React.useCallback<Sort>(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery({ ...query, sortBy, sortDirection });\n\t\t},\n\t\t[query]\n\t);\n\n\tconst items$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tfilter(([o, q]) => isRxDocument(o)),\n\t\t\t\t// @ts-ignore\n\t\t\t\t// switchMap(([o, q]) => o.getCart$(q))\n\t\t\t\tswitchMap(([o, q]) => o.cart$)\n\t\t\t),\n\t\t[currentOrder, query]\n\t) as Observable<any[]>;\n\n\tconst items = useObservableState(items$, []);\n\n\tconst handleSelectCustomer = React.useCallback(\n\t\t(value: CustomerDocument) => {\n\t\t\tif (currentOrder) {\n\t\t\t\tcurrentOrder.addCustomer(value);\n\t\t\t}\n\t\t\tsetCurrentCustomer(value);\n\t\t},\n\t\t[currentOrder, setCurrentCustomer]\n\t);\n\n\tconst cartTabs = React.useMemo(() => {\n\t\treturn orders.map((order) => {\n\t\t\treturn order.total;\n\t\t});\n\t}, [orders]);\n\n\tconst onSelect = React.useCallback(\n\t\t(index) => {\n\t\t\tsetCurrentOrder(orders[index]);\n\t\t},\n\t\t[orders, setCurrentOrder]\n\t);\n\n\treturn (\n\t\t<Tabs\n\t\t\t// @ts-ignore\n\t\t\ttabs={cartTabs}\n\t\t\tselected={0}\n\t\t\tonSelect={onSelect}\n\t\t\tposition=\"bottom\"\n\t\t>\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t\t{currentCustomer ? (\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Text>Customer: </Text>\n\t\t\t\t\t\t\t\t<Tag\n\t\t\t\t\t\t\t\t\tremovable\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('edit customer');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonRemove={() => {\n\t\t\t\t\t\t\t\t\t\tsetCurrentCustomer(undefined);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>{`${currentCustomer.firstName} ${currentCustomer.lastName}`}</Tag>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<CustomerSelect onSelectCustomer={handleSelectCustomer} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</View>\n\t\t\t\t\t<AddCustomer />\n\t\t\t\t\t<UISettings ui={ui} />\n\t\t\t\t</Segment>\n\t\t\t\t{currentOrder ? (\n\t\t\t\t\t<Segment.Group grow>\n\t\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\torder={currentOrder}\n\t\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\tonSort={handleSort}\n\t\t\t\t\t\t\t\tui={ui}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Totals order={currentOrder} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Buttons order={currentOrder} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Segment.Group>\n\t\t\t\t) : (\n\t\t\t\t\t<Segment content=\"Add item to cart\" grow />\n\t\t\t\t)}\n\t\t\t</Segment.Group>\n\t\t</Tabs>\n\t);\n};\n\nexport default Cart;\n","import * as React from 'react';\nimport Button from '../button';\n\ntype Props = {\n\tsrc: string;\n\ttitle?: string;\n\tonMessage?: (event: MessageEvent) => void;\n\tonLoad?: (event: React.SyntheticEvent<HTMLIFrameElement, Event>) => void;\n\tonError?: (event: React.SyntheticEvent<HTMLIFrameElement, Event>) => void;\n};\n\nconst WebView: React.FC<Props> = ({ src, title, onError, onMessage, onLoad }) => {\n\t// eslint-disable-next-line consistent-return\n\tReact.useEffect(() => {\n\t\tif (typeof onMessage === 'function') {\n\t\t\twindow.addEventListener('message', onMessage);\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('message', onMessage);\n\t\t\t};\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<iframe\n\t\t\t\ttitle={title}\n\t\t\t\tsrc={src}\n\t\t\t\tonLoad={onLoad}\n\t\t\t\tonError={onError}\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"100%\"\n\t\t\t\t// @ts-ignore\n\t\t\t\tallowpaymentrequest\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default WebView;\n","import styled from 'styled-components/native';\nimport { Text } from '../text/text';\nimport Pressable from '../pressable';\n\nexport const Container = styled.View``;\n\nexport const LabelContainer = styled(Pressable)``;\n\nexport const Label = styled(Text)``;\n\nexport const ContentContainer = styled.View``;\n\nexport const Content = styled(Text)``;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Collapsable from '../collapsible';\nimport * as Styled from './styles';\n\ninterface AccordionItemProps {\n\tlabel: React.ReactNode;\n\tcontent: React.ReactNode;\n}\n\nexport interface AccordionProps {\n\titems: AccordionItemProps[];\n}\n\nexport const Accordion = ({ items }: AccordionProps) => {\n\tconst [currentIndex, setCurrentIndex] = React.useState<number | null>(null);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{items.map(({ label, content }, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Styled.LabelContainer\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tsetCurrentIndex(index === currentIndex ? null : index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Styled.Label>{label}</Styled.Label>\n\t\t\t\t\t\t</Styled.LabelContainer>\n\t\t\t\t\t\t<Collapsable open={index === currentIndex}>\n\t\t\t\t\t\t\t{typeof content === 'string' ? <Styled.Content>{content}</Styled.Content> : content}\n\t\t\t\t\t\t</Collapsable>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport WebView from '@wcpos/common/src/components/webview';\nimport Button from '@wcpos/common/src/components/button';\nimport Accordion from '@wcpos/common/src/components/accordion';\nimport { POSContext } from '../pos';\n\nexport const Checkout = () => {\n\tconst { currentOrder, currentCustomer } = React.useContext(POSContext);\n\tconst paymentUrlMeta = currentOrder?.metaData?.find((meta) => meta.key === '_pos_checkout_url');\n\n\tif (currentOrder?.status !== 'pos-checkout') {\n\t\tthrow Error('Order does not have the right status');\n\t}\n\n\tReact.useEffect(() => {\n\t\tasync function saveOrder() {\n\t\t\tconst replicationState = currentOrder?.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\n\t\tsaveOrder();\n\t}, [currentOrder]);\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<Text>Order Total: {currentOrder?.total}</Text>\n\t\t\t</Segment>\n\t\t\t<Segment grow>\n\t\t\t\t{paymentUrlMeta?.value ? (\n\t\t\t\t\t<Accordion\n\t\t\t\t\t\titems={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Stripe',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=stripe`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'BACS',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=bacs`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Cheque',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=cheque`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'COD',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=cod`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'PayPal',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=paypal`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Go Back\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tcurrentOrder.atomicPatch({ status: 'pos-open' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n","import styled, { css } from 'styled-components/native';\nimport Platform from '@wcpos/common/src/lib/platform';\n\nexport const View = styled.View<{ hovered: boolean }>`\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: ${({ hovered }) => (hovered ? '#f5f5f5' : 'transparent')};\n\twidth: 10px;\n\n\t${\n\t\tPlatform.OS !== 'ios' &&\n\t\tPlatform.OS !== 'android' &&\n\t\tcss`\n\t\t\tcursor: col-resize;\n\t\t`\n\t}}\n`;\n","import * as React from 'react';\nimport { Pressable } from 'react-native';\nimport * as Styled from './styles';\nimport Icon from '../icon';\n\nexport interface GutterProps {\n\tchildren?: React.ReactNode;\n\tstyle?: any;\n}\n\nexport const Gutter = ({ children, style }: GutterProps) => {\n\treturn (\n\t\t<Pressable style={[{ flexDirection: 'row', height: '100%' }, style]}>\n\t\t\t{({\n\t\t\t\t// @ts-ignore\n\t\t\t\thovered,\n\t\t\t}) => <Styled.View hovered={hovered}>{children || <Icon name=\"more-vert\" />}</Styled.View>}\n\t\t</Pressable>\n\t);\n};\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap, switchMap, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { useTranslation } from 'react-i18next';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n// import useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\n// import useIdAudit from '@wcpos/common/src/hooks/use-id-audit';\nimport useStoreDB from '@wcpos/common/src/hooks/use-store-db';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Search from '@wcpos/common/src/components/search';\nimport Text from '@wcpos/common/src/components/text';\nimport http from '@wcpos/common/src/lib/http';\nimport useSite from '@wcpos/common/src/hooks/use-site';\nimport useWpCredentials from '@wcpos/common/src/hooks/use-wp-credentials';\nimport { useNavigation } from '@react-navigation/native';\nimport Table from '../../common/table';\nimport Footer from './footer';\nimport UiSettings from '../../common/ui-settings';\nimport cells from './cells';\n\ninterface POSProductsProps {\n\tui: any;\n\tstoreDB: any;\n}\n\nconst useProductQuery = () => {\n\tconst { storeDB } = useStoreDB();\n\tconst [query, setQuery] = React.useState({\n\t\tsearch: '',\n\t\tsortBy: 'name',\n\t\tsortDirection: 'asc',\n\t\tfilters: {\n\t\t\tcategory: null,\n\t\t\ttag: null,\n\t\t},\n\t});\n\n\tconst data$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\t// distinctUntilChanged((a, b) => a[0] === b[0]),\n\t\t\t\t// debounceTime(150),\n\t\t\t\tswitchMap(([q]) => {\n\t\t\t\t\t// const regexp = new RegExp(escape(q.search), 'i');\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst RxQuery = storeDB.products.query(q);\n\t\t\t\t\t// \t.find({\n\t\t\t\t\t// \t\tselector: {\n\t\t\t\t\t// \t\t\tdateCreatedGmt: { $regex: regexp },\n\t\t\t\t\t// \t\t},\n\t\t\t\t\t// \t})\n\t\t\t\t\t// \t// @ts-ignore\n\t\t\t\t\t// \t.sort({ [q.sortBy]: q.sortDirection });\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t}),\n\t\t\t\t// shareReplay(1),\n\t\t\t\tcatchError((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn err;\n\t\t\t\t})\n\t\t\t),\n\t\t[query]\n\t);\n\n\treturn { data$, query, setQuery };\n};\n\nconst useAudit = () => {\n\tconst { storeDB } = useStoreDB();\n\tconst { site } = useSite();\n\tconst { wpCredentials } = useWpCredentials();\n\tconst navigation = useNavigation();\n\n\tReact.useEffect(() => {\n\t\thttp\n\t\t\t// @ts-ignore\n\t\t\t.get('products', {\n\t\t\t\tbaseURL: site.wcApiUrl,\n\t\t\t\tparams: { fields: ['id', 'name'], posts_per_page: -1 },\n\t\t\t\theaders: { 'X-WCPOS': '1', Authorization: `Bearer ${wpCredentials.jwt}` },\n\t\t\t})\n\t\t\t.then(({ data }: any) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn storeDB.products.auditIdsFromServer(data);\n\t\t\t})\n\t\t\t.catch(({ response }) => {\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tnavigation.navigate('Modal', { login: true });\n\t\t\t\t}\n\t\t\t});\n\t}, [storeDB.products]);\n};\n\n/**\n *\n */\nconst Products = ({ ui, storeDB }: POSProductsProps) => {\n\t// const { t } = useTranslation();\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\t// @ts-ignore\n\tconst totalRecords = useObservableState(storeDB?.collections.products.totalRecords$);\n\tconst [isSyncing, setIsSyncing] = React.useState<boolean>(false);\n\tconst [recordsShowing, setRecordsShowing] = React.useState<number>(0);\n\tconst { data$, query, setQuery } = useProductQuery();\n\tconst products = useObservableState(data$, []);\n\tuseAudit();\n\tconsole.log(products);\n\t// const { data$, query, setQuery } = useDataObservable('products', {\n\t// \tsearch: '',\n\t// \tsortBy: 'name',\n\t// \tsortDirection: 'asc',\n\t// \tfilters: {\n\t// \t\tcategory: null,\n\t// \t\ttag: null,\n\t// \t},\n\t// });\n\t// useIdAudit('products');\n\n\t/**\n\t *\n\t */\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<Search\n\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\tvalue={query.search}\n\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\tfilters={filters}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t\t{/* <Segment grow>\n\t\t\t\t<Table\n\t\t\t\t\tcollection={storeDB.collections.products}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata$={data$}\n\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\tcells={cells}\n\t\t\t\t/>\n\t\t\t</Segment> */}\n\t\t\t<Segment style={{ alignItems: 'flex-end' }}>\n\t\t\t\t<>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\tShowing {recordsShowing} of {totalRecords}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default Products;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\nexport type ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\ntype CellRenderProps = {\n\tcellData: any;\n\tcolumn: ColumnProps;\n\tgetCellProps: GetCellPropsFunction;\n};\nexport type ItemProp =\n\t| import('@wcpos/common/src/database').ProductDocument\n\t| import('@wcpos/common/src/database').OrderDocument\n\t| import('@wcpos/common/src/database').CustomerDocument;\nexport type CellsProp = Record<\n\tstring,\n\tReact.FunctionComponent<{ item: any; column: any; setQuery?: any }>\n>;\n\ninterface CommonRowProps {\n\titem: ItemProp;\n\tcolumns: ColumnProps[];\n\tcells: CellsProp;\n\tsetQuery: any;\n}\n\n// @ts-ignore\nconst DefaultCell = ({ item, column }) => {\n\treturn <Text>{String(item[column.key])}</Text>;\n};\n\n/**\n *\n */\nconst CommonRow = ({ item, columns, cells, setQuery }: CommonRowProps) => {\n\tconst forceRender = useObservableState(item.$);\n\tuseWhyDidYouUpdate('Common Table Row', { forceRender, item, columns, cells });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column, getCellProps }: CellRenderProps): React.ReactElement => {\n\t\t\t\tconst Cell = cells[column.key] ? cells[column.key] : DefaultCell;\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t<Cell item={item} column={column} setQuery={setQuery} />\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default React.memo(CommonRow);\n","import * as React from 'react';\nimport { Observable } from 'rxjs';\nimport { useObservableState } from 'observable-hooks';\nimport { useTranslation } from 'react-i18next';\nimport _flatten from 'lodash/flatten';\nimport _orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Row, { CellsProp, ItemProp, ColumnProps } from './row';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\n\ninterface CommonTableProps {\n\tcollection: any;\n\tcolumns: ColumnProps[];\n\tdata$: Observable<ItemProp[]>;\n\tsetQuery: any;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tcells: CellsProp;\n}\n\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\n\n/**\n *\n */\nconst CommonTable = ({\n\tcollection,\n\tcolumns,\n\tdata$,\n\tsetQuery,\n\tsortBy: _sortBy,\n\tsortDirection: _sortDirection,\n\tcells,\n}: CommonTableProps) => {\n\tconst { t } = useTranslation();\n\tconst data = useObservableState(data$, []);\n\t// const syncState = React.useRef<number[]>([]);\n\n\tconst handleSort: Sort = React.useCallback(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery((prev) => ({ ...prev, sortBy, sortDirection }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t * maybe in memory sort\n\t */\n\tconst maybeSortedData = React.useMemo(() => {\n\t\tconst indexes = _flatten(collection.schema.indexes);\n\t\tif (!indexes.includes(_sortBy)) {\n\t\t\treturn _orderBy(data, [_sortBy], [_sortDirection]);\n\t\t}\n\t\treturn data;\n\t}, [_sortBy, _sortDirection, collection.schema.indexes, data]);\n\n\t/**\n\t *\n\t */\n\tconst getItemLayout = React.useCallback(\n\t\t(d, index) => ({ length: 100, offset: 100 * index, index }),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('Common Table', {\n\t\tcollection,\n\t\tcolumns,\n\t\tdata,\n\t\tmaybeSortedData,\n\t\tsetQuery,\n\t\t_sortBy,\n\t\t_sortDirection,\n\t\tcells,\n\t\t// syncingCustomers,\n\t\tt,\n\t});\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={maybeSortedData}\n\t\t\tsort={handleSort}\n\t\t\tsortBy={_sortBy}\n\t\t\tsortDirection={_sortDirection}\n\t\t\t// // @ts-ignore\n\t\t\t// onViewableItemsChanged={handleVieweableItemsChanged}\n\t\t\t// @ts-ignore\n\t\t\tgetItemLayout={getItemLayout}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{t(`${collection.name}.column.label.${column.key}`)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }) => (\n\t\t\t\t\t<Row item={item} columns={columns} cells={cells} setQuery={setQuery} />\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default React.memo(CommonTable);\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Image = ({ item: product }: Props) => {\n\treturn <Img src={product.thumbnail} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Image;\n","import * as React from 'react';\nimport TextInput from '@wcpos/common/src/components/textinput';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Name = ({ item: product }: Props) => {\n\tconst handleChangeText = async (newValue: string) => {\n\t\tawait product.atomicPatch({ name: newValue });\n\t};\n\n\treturn <TextInput label=\"Name\" value={product.name} onChange={handleChangeText} hideLabel />;\n};\n\nexport default Name;\n","import * as React from 'react';\nimport Tag from '@wcpos/common/src/components/tag';\nimport set from 'lodash/set';\n\ninterface ProductCategoriesProps {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tsetQuery?: any;\n}\n\nconst ProductCategories = ({ item: product, setQuery }: ProductCategoriesProps) => {\n\tconst { categories } = product;\n\n\t/**\n\t *\n\t */\n\tconst handleSelectCategory = React.useCallback(\n\t\t(category: any) => {\n\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', category));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(categories)) {\n\t\t\treturn categories.map((cat: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: cat.id,\n\t\t\t\t\tlabel: cat.name,\n\t\t\t\t\taction: () => handleSelectCategory(cat),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [categories, handleSelectCategory]);\n\n\t/**\n\t *\n\t */\n\treturn categories ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductCategories;\n","import * as React from 'react';\nimport Tag from '@wcpos/common/src/components/tag';\nimport set from 'lodash/set';\n\ntype ProductTagsProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tsetQuery?: any;\n};\n\nconst ProductTags = ({ item: product, setQuery }: ProductTagsProps) => {\n\tconst { tags } = product;\n\n\t/**\n\t *\n\t */\n\tconst handleSelectTag = React.useCallback(\n\t\t(tag: any) => {\n\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', tag));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(tags)) {\n\t\t\treturn tags.map((tag: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: tag.id,\n\t\t\t\t\tlabel: tag.name,\n\t\t\t\t\taction: () => handleSelectTag(tag),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [tags, handleSelectTag]);\n\n\t/**\n\t *\n\t */\n\treturn tags ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductTags;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedPrice = ({ item, column }: Props) => {\n\t// const { userDB, storeID } = useAppState();\n\t// const [currency, setCurrency] = React.useState();\n\n\t// // get currency settings\n\t// React.useEffect(() => {\n\t// \tasync function fetchStore() {\n\t// \t\tif (storeID) {\n\t// \t\t\tconst store = await userDB?.collections.stores.findOne(storeID).exec();\n\t// \t\t\tsetCurrency(store?.accounting.currency);\n\t// \t\t}\n\t// \t}\n\t// \tfetchStore();\n\t// }, []);\n\n\treturn <Format.Currency symbol=\"$\">{item[column.key]}</Format.Currency>;\n};\n\nexport default FormattedPrice;\n","import styled, { css } from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Item = styled(Pressable)`\n\tpadding: 5px 10px;\n`;\n\nexport const Label = styled(Text)<{ hovered: boolean }>`\n\t${({ hovered, theme, type }) =>\n\t\thovered &&\n\t\t// @ts-ignore\n\t\t(type === 'critical') | (type === 'warning') &&\n\t\t`\n    color: ${theme.TEXT_COLOR_INVERSE};\n  `}\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport { useTheme } from 'styled-components/native';\nimport * as Styled from './styles';\n\nexport interface ItemProps {\n\t/**\n\t *\n\t */\n\tchildren?: string;\n\t/**\n\t *\n\t */\n\tlabel?: string;\n\t/**\n\t *\n\t */\n\tonPress?: (value: any) => void;\n\t/**\n\t *\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n\t/**\n\t *\n\t */\n\tstyle?: ViewStyle;\n}\n\nexport const Item = ({ children, label = '', onPress, action, type, style }: ItemProps) => {\n\tconst theme = useTheme();\n\n\t/**\n\t *\n\t */\n\tconst handlePress = React.useCallback(() => {\n\t\tif (typeof action === 'function') {\n\t\t\taction();\n\t\t}\n\t\tif (typeof onPress === 'function') {\n\t\t\tonPress(label);\n\t\t}\n\t}, [action, label, onPress]);\n\n\t/**\n\t *\n\t */\n\tconst calculatedStyled = React.useCallback(\n\t\t({ hovered }) => {\n\t\t\tlet hoverBackgroundColor = theme.MENU_ITEM_HOVER_BACKGROUND_COLOR;\n\t\t\tif (type) {\n\t\t\t\tconst color = `color_${type}`.toUpperCase();\n\t\t\t\t// @ts-ignore\n\t\t\t\thoverBackgroundColor = theme[color];\n\t\t\t}\n\t\t\treturn [{ backgroundColor: hovered ? hoverBackgroundColor : 'transparent' }, style];\n\t\t},\n\t\t[style, theme, type]\n\t);\n\n\treturn (\n\t\t<Styled.Item onPress={handlePress} style={calculatedStyled}>\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\t({ hovered }) => (\n\t\t\t\t\t<Styled.Label type={type} hovered={hovered}>\n\t\t\t\t\t\t{children || label}\n\t\t\t\t\t</Styled.Label>\n\t\t\t\t)\n\t\t\t}\n\t\t</Styled.Item>\n\t);\n};\n","import * as React from 'react';\nimport snakeCase from 'lodash/snakeCase';\nimport { Item, ItemProps } from './item';\nimport * as Styled from './styles';\n\n/**\n * Action with a Label.\n */\nexport interface TextAction {\n\t/**\n\t * Label to display.\n\t */\n\tlabel: string;\n\t/**\n\t * Action to execute on click.\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n}\n\n// export interface IconAction {\n// \t/**\n// \t * Icon to display.\n// \t */\n// \ticon: IconName;\n// \t/**\n// \t * Color of the icon.\n// \t */\n// \tcolor?: IconProps['color'];\n// \t/**\n// \t * Action to execute on click.\n// \t */\n// \taction?: () => void;\n// }\n\n// export type TextWithIconAction = TextAction & IconAction;\n// export type TextWithOptionalIconAction = TextAction & Partial<IconAction>;\n\nexport interface MenuProps {\n\t/**\n\t *\n\t */\n\titems: (TextAction | string)[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n}\n\nexport const Menu: React.FC<MenuProps> & { Item: typeof Item } = ({\n\titems,\n\t// @ts-ignore\n\tonSelect = () => {},\n}) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{items.map((rawItem, index) => {\n\t\t\t\tconst item = typeof rawItem === 'string' ? { label: rawItem } : rawItem;\n\t\t\t\treturn (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={snakeCase(`${item.label}_${index}`)}\n\t\t\t\t\t\t{...item}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tonSelect(item);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Container>\n\t);\n};\n\nexport type MenuItemProps = ItemProps;\nMenu.Item = Item;\n","import * as React from 'react';\nimport get from 'lodash/get';\nimport Popover from '../popover';\nimport Menu from '../menu';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport Arrow from '../arrow';\nimport * as Styled from './styles';\n\ntype TextAction = import('../menu/menu').TextAction;\n\n/**\n *\n */\nexport interface DropdownProps {\n\t/**\n\t *\n\t */\n\titems: string[] | TextAction[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n\t/**\n\t *\n\t */\n\tactivator: React.ReactElement | string;\n}\n\n/**\n *\n */\nexport const Dropdown = ({ items, onSelect, activator }: DropdownProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst show = React.useCallback(() => setOpen(true), []);\n\tconst hide = React.useCallback(() => setOpen(false), []);\n\n\tconst _activator = React.useMemo(() => {\n\t\t// wrap string\n\t\tif (typeof activator === 'string') {\n\t\t\treturn (\n\t\t\t\t<Text onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t\t{activator}\n\t\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t\t// special case for icon\n\t\tif (React.isValidElement(activator) && get(activator, 'type.name') === 'Icon') {\n\t\t\t// @ts-ignore\n\t\t\treturn React.cloneElement(activator, { onPress: show });\n\t\t}\n\t\t// else wrap in Pressable\n\t\treturn (\n\t\t\t<Pressable onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t{activator}\n\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t</Pressable>\n\t\t);\n\t}, [activator, open, show]);\n\n\treturn (\n\t\t<Popover\n\t\t\tactivator={_activator}\n\t\t\tonRequestClose={hide}\n\t\t\topen={open}\n\t\t\thideBackdrop\n\t\t\tplacement=\"bottom-end\"\n\t\t\tpopoverStyle={{ paddingLeft: 0, paddingRight: 0 }}\n\t\t>\n\t\t\t<Menu items={items} onSelect={onSelect} />\n\t\t</Popover>\n\t);\n};\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport Arrow from '../arrow';\nimport BaseInput, { BaseInputContainer } from '../base-input';\n\nexport interface SelectChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface SelectProps {\n\t/**\n\t * Label for the Select.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: SelectChoice[] | string[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: string) => void;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Additional text to help the user.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Display an error state.\n\t */\n\terror?: boolean | string;\n\t/**\n\t * Disable the input and choice selection.\n\t */\n\tdisabled?: boolean;\n}\n\nconst maxHeight = 300;\n\n/**\n * Let the user choose one option from multiple ones.\n */\nexport const Select = ({\n\tlabel,\n\tchoices: choicesRaw,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\thelpText,\n\terror = false,\n\tdisabled = false,\n}: SelectProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst hidePopover = React.useCallback(() => setOpen(false), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choices = React.useMemo(\n\t\t() =>\n\t\t\tchoicesRaw.map((choice) =>\n\t\t\t\ttypeof choice === 'string' ? { label: choice, value: choice } : choice\n\t\t\t),\n\t\t[choicesRaw]\n\t);\n\n\tconst selectedChoice = React.useMemo(\n\t\t() => choices.find((x) => x.value === selected),\n\t\t[choices, selected]\n\t);\n\n\tconst handleSelect = (value: string) => {\n\t\tonChange(value);\n\t\tsetOpen(false);\n\t};\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.value}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => handleSelect(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<BaseInputContainer\n\t\t\tlabel={label}\n\t\t\tdisabled={disabled}\n\t\t\thelpText={helpText}\n\t\t\terror={error}\n\t\t\tonLabelClick={showPopover}\n\t\t>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tactivator={\n\t\t\t\t\t<BaseInput\n\t\t\t\t\t\tvalue={selectedChoice?.label ?? ''}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tfocused={open}\n\t\t\t\t\t\tonPress={showPopover}\n\t\t\t\t\t\trightAccessory={<Arrow direction={open ? 'up' : 'down'} />}\n\t\t\t\t\t\tstyle={{ minWidth: '100px' }}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonRequestClose={hidePopover}\n\t\t\t\tpopoverStyle={{ maxHeight }}\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\thideBackdrop\n\t\t\t\tmatchWidth\n\t\t\t>\n\t\t\t\t<ScrollView>{choiceComponents}</ScrollView>\n\t\t\t</Popover>\n\t\t</BaseInputContainer>\n\t);\n};\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ product, onClose }: ProductModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Name\" value={product.name} />\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\tchoices={['draft', 'pending', 'private', 'publish']}\n\t\t\t\t\tselected={product.status}\n\t\t\t\t/>\n\t\t\t\t<TextInput label=\"Price\" value={product.price} />\n\t\t\t\t<TextInput label=\"Regular Price\" value={product.regularPrice} />\n\t\t\t\t<TextInput label=\"Sale Price\" value={product.salePrice} />\n\t\t\t\t<Checkbox label=\"On Sale\" checked={product.onSale} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={product.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog title={product.name} open onClose={onClose} primaryAction={{ label: 'Save' }}>\n\t\t\t<Tabs tabs={['Product', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst DeleteDialog = ({ product, onClose }: ProductModalProps) => {\n\treturn (\n\t\t<Dialog\n\t\t\ttitle=\"Confirm\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{\n\t\t\t\tlabel: 'Delete',\n\t\t\t\taction: () => {\n\t\t\t\t\tconsole.log('delete locally and on server');\n\t\t\t\t},\n\t\t\t\ttype: 'critical',\n\t\t\t}}\n\t\t\tsecondaryActions={[\n\t\t\t\t{ label: 'Delete locally', action: product.remove },\n\t\t\t\t{ label: 'Cancel', action: onClose },\n\t\t\t]}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t<Text>You are about to delete {product.name}</Text>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default DeleteDialog;\n","import image from './image';\nimport name from './name';\nimport categories from '../../common/product-categories';\nimport tags from '../../common/product-tags';\nimport Price from '../../common/price';\nimport actions from './actions';\nimport dateCreated from '../../common/date';\n\nexport default {\n\timage,\n\tname,\n\tcategories,\n\ttags,\n\tregularPrice: Price,\n\tsalePrice: Price,\n\tactions,\n\tdateCreated,\n};\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport ProductModal from './modal';\nimport DeleteDialog from './delete-dialog';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Actions = ({ item: product }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst [showDialog, setShowDialog] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\tconst replicationState = product.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tproduct.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: () => setShowDialog(true), type: 'critical' },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{showDialog && <DeleteDialog product={product} onClose={() => setShowDialog(false)} />}\n\t\t\t{visible && <ProductModal product={product} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedDate = ({ item, column }: Props) => {\n\treturn item[column.key] ? <Format.Date value={item[column.key]} /> : null;\n};\n\nexport default FormattedDate;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\n/**\n *\n */\nconst Products = () => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.products);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\t// @ts-ignore\n\tconst totalRecords = useObservableState(storeDB?.collections.products.totalRecords$);\n\tconst [isSyncing, setIsSyncing] = React.useState<boolean>(false);\n\tconst [recordsShowing, setRecordsShowing] = React.useState<number>(0);\n\tconst { data$, query, setQuery } = useDataObservable('products', {\n\t\tsearch: '',\n\t\tsortBy: 'name',\n\t\tsortDirection: 'asc',\n\t\tfilters: {\n\t\t\tcategory: null,\n\t\t\ttag: null,\n\t\t},\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\tfilters={filters}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment grow>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcollection={storeDB.collections.products}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment style={{ alignItems: 'flex-end' }}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tShowing {recordsShowing} of {totalRecords}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Products;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tree from '@wcpos/common/src/components/tree';\n\ntype OrderModalProps = {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ order, onClose }: OrderModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={order.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog open title=\"Order\" onClose={onClose} primaryAction={{ label: 'Save ' }}>\n\t\t\t<Tabs tabs={['Order', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport OrderModal from './modal';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Actions = ({ item: order }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst navigation = useNavigation();\n\n\tconst handleSync = () => {\n\t\tconsole.log('sync');\n\t};\n\n\tconst handleOpen = React.useCallback(() => {\n\t\torder.atomicPatch({ status: 'pos-open' });\n\t\t// @ts-ignore\n\t\tnavigation.navigate('POS', { currentOrder: order });\n\t}, [navigation, order]);\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Open in Cart', action: handleOpen },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: order.remove },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{visible && <OrderModal order={order} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: order, column }: Props) => {\n\tconst address = order[column.key];\n\n\treturn address ? <Format.Address address={address} showName={false} /> : <Text.Skeleton />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Customer = ({ item: order }: Props) => {\n\treturn order.customer_id ? <Text>{order.customer_id}</Text> : <Text.Skeleton />;\n};\n\nexport default Customer;\n","import actions from './actions';\nimport Address from './address';\nimport customer from './customer';\nimport customerNote from './note';\nimport status from './status';\n\nexport default {\n\tactions,\n\tbilling: Address,\n\tshipping: Address,\n\tcustomer,\n\tcustomerNote,\n\tstatus,\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype OrderNoteProps = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Note = ({ item: order }: OrderNoteProps) => {\n\tif (!order.note) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip content={order.note}>\n\t\t\t<Icon name=\"note\" />\n\t\t</Tooltip>\n\t);\n};\n\nexport default Note;\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Status = ({ item: order }: Props) => {\n\treturn order.status ? (\n\t\t<Tooltip content={order.status}>\n\t\t\t<Icon name={order.status} />\n\t\t</Tooltip>\n\t) : (\n\t\t<Icon.Skeleton />\n\t);\n};\n\nexport default Status;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport { useObservableState, useObservable, useObservableSuspense } from 'observable-hooks';\nimport { switchMap, tap, debounceTime, catchError, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Button from '@wcpos/common/src/components/button';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ninterface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\nconst Orders = () => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.orders);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('orders', {\n\t\tsearch: '',\n\t\tsortBy: 'dateCreatedGmt',\n\t\tsortDirection: 'desc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading orders...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Orders\"\n\t\t\t\t\t\t\tplaceholder=\"Search Orders\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.orders}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Orders;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\n\nexport interface AddCustomerProps {\n\tonClose: () => void;\n\tcustomer?: import('@wcpos/common/src/database').CustomerDocument;\n}\n\nconst AddCustomer = ({ onClose, customer }: AddCustomerProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [firstName, setFirstName] = React.useState(customer?.firstName);\n\tconst [email, setEmail] = React.useState(customer?.email);\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst title = customer ? 'Edit Customer' : 'Add Customer';\n\n\tconst handleSave = async () => {\n\t\tconst currentCustomer = customer;\n\t\tif (!currentCustomer) {\n\t\t\tconst customersCollection = storeDB?.collections.customers;\n\t\t\t// @ts-ignore\n\t\t\tconst currentCustomer = await customersCollection?.insert({ firstName, email });\n\t\t} else {\n\t\t\tcurrentCustomer.atomicPatch({ firstName, email });\n\t\t}\n\n\t\tif (currentCustomer) {\n\t\t\t// @ts-ignore\n\t\t\tconst replicationState = currentCustomer.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t// showAuthLogin();\n\t\t\t\t\tconsole.log('need to login');\n\t\t\t\t}\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\t};\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"First Name\" value={firstName} onChange={setFirstName} />\n\t\t\t\t<TextInput label=\"Email\" value={email} onChange={setEmail} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>{customer ? <Tree data={customer.toJSON()} /> : null}</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={title}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: handleSave }}\n\t\t>\n\t\t\t<Tabs tabs={['Form', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default AddCustomer;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: customer, column }: Props) => {\n\treturn <Format.Address address={customer[column.key]} showName={false} />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Name = ({ item: customer, column }: Props) => {\n\tconst name = customer[column.key];\n\n\treturn name !== undefined ? <Text>{name}</Text> : <Text.Skeleton />;\n};\n\nexport default Name;\n","import avatarUrl from './avatar';\nimport actions from './actions';\nimport Address from './address';\nimport Name from './name';\nimport email from './email';\n\nexport default {\n\tavatarUrl,\n\tfirstName: Name,\n\tlastName: Name,\n\temail,\n\tbilling: Address,\n\tshipping: Address,\n\tactions,\n};\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Avatar = ({ item: customer }: Props) => {\n\treturn <Img src={customer.avatarUrl} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Avatar;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Email = ({ item: customer }: Props) => {\n\treturn customer.email !== undefined ? <Text>{customer.email}</Text> : <Text.Skeleton />;\n};\n\nexport default Email;\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport EditCustomer from '../add-customer-modal';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Actions = ({ item: customer }: Props) => {\n\tconst [showModal, setShowModal] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\t// @ts-ignore\n\t\tconst replicationState = customer.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tcustomer.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Edit', action: () => setShowModal(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: handleDelete },\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{showModal && <EditCustomer onClose={() => setShowModal(false)} customer={customer} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport {\n\tuseObservableState,\n\tuseObservable,\n\tuseObservableSuspense,\n\tuseSubscription,\n} from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype CustomersScreenProps = import('@wcpos/common/src/navigators/main').CustomersScreenProps;\n\nconst Customers = ({ navigation }: CustomersScreenProps) => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.customers);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\tuseWhyDidYouUpdate('Customer Page', { data$, query, ui, columns, storeDB, navigation });\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading customers...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Customers\"\n\t\t\t\t\t\t\tplaceholder=\"Search Customers\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'add',\n\t\t\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('show modal');\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t<UiSettings ui={ui} />,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.customers}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Customers;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\nimport useUser from '@wcpos/common/src/hooks/use-user';\nimport forEach from 'lodash/forEach';\nimport map from 'lodash/map';\n\ntype UserDatabase = import('@wcpos/common/src/database').UserDatabase;\n\nconst AuthDB = () => {\n\t// const { userDB } = useUser();\n\tconst [counts, setCounts] = React.useState<any[]>([]);\n\n\t// subscribe to all collection changes\n\t// forEach(userDB.collections, (collection, key) => {\n\t// \tcollection.$.subscribe((changeEvent) => console.log(key, changeEvent));\n\t// });\n\n\tReact.useEffect(() => {\n\t\t(async function init() {\n\t\t\t// const promises = map(userDB.collections, async (collection, key) => {\n\t\t\t// \tconst records = await collection.find().exec();\n\t\t\t// \treturn {\n\t\t\t// \t\tname: key,\n\t\t\t// \t\tcount: records.length,\n\t\t\t// \t};\n\t\t\t// });\n\t\t\t// const resolved = await Promise.all(promises);\n\t\t\t// setCounts(resolved);\n\t\t})();\n\t}, []);\n\tconst deleteAll = async (table: string) => {\n\t\t// const query = userDB.collections.map[table].query();\n\t\t// await userDB.action(async () => {\n\t\t// \tawait query.destroyAllPermanently();\n\t\t// });\n\t};\n\n\tconst printToConsole = async (collection: string) => {\n\t\t// @ts-ignore\n\t\tconst data = await userDB.collections[collection].find().exec();\n\t\tconsole.log(data);\n\t};\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={counts}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\t// flexGrow={flexGrow}\n\t\t\t\t\t\t\t\t// flexShrink={flexShrink}\n\t\t\t\t\t\t\t\t// width={width}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: any) => (\n\t\t\t\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t\t\t\t{({ column, getCellProps }: any) => {\n\t\t\t\t\t\t\tif (column.key === 'actions') {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteAll(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Info\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tprintToConsole(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <Table.Body.Row.Cell {...getCellProps()} />;\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Table.Body.Row>\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default AuthDB;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\ntype Collection = import('rxdb/plugins/core').RxCollection;\n\nconst Row = ({ item, columns }: { item: Collection; columns: any[] }) => {\n\t// @ts-ignore\n\tconst count = useObservableState(item.totalRecords$);\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column }: any) => {\n\t\t\t\tswitch (column.key) {\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={item.name} />;\n\t\t\t\t\tcase 'count':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={count} />;\n\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nconst StoreDB = () => {\n\tconst { storeDB } = useAppState() as { storeDB: StoreDatabase };\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={Object.values(storeDB.collections)}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>{({ item }: any) => <Row item={item} columns={columns} />}</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default StoreDB;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport AuthDB from './auth-db';\nimport StoreDB from './store-db';\nimport Segment from '../../components/segment';\n\nconst Support = () => {\n\treturn (\n\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Authentication Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<AuthDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Store Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<StoreDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</View>\n\t);\n};\n\nexport default Support;\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { View } from 'react-native';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\nimport Select from '@wcpos/common/src/components/select';\nimport Table from '@wcpos/common/src/components/table';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface UserSettingsProps {\n\tonClose: () => void;\n}\n\nconst UserSettings = ({ onClose }: UserSettingsProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [country, setCountry] = React.useState('GB');\n\n\tconst taxRates$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tswitchMap((q) => {\n\t\t\t\t\tconst RxQuery = storeDB?.collections.taxes.find().where('country').eq(country);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t})\n\t\t\t),\n\t\t[country]\n\t);\n\n\tconst taxRates = useObservableState(taxRates$, []);\n\tconsole.log(taxRates);\n\n\treturn (\n\t\t<Dialog\n\t\t\tsectioned\n\t\t\ttitle=\"Settings\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<View style={{ zIndex: 999999 }}>\n\t\t\t\t<Text>Store location: </Text>\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\tplaceholder=\"GB\"\n\t\t\t\t\tchoices={[\n\t\t\t\t\t\t{ label: 'GB', value: 'GB' },\n\t\t\t\t\t\t{ label: 'US', value: 'US' },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Table\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{ key: 'country', label: 'Country' },\n\t\t\t\t\t\t{ key: 'name', label: 'Name' },\n\t\t\t\t\t\t{ key: 'rate', label: 'Rate' },\n\t\t\t\t\t]}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata={taxRates}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</Dialog>\n\t);\n};\n\nexport default UserSettings;\n","import styled from 'styled-components/native';\n\nexport const DropDown = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\n// import useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Avatar from '@wcpos/common/src/components/avatar';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Text from '@wcpos/common/src/components/text';\nimport UserSettings from './user-settings';\nimport * as Styled from './styles';\n\n// interface Props {\n// user: import('@wcpos/common/src/database').UserDocument;\n// }\n\nexport const UserMenu = () => {\n\tconst [showSettings, setShowSettings] = React.useState(false);\n\tconst navigation = useNavigation();\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={\n\t\t\t\t\t<Styled.DropDown>\n\t\t\t\t\t\t<Text type=\"inverse\">Test</Text>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsrc=\"https://secure.gravatar.com/avatar/a2a53c07cdd4a8aa81c043baafd0915f\"\n\t\t\t\t\t\t\t// placeholder=\"PK\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Styled.DropDown>\n\t\t\t\t}\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Logout',\n\t\t\t\t\t\taction: async () => {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tnavigation.navigate('Auth');\n\t\t\t\t\t\t\t// await unsetLastUser();\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Settings',\n\t\t\t\t\t\taction: () => setShowSettings(true),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Modal',\n\t\t\t\t\t\taction: () =>\n\t\t\t\t\t\t\tnavigation.dispatch(\n\t\t\t\t\t\t\t\tCommonActions.navigate({ name: 'Modal', params: { foo: 'bar' } })\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\n\t\t\t{showSettings && <UserSettings onClose={() => setShowSettings(false)} />}\n\t\t</>\n\t);\n};\n","import * as React from 'react';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Online = () => {\n\tconst { online } = useAppState();\n\n\treturn <Icon name=\"circle\" size=\"x-small\" color={online ? 'green' : 'red'} />;\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Notifications = () => {\n\treturn (\n\t\t<>\n\t\t\t<Icon name=\"notifications\" onPress={() => {}} />\n\t\t</>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Right = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport UserMenu from './user-menu';\nimport Online from './online';\nimport Notifications from './notifications';\nimport * as Styled from './styles';\n\nconst HeaderRight = () => {\n\treturn (\n\t\t<Styled.Right>\n\t\t\t<Online />\n\t\t\t<Notifications />\n\t\t\t<UserMenu />\n\t\t</Styled.Right>\n\t);\n};\n\nexport default HeaderRight;\n","import * as React from 'react';\nimport { useNavigation, DrawerActions, RouteProp } from '@react-navigation/native';\nimport {\n\tcreateDrawerNavigator,\n\tDrawerNavigationOptions,\n\tDrawerNavigationProp,\n} from '@react-navigation/drawer';\nimport POS from '@wcpos/common/src/screens/pos';\nimport Products from '@wcpos/common/src/screens/products';\nimport Orders from '@wcpos/common/src/screens/orders';\nimport Customers from '@wcpos/common/src/screens/customers';\nimport Support from '@wcpos/common/src/screens/support';\nimport Button from '@wcpos/common/src/components/button';\nimport HeaderRight from '@wcpos/common/src/screens/header/right';\n\ntype MainScreenProps = import('./app').MainScreenProps;\n\nexport type DrawerParamList = {\n\tPOS: undefined;\n\tProducts: undefined;\n\tOrders: undefined;\n\tCustomers: undefined;\n\tSupport: undefined;\n};\n\nexport interface POSScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'POS'>;\n\troute: RouteProp<DrawerParamList, 'POS'>;\n}\n\nexport interface ProductsScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Products'>;\n\troute: RouteProp<DrawerParamList, 'Products'>;\n}\n\nexport interface OrdersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Orders'>;\n\troute: RouteProp<DrawerParamList, 'Orders'>;\n}\n\nexport interface CustomersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Customers'>;\n\troute: RouteProp<DrawerParamList, 'Customers'>;\n}\n\nexport interface SupportScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Support'>;\n\troute: RouteProp<DrawerParamList, 'Support'>;\n}\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n\n/**\n *\n */\nconst MainNavigator = ({ navigation, route }: MainScreenProps) => {\n\t// const navigation = useNavigation();\n\n\tconst openDrawer = React.useCallback(() => {\n\t\tnavigation.dispatch(DrawerActions.openDrawer());\n\t}, []);\n\n\tconst screenOptions = React.useMemo<DrawerNavigationOptions>(\n\t\t() => ({\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#f4511e',\n\t\t\t\theight: '40px',\n\t\t\t},\n\t\t\theaderTintColor: '#fff',\n\t\t\theaderTitleStyle: {\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\ttextAlign: 'center',\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t\theaderBackgroundContainerStyle: {},\n\t\t\theaderLeftContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderRightContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderTitleContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '100%',\n\t\t\t},\n\t\t\theaderLeft: () => <Button onPress={openDrawer} title=\"Menu\" />,\n\t\t\theaderRight: HeaderRight,\n\t\t}),\n\t\t[openDrawer]\n\t);\n\n\treturn (\n\t\t<Drawer.Navigator screenOptions={screenOptions}>\n\t\t\t<Drawer.Screen name=\"POS\" component={POS} />\n\t\t\t<Drawer.Screen name=\"Products\" component={Products} />\n\t\t\t<Drawer.Screen name=\"Orders\" component={Orders} />\n\t\t\t<Drawer.Screen name=\"Customers\" component={Customers} />\n\t\t\t<Drawer.Screen name=\"Support\" component={Support} />\n\t\t</Drawer.Navigator>\n\t);\n};\n\nexport default MainNavigator;\n"],"sourceRoot":""}