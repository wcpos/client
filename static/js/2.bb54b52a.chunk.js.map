{"version":3,"sources":["../../common/src/components/table/styles.ts","../../common/src/components/table/cell.tsx","../../common/src/components/table/row.tsx","../../common/src/components/table/header-cell.tsx","../../common/src/components/table/header-row.tsx","../../common/src/components/table/body.tsx","../../common/src/components/table/header.tsx","../../common/src/components/table/empty-row.tsx","../../common/src/components/table/table.tsx","../../common/src/components/table/index.ts","../../common/src/screens/pos/pos.tsx","../../common/src/hooks/use-query/query-provider.tsx","../../common/src/hooks/use-query/use-query.tsx","../../common/src/screens/common/ui-settings.tsx","../../common/src/components/format/address.tsx","../../common/src/components/format/date.tsx","../../common/src/components/format/currency.tsx","../../common/src/components/format/index.ts","../../common/src/components/format/name.tsx","../../common/src/components/format/number.tsx","../../common/src/components/format/list.tsx","../../common/src/components/tabs/styles.ts","../../common/src/components/tabs/tab.tsx","../../common/src/components/tabs/tabs.tsx","../../common/src/hooks/use-ui/ui-resource-provider.tsx","../../common/src/hooks/use-ui/use-ui.tsx","../../common/src/components/tree/styles.ts","../../common/src/components/tree/raw.tsx","../../common/src/components/tree/json/styles.ts","../../common/src/components/tree/json/value.tsx","../../common/src/components/tree/json/object.tsx","../../common/src/components/tree/json/array.tsx","../../common/src/components/tree/json/node.tsx","../../common/src/components/tree/tree.tsx","../../common/src/components/checkbox/styles.ts","../../common/src/components/checkbox/label.tsx","../../common/src/components/checkbox/icon.tsx","../../common/src/components/checkbox/checkbox.tsx","../../common/src/components/search/styles.ts","../../common/src/components/search/search.tsx","../../common/src/components/arrow/styles.ts","../../common/src/components/arrow/arrow.tsx","../../common/src/hooks/use-data-observable/use-data-observable.tsx","../../common/src/screens/common/product-categories.tsx","../../common/src/screens/common/product-tags.tsx","../../common/src/components/draggable/draggable.tsx","../../common/src/components/collapsible/collapsible.tsx","../../common/src/components/sort-icon/styles.ts","../../common/src/components/sort-icon/sort-icon.tsx","../../common/src/components/draggable/index.ts","../../common/src/hooks/use-on-layout.ts","../../common/src/components/tree/json/utils.ts","../../common/src/components/collapsible/styles.ts","../../common/src/screens/pos/styles.ts","../../common/src/components/numpad/styles.ts","../../common/src/components/numpad/numpad.tsx","../../common/src/screens/pos/cart/rows/cells/quantity.tsx","../../common/src/screens/pos/cart/rows/cells/price.tsx","../../common/src/screens/pos/cart/rows/cells/total.tsx","../../common/src/screens/pos/cart/rows/cells/tax.tsx","../../common/src/components/meta-data/styles.ts","../../common/src/components/meta-data/meta-data.tsx","../../common/src/screens/pos/cart/rows/cells/edit-modal.tsx","../../common/src/screens/pos/cart/rows/cells/actions.tsx","../../common/src/components/snackbar/use-snackbar.ts","../../common/src/screens/pos/cart/rows/line-item.tsx","../../common/src/screens/pos/cart/rows/cells/fee-and-shipping-price.tsx","../../common/src/screens/pos/cart/rows/fee-line.tsx","../../common/src/screens/pos/cart/rows/shipping-line.tsx","../../common/src/screens/pos/cart/table.tsx","../../common/src/components/combobox/styles.ts","../../common/src/components/combobox/combobox.tsx","../../common/src/screens/common/customer-select.tsx","../../common/src/screens/common/add-edit-customer.tsx","../../common/src/screens/pos/cart/totals.tsx","../../common/src/hooks/use-auth-login/auth-login-provider.tsx","../../common/src/screens/pos/cart/buttons.tsx","../../common/src/hooks/use-auth-login/use-auth-login.ts","../../common/src/screens/pos/cart/cart.tsx","../../common/src/hooks/use-id-audit/use-id-audit.tsx","../../common/src/hooks/use-rest-query/use-rest-query.tsx","../../common/src/hooks/use-collection-query/use-collection-query.tsx","../../common/src/components/table3/styles.ts","../../common/src/components/table3/header.tsx","../../common/src/components/table3/row.tsx","../../common/src/components/table3/empty.tsx","../../common/src/components/table3/virtual-list.tsx","../../common/src/components/table3/table.tsx","../../common/src/screens/pos/products/cells/variations.tsx","../../common/src/screens/pos/products/cells/actions.tsx","../../common/src/screens/pos/products/cells/image.tsx","../../common/src/screens/pos/products/cells/name.tsx","../../common/src/screens/pos/products/cells/price.tsx","../../common/src/screens/pos/products/cells/regular-price.tsx","../../common/src/screens/pos/products/cells/sku.tsx","../../common/src/screens/pos/products/styles.ts","../../common/src/screens/pos/products/footer.tsx","../../common/src/screens/pos/products/table.tsx","../../common/src/screens/pos/products/search-bar.tsx","../../common/src/screens/pos/products/products.tsx","../../common/src/components/webview/webview.web.tsx","../../common/src/components/accordion/styles.ts","../../common/src/components/accordion/accordion.tsx","../../common/src/screens/pos/checkout/checkout.tsx","../../common/src/components/gutter/styles.ts","../../common/src/components/gutter/gutter.tsx","../../common/src/screens/common/row.tsx","../../common/src/screens/common/table.tsx","../../common/src/screens/products/cells/image.tsx","../../common/src/screens/products/cells/name.tsx","../../common/src/screens/common/price.tsx","../../common/src/components/menu/styles.ts","../../common/src/components/menu/item.tsx","../../common/src/components/menu/menu.tsx","../../common/src/components/dropdown/dropdown.tsx","../../common/src/components/select/select.tsx","../../common/src/screens/products/cells/modal.tsx","../../common/src/screens/products/cells/delete-dialog.tsx","../../common/src/screens/products/cells/actions.tsx","../../common/src/screens/common/date.tsx","../../common/src/screens/products/cells/index.ts","../../common/src/screens/products/styles.ts","../../common/src/screens/products/products.tsx","../../common/src/screens/orders/cells/modal.tsx","../../common/src/screens/orders/cells/actions.tsx","../../common/src/screens/orders/cells/address.tsx","../../common/src/screens/orders/cells/customer.tsx","../../common/src/screens/orders/cells/index.ts","../../common/src/screens/orders/cells/note.tsx","../../common/src/screens/orders/cells/status.tsx","../../common/src/screens/orders/styles.ts","../../common/src/screens/orders/orders.tsx","../../common/src/screens/customers/add-customer-modal.tsx","../../common/src/screens/customers/cells/address.tsx","../../common/src/screens/customers/cells/name.tsx","../../common/src/screens/customers/cells/index.ts","../../common/src/screens/customers/cells/avatar.tsx","../../common/src/screens/customers/cells/email.tsx","../../common/src/screens/customers/cells/actions.tsx","../../common/src/screens/customers/styles.ts","../../common/src/screens/customers/customers.tsx","../../common/src/screens/support/auth-db.tsx","../../common/src/screens/support/store-db.tsx","../../common/src/screens/support/support.tsx","../../common/src/screens/header/user-menu/user-settings.tsx","../../common/src/screens/header/user-menu/styles.ts","../../common/src/screens/header/user-menu/user-menu.tsx","../../common/src/screens/header/online/online.tsx","../../common/src/screens/header/notifications/notifications.tsx","../../common/src/screens/header/styles.ts","../../common/src/screens/header/right.tsx","../../common/src/navigators/main.tsx"],"names":["Row","styled","View","Cell","HeaderRow","HeaderCell","HeaderTextWrapper","MemoizedCell","React","children","cellData","flexGrow","flexShrink","flexBasis","width","style","rowData","dataKey","String","displayName","MemoizedRow","columns","map","column","index","hide","key","getCellProps","MemoizedHeaderCell","sort","sortBy","defaultSortDirection","sortDirection","label","disableSort","hideLabel","sortable","showSortIndicator","newSortDirection","onPress","event","hovered","visible","direction","undefined","MemoizedHeaderRow","getHeaderCellProps","Body","Object","assign","Header","EmptyRow","message","MemoizedEmptyRow","viewabilityConfig","minimumViewTime","viewAreaCoveragePercentThreshold","stickyHeaderIndices","MemoizedTable","data","footer","empty","rest","keyExtractor","item","get","childCount","count","renderItemFunction","Array","isArray","child","find","type","props","renderItem","headerComponent","ListHeaderComponent","ListFooterComponent","ListEmptyComponent","Table","POSContext","currentOrder","setCurrentOrder","currentCustomer","setCurrentCustomer","POS","storeDB","useAppState","resources","useUIResource","productsUI","useObservableSuspense","posProducts","cartUI","cart","isDragging","productColumnWidth","useSharedValue","useOnLayout","containerLayout","setContainerLayout","productColumnLayout","setProductColumnLayout","handleStartColumnResize","context","value","handleColumnResize","current","withSpring","clamp","translationX","console","log","handleEndColumnResize","atomicPatch","productsColumnStyle","useAnimatedStyle","handleContainerLayout","handleProductColumnLayout","orderQuery","collections","orders","where","eq","useObservableState","$","pipe","filter","o","length","useWhyDidYouUpdate","Provider","onLayout","as","Animated","initialQuery","ui","onStart","onActive","onEnd","status","fallback","QueryContext","QueryProvider","queryState","setQueryState","setQuery","path","prevState","set","query","useQuery","Error","UiSettings","t","useTranslation","id","split","setVisible","open","activator","name","tooltip","onRequestClose","checked","onChange","atomicSet","display","i","title","reset","addresses","default","AU","AT","BE","CA","CH","CL","CN","CZ","DE","EE","FI","DK","FR","HK","HU","IN","IS","IT","JP","TW","LI","NL","NZ","NO","PL","PT","SK","RS","SI","ES","SE","TR","UG","US","VN","format","Date","symbol","Name","firstName","lastName","Number","prefix","suffix","List","array","Address","address","showName","addr","template","country","hasOwnProperty","first_name","last_name","state_code","state","state_upper","toUpperCase","city_upper","city","matches","match","forEach","regex","RegExp","prop","replace","line","idx","trim","FormatDate","Currency","FormatCurrency","Container","TabsContainer","Tab","Pressable","Label","Text","selected","theme","TEXT_COLOR","TEXT_COLOR_SECONDARY","onSelect","Tabs","tabs","position","tabItems","useMemo","tab","UIResourceContext","UIResourceProvider","getResource","ObservableResource","of","resource$","getLocal$","uiDoc","initial","initialUI","insertLocal","upsertLocal","val","uiResources","products","customers","useUI","Raw","TextInput","RawButtonContainer","raw","JSON","stringify","multiline","numberOfLines","editable","ObjectNode","JsonValue","keyPath","deep","flexDirection","JsonObject","isCollapsed","onExpand","_keyPath","nextDeep","collapsed","setCollapsed","alignItems","numberOfItems","getOwnPropertyNames","itemName","renderCollapsed","list","renderNotCollapsed","JsonArray","JsonNode","getObjectType","originalValue","toISOString","Tree","rootName","setRaw","background","size","accessoryLeft","PressableContainer","disabled","css","Box","CHECKBOX_BACKGROUND_COLOR","CHECKBOX_WIDTH","CHECKBOX_HEIGHT","CHECKBOX_BORDER_WIDTH","CHECKBOX_BORDER_COLOR","CHECKBOX_BORDER_RADIUS","Check","Icon","LabelWrapper","info","CheckboxIcon","hasError","focused","pressed","color","Checkbox","helpText","checkedRaw","onChangeRaw","useUncontrolledState","Input","Search","actions","onSearch","filters","renderFilters","filterLabel","onRemove","removable","clearable","leftAccessory","Left","COLOR_PRIMARY","Right","Up","Down","Arrow","renderArrow","useDataObservable","collectionName","collection","useNavigation","data$","useObservable","inputs$","switchMap","q","shareReplay","catchError","err","error","ProductCategories","categories","handleSelectCategory","category","tagsArray","cat","action","Group","tags","Skeleton","numberOfTags","ProductTags","handleSelectTag","tag","Draggable","lowerBound","upperBound","Math","min","max","onGestureEvent","minX","minY","maxX","maxY","useAnimatedGestureHandler","ctx","Collapsible","aref","useAnimatedRef","progress","useDerivedValue","withTiming","height","opacity","ref","h","nativeEvent","layout","active","COLOR_DISABLED","SortIcon","setLayout","obj","Symbol","iterator","prototype","toString","call","slice","parse","string","result","indexOf","eval","e","PAGE_MAIN_PADDING_Y","PAGE_MAIN_PADDING_X","ProductsColumn","CartColumn","CheckoutColumn","Display","DisplayText","Keys","Key","KeyText","keys","Numpad","placeholder","displayText","setDisplayText","handleKeyPress","Quantity","lineItem","quantity","quantity$","Price","price","price$","Total","total","Tax","tax","MetaData","handleAddRow","meta","EditModal","onClose","handleChangeTaxClass","newValue","a","taxClass","hasProperty","property","schema","topLevelFields","includes","methodTitle","primaryAction","Section","taxStatus","metaData","Actions","showSnackbar","options","SnackbarContext","show","useSnackbar","dismissable","backgroundStyle","removeCartLine","LineItem","FeeAndShippingPrice","total$","FeeLine","fee","ShippingLine","shipping","CartTable","order","items","onSort","padding","addFeeLine","flex","addShippingLine","methodId","ScrollView","Combobox","choices","selectedRaw","searchValue","setOpen","showPopover","choiceComponents","choice","Item","onFocus","onClear","hideBackdrop","matchWidth","CustomerSelect","selectedCustomer","onSelectCustomer","search","prev","orderBy","customer","localID","AddEditCustomer","setFirstName","email","setEmail","setSelected","handleSave","customersCollection","insert","replicationState","syncRestApi","push","error$","subscribe","code","run","content","toJSON","Totals","totalTax","totalTax$","AuthLoginContext","Buttons","showAuthLogin","marginBottom","customerNote","remove","accessoryRight","number","pricesIncludeTax","currencySymbol","Cart","get$","handleSort","items$","isRxDocument","cart$","handleSelectCustomer","addCustomer","cartTabs","grow","fields","useIdAudit","site","wpCredentials","navigation","request","http","CancelToken","source","headers","wpNonce","jwt","Authorization","baseURL","wcApiUrl","params","posts_per_page","then","auditIdsFromServer","catch","response","navigate","login","cancel","parsePlainData","plainData","camelCase","unset","omitProperties","difference","escape","text","TableRow","rowStyle","cellStyle","cell","onRender","renderCell","VirtualList","emptyRenderer","rowRenderer","virtualizerRef","parentRef","setForceUpdate","forceHeightRecalculation","rowVirtualizer","useVirtual","overscan","redraw","x","RedrawContext","overflow","virtualItems","totalSize","virtualRow","measureRef","top","left","transform","translateY","start","enableColumnHeaders","header","Variations","product","variations","addToCart","variation","findOne","exec","addOrUpdateLineItem","fetchData","endpoint","attributes","attribute","option","createNewOrderWithProduct","newOrder","isSynced","isVariable","Image","thumbnail","src","d","sku","attr","join","RegularPrice","regular_price","SKU","Footer","ProductsFooter","totalDocuments$","cells","Categories","image","regularPrice","Sku","Tag","POSProductsTable","query$","debounceTime","selector","toLowerCase","updateQuery","useData","visibleColumns","sortedData","SearchBar","f","Products","columns$","restQuery$","withLatestFrom","unsyncedDocuments$","tap","replicateRxCollection","replicationIdentifier","pull","handler","latestPullDocument","per_page","page","orderby","promises","existing","Promise","all","documents","hasMoreDocuments","useSubscription","useRestQuery","WebView","onError","onMessage","onLoad","window","addEventListener","removeEventListener","allowpaymentrequest","LabelContainer","Content","Accordion","currentIndex","setCurrentIndex","Checkout","paymentUrlMeta","saveOrder","Platform","OS","Gutter","DefaultCell","forceRender","_sortBy","_sortDirection","maybeSortedData","_flatten","indexes","_orderBy","getItemLayout","offset","handleChangeText","FormattedPrice","TEXT_COLOR_INVERSE","useTheme","handlePress","calculatedStyled","hoverBackgroundColor","MENU_ITEM_HOVER_BACKGROUND_COLOR","backgroundColor","Menu","rawItem","snakeCase","Dropdown","_activator","placement","popoverStyle","paddingLeft","paddingRight","Select","choicesRaw","hidePopover","selectedChoice","onLabelClick","rightAccessory","minWidth","maxHeight","Modal","salePrice","onSale","DeleteDialog","secondaryActions","showDialog","setShowDialog","FormattedDate","dateCreated","totalRecords","totalRecords$","recordsShowing","handleOpen","Customer","customer_id","billing","note","Orders","AddCustomer","avatarUrl","showModal","setShowModal","Customers","AuthDB","counts","deleteAll","table","printToConsole","userDB","StoreDB","values","Support","UserSettings","taxRates$","taxes","taxRates","sectioned","zIndex","DropDown","UserMenu","store","showSettings","setShowSettings","goBack","dispatch","CommonActions","foo","Online","online","Notifications","HeaderRight","Drawer","createDrawerNavigator","MainNavigator","openDrawer","route","DrawerActions","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","textAlign","margin","headerBackgroundContainerStyle","headerLeftContainerStyle","headerRightContainerStyle","headerTitleContainerStyle","headerLeft","headerRight","Navigator","Screen","component"],"mappings":"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","file":"static/js/2.bb54b52a.chunk.js","sourcesContent":["import styled from 'styled-components/native';\n\nexport const Row = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n\tborder-bottom-width: 1px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n`;\n\nexport const Cell = styled.View`\n\tpadding: 5px;\n\talign-items: flex-start;\n`;\n\nexport const HeaderRow = styled.View`\n\tflex-direction: row;\n\tborder-bottom-width: 2px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n\tbackground-color: #ffffff;\n`;\n\nexport const HeaderCell = styled.View`\n\tpadding: 5px;\n`;\n\nexport const HeaderTextWrapper = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\n\nexport interface TableCellProps {\n\tchildren?: React.ReactNode;\n\tcellData?: any;\n\tcolumn?: any;\n\tdataKey?: string | number;\n\trowData?: any;\n\tstyle?: ViewStyle;\n\t// rowIndex: number;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tindex?: number;\n}\n\nconst Cell = ({\n\tchildren,\n\tcellData,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tstyle,\n\trowData,\n\tdataKey,\n}: TableCellProps) => {\n\tif (children) {\n\t\treturn (\n\t\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t\t{typeof children === 'function' ? children({ cellData }) : children}\n\t\t\t</Styled.Cell>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t<Text>{String(cellData ?? '')}</Text>\n\t\t</Styled.Cell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedCell = React.memo(Cell);\nMemoizedCell.displayName = 'Table.Body.Row.Cell';\n\nexport default MemoizedCell;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Cell, { TableCellProps } from './cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetCellPropsFunction = () => TableCellProps;\n\nexport interface TableRowProps {\n\tchildren?: React.ReactNode;\n\trowData: any;\n\tcolumns?: ColumnProps[];\n\tstyle?: ViewStyle;\n}\n\nconst Row = ({ rowData, columns, style, children }: TableRowProps) => {\n\t// const key = rowData.id;\n\t// const renderCells = React.memo(() => {\n\n\t// }, [columns])\n\n\treturn (\n\t\t<Styled.Row style={style}>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column: ColumnProps, index: number) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst cellData = rowData[dataKey];\n\t\t\t\t\tconst { flexGrow, flexShrink, flexBasis, width } = column;\n\n\t\t\t\t\tconst getCellProps: GetCellPropsFunction = () => ({\n\t\t\t\t\t\tcellData,\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\trowData,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ cellData, column, getCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <Cell {...getCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.Row>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedRow = React.memo(Row) as unknown as React.FC<TableRowProps> & { Cell: typeof Cell };\nMemoizedRow.displayName = 'Table.Row';\nMemoizedRow.Cell = Cell;\n\nexport default MemoizedRow;\n","import * as React from 'react';\nimport { GestureResponderEvent, ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport SortIcon from '../sort-icon';\n\n/**\n *\n */\nexport interface HeaderCellProps {\n\tchildren?: React.ReactNode;\n\tdataKey: string | number;\n\tdefaultSortDirection?: import('./types').SortDirection;\n\t// headerCellRenderer?: import('./types').HeaderCellRenderer;\n\tlabel?: string;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: ViewStyle;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tdisableSort?: boolean;\n\thideLabel?: boolean;\n}\n\n/**\n *\n */\nconst HeaderCell = ({\n\tchildren,\n\tsort,\n\tsortBy,\n\tdataKey,\n\tdefaultSortDirection = 'asc',\n\tsortDirection,\n\t// headerCellRenderer,\n\tlabel,\n\tstyle,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tdisableSort = false,\n\thideLabel = false,\n}: HeaderCellProps) => {\n\tconst sortable = !disableSort && typeof sort === 'function';\n\tconst showSortIndicator = sortable && sortBy === dataKey;\n\n\tconst newSortDirection =\n\t\tsortBy !== dataKey ? defaultSortDirection : sortDirection === 'desc' ? 'asc' : 'desc';\n\n\tconst handlePress = (event: GestureResponderEvent) => {\n\t\tif (typeof sort === 'function') {\n\t\t\tsort({\n\t\t\t\tdefaultSortDirection,\n\t\t\t\tevent,\n\t\t\t\tsortBy: dataKey,\n\t\t\t\tsortDirection: newSortDirection,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Styled.HeaderCell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t{sortable ? (\n\t\t\t\t<Pressable onPress={handlePress}>\n\t\t\t\t\t{\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t({ hovered }) => (\n\t\t\t\t\t\t\t<Styled.HeaderTextWrapper>\n\t\t\t\t\t\t\t\t<Text>{children || label}</Text>\n\t\t\t\t\t\t\t\t<SortIcon\n\t\t\t\t\t\t\t\t\tvisible={hovered || showSortIndicator}\n\t\t\t\t\t\t\t\t\tdirection={showSortIndicator ? sortDirection : undefined}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Styled.HeaderTextWrapper>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Pressable>\n\t\t\t) : (\n\t\t\t\t!hideLabel && <Text>{children || label}</Text>\n\t\t\t)}\n\t\t</Styled.HeaderCell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderCell = React.memo(HeaderCell);\nMemoizedHeaderCell.displayName = 'Table.Header.Row.Cell';\n\nexport default MemoizedHeaderCell;\n","import * as React from 'react';\nimport * as Styled from './styles';\nimport HeaderCell, { HeaderCellProps } from './header-cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetHeaderCellPropsFunction = () => HeaderCellProps & { column: ColumnProps };\n\n/**\n *\n */\nexport interface HeaderRowProps {\n\tchildren?: React.ReactNode;\n\tcolumns?: import('./types').ColumnProps[];\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: import('react-native').ViewStyle;\n}\n\n/**\n *\n */\nconst HeaderRow = ({ columns, sort, sortBy, sortDirection, children, style }: HeaderRowProps) => {\n\treturn (\n\t\t<Styled.HeaderRow>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column, index) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t} = column;\n\n\t\t\t\t\tconst getHeaderCellProps: GetHeaderCellPropsFunction = () => ({\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t\tsortBy,\n\t\t\t\t\t\tsortDirection,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ column, getHeaderCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <HeaderCell {...getHeaderCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.HeaderRow>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderRow = React.memo(HeaderRow) as unknown as React.FC<HeaderRowProps> & {\n\tCell: typeof HeaderCell;\n};\nMemoizedHeaderRow.displayName = 'Table.Header.Row';\nMemoizedHeaderRow.Cell = HeaderCell;\n\nexport default MemoizedHeaderRow;\n","import * as React from 'react';\nimport Row from './row';\n\nconst Body: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nBody.displayName = 'Table.Body';\n\nexport default Object.assign(Body, { Row });\n","import * as React from 'react';\nimport HeaderRow from './header-row';\n\nconst Header: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nHeader.displayName = 'Table.Header';\n\nexport default Object.assign(Header, { Row: HeaderRow });\n","import * as React from 'react';\nimport Text from '../text';\n\ninterface EmptyRowProps {\n\tmessage?: string;\n}\n\nconst EmptyRow = ({ message = 'No results found' }: EmptyRowProps) => {\n\treturn <Text>{message}</Text>;\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedEmptyRow = React.memo(EmptyRow);\nEmptyRow.displayName = 'Table.Row.Empty';\n\nexport default MemoizedEmptyRow;\n","import * as React from 'react';\nimport { FlatListProps, ListRenderItem } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler'; // swipeable rows?\nimport get from 'lodash/get';\nimport Row from './row';\nimport HeaderRow from './header-row';\nimport Body from './body';\nimport Header from './header';\nimport EmptyRow from './empty-row';\n\nexport interface TableProps {\n\tchildren?: React.ReactNode;\n\tcolumns: import('./types').ColumnProps[];\n\tdata: any[];\n\tempty?: string;\n\tfooter?: React.ReactElement;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: any;\n}\n\n/**\n * Tables rows must be onscreen for minimumViewTime to trigger onViewableItemsChanged\n */\nconst viewabilityConfig = {\n\tminimumViewTime: 500,\n\tviewAreaCoveragePercentThreshold: 0,\n};\n\n/**\n * Keeps the header row pinned to the top of the table\n */\nconst stickyHeaderIndices = [0];\n\nconst Table = ({\n\tchildren,\n\tcolumns,\n\tdata,\n\tempty,\n\tfooter,\n\tsort,\n\tsortBy,\n\tsortDirection,\n\t...rest\n}: TableProps) => {\n\tconst keyExtractor = React.useCallback(\n\t\t(item: any, index: number) => get(item, 'localID') || index,\n\t\t[]\n\t);\n\tconst childCount = React.Children.count(children);\n\n\t/**\n\t * create and memoize the renderItem function\n\t */\n\tconst renderItemFunction: ListRenderItem<typeof Row> = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Body);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn ({ item, index }) => child.props.children({ item, columns, index });\n\t\t\t}\n\t\t}\n\t\tif (typeof children === 'function') {\n\t\t\treturn ({ item, index }) => children({ item, columns, index });\n\t\t}\n\t\treturn ({ item }: any) => <Row rowData={item} columns={columns} />;\n\t}, [children, childCount, columns]);\n\n\tconst renderItem = React.useCallback(renderItemFunction, [renderItemFunction]);\n\n\t/**\n\t * create and memoize the headerComponent\n\t */\n\tconst headerComponent = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Header);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn React.cloneElement(child.props.children, {\n\t\t\t\t\tcolumns,\n\t\t\t\t\tsort,\n\t\t\t\t\tsortBy,\n\t\t\t\t\tsortDirection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<HeaderRow columns={columns} sort={sort} sortBy={sortBy} sortDirection={sortDirection} />\n\t\t);\n\t}, [children, childCount, columns, sort, sortBy, sortDirection]);\n\n\treturn (\n\t\t<FlatList\n\t\t\tdata={data}\n\t\t\trenderItem={renderItem}\n\t\t\tkeyExtractor={keyExtractor}\n\t\t\tListHeaderComponent={headerComponent}\n\t\t\tListFooterComponent={footer}\n\t\t\tListEmptyComponent={EmptyRow}\n\t\t\tstickyHeaderIndices={stickyHeaderIndices}\n\t\t\tviewabilityConfig={viewabilityConfig}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedTable = React.memo(Table) as unknown as React.FC<TableProps> & {\n\tHeader: typeof Header;\n\tBody: typeof Body;\n};\nMemoizedTable.displayName = 'Table';\nMemoizedTable.Header = Header;\nMemoizedTable.Body = Body;\n\nexport default MemoizedTable;\n","import Table from './table';\n\nexport default Table;\n","import * as React from 'react';\nimport { View, Text, PanResponderGestureState, LayoutChangeEvent } from 'react-native';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { from, of } from 'rxjs';\nimport { switchMap, tap, catchError, map, filter } from 'rxjs/operators';\n// import { PanGestureHandler } from 'react-native-gesture-handler';\n// import { useAnimatedGestureHandler, useSharedValue } from 'react-native-reanimated';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n// import useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport { QueryProvider } from '@wcpos/common/src/hooks/use-query';\nimport ErrorBoundary from '@wcpos/common/src/components/error-boundary';\nimport Draggable from '@wcpos/common/src/components/draggable';\nimport Gutter from '@wcpos/common/src/components/gutter';\nimport useOnLayout from '@wcpos/common/src/hooks/use-on-layout';\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport clamp from 'lodash/clamp';\nimport Cart from './cart';\nimport Products from './products';\nimport Checkout from './checkout';\nimport * as Styled from './styles';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface POSContextProps {\n\tcurrentOrder?: OrderDocument;\n\tsetCurrentOrder: React.Dispatch<React.SetStateAction<OrderDocument | undefined>>;\n\tcurrentCustomer?: CustomerDocument;\n\tsetCurrentCustomer: React.Dispatch<React.SetStateAction<CustomerDocument | undefined>>;\n}\n\nexport const POSContext = React.createContext<POSContextProps>({\n\tcurrentOrder: undefined,\n\t// @ts-ignore\n\tsetCurrentOrder: undefined,\n\tcurrentCustomer: undefined,\n\t// @ts-ignore\n\tsetCurrentCustomer: undefined,\n});\n\n/**\n *\n */\nconst POS = () => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst productsUI = useObservableSuspense(resources.posProducts);\n\tconst cartUI = useObservableSuspense(resources.cart);\n\tconst [currentOrder, setCurrentOrder] = React.useState<OrderDocument | undefined>();\n\tconst [currentCustomer, setCurrentCustomer] = React.useState<CustomerDocument | undefined>();\n\n\t/**\n\t * Resizing the POS columns\n\t */\n\tconst isDragging = React.useRef(false);\n\tconst productColumnWidth = useSharedValue(productsUI.get('width'));\n\tconst [containerLayout, setContainerLayout] = useOnLayout();\n\tconst [productColumnLayout, setProductColumnLayout] = useOnLayout();\n\tconst handleStartColumnResize = React.useCallback((event, context) => {\n\t\tcontext.productColumnWidth = productColumnWidth.value;\n\t}, []);\n\tconst handleColumnResize = React.useCallback(\n\t\t(event, context) => {\n\t\t\tif (productColumnLayout && containerLayout) {\n\t\t\t\tisDragging.current = true;\n\t\t\t\tproductColumnWidth.value = withSpring(\n\t\t\t\t\tclamp((productColumnLayout.width + event.translationX) / containerLayout.width, 0.2, 0.8)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.log('@TODO - why null?', productColumnLayout);\n\t\t\t}\n\t\t},\n\t\t[containerLayout, productColumnLayout]\n\t);\n\tconst handleEndColumnResize = React.useCallback((event, context) => {\n\t\tisDragging.current = false;\n\t\tproductsUI.atomicPatch({ width: productColumnWidth.value });\n\t}, []);\n\tconst productsColumnStyle = useAnimatedStyle(() => ({\n\t\tflexBasis: `${productColumnWidth.value * 100}%`,\n\t}));\n\tconst handleContainerLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetContainerLayout(event);\n\t\t}\n\t};\n\tconst handleProductColumnLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetProductColumnLayout(event);\n\t\t}\n\t};\n\n\tconst orderQuery = storeDB.collections.orders.find().where('status').eq('pos-open');\n\n\tconst orders: OrderDocument[] = useObservableState(\n\t\torderQuery.$.pipe(\n\t\t\tfilter((o) => {\n\t\t\t\t/** @TODO - remove this hack!\n\t\t\t\t * why is orderQuery emitting on changes to order.lineItems??\n\t\t\t\t */\n\t\t\t\treturn orders?.length !== o.length;\n\t\t\t})\n\t\t),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('POS', {\n\t\tstoreDB,\n\t\tproductsUI,\n\t\tcartUI,\n\t\tcurrentOrder,\n\t\torderQuery,\n\t\torders,\n\t\thandleColumnResize,\n\t\thandleStartColumnResize,\n\t\thandleEndColumnResize,\n\t\tproductsColumnStyle,\n\t\thandleContainerLayout,\n\t\thandleProductColumnLayout,\n\t});\n\n\treturn (\n\t\t<POSContext.Provider\n\t\t\tvalue={{ currentOrder, setCurrentOrder, currentCustomer, setCurrentCustomer }}\n\t\t>\n\t\t\t<Styled.Container onLayout={handleContainerLayout}>\n\t\t\t\t<Styled.ProductsColumn\n\t\t\t\t\tas={Animated.View}\n\t\t\t\t\tonLayout={handleProductColumnLayout}\n\t\t\t\t\tstyle={productsColumnStyle}\n\t\t\t\t>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<QueryProvider initialQuery={{ sortBy: 'name', sortDirection: 'asc' }}>\n\t\t\t\t\t\t\t<Products ui={productsUI} />\n\t\t\t\t\t\t</QueryProvider>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Styled.ProductsColumn>\n\t\t\t\t<Draggable\n\t\t\t\t\tonStart={handleStartColumnResize}\n\t\t\t\t\tonActive={handleColumnResize}\n\t\t\t\t\tonEnd={handleEndColumnResize}\n\t\t\t\t>\n\t\t\t\t\t<Animated.View>\n\t\t\t\t\t\t<Gutter />\n\t\t\t\t\t</Animated.View>\n\t\t\t\t</Draggable>\n\t\t\t\t{currentOrder && currentOrder.status === 'pos-checkout' ? (\n\t\t\t\t\t<Styled.CheckoutColumn>\n\t\t\t\t\t\t<Checkout />\n\t\t\t\t\t</Styled.CheckoutColumn>\n\t\t\t\t) : (\n\t\t\t\t\t<Styled.CartColumn>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<React.Suspense fallback={<Text>Loading cart...</Text>}>\n\t\t\t\t\t\t\t\t<Cart ui={cartUI} orders={orders} />\n\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Styled.CartColumn>\n\t\t\t\t)}\n\t\t\t</Styled.Container>\n\t\t</POSContext.Provider>\n\t);\n};\n\nexport default POS;\n","import * as React from 'react';\nimport set from 'lodash/set';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\n\nexport interface QueryState {\n\tsearch?: Record<string, unknown>;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tfilters?: Record<string, unknown>;\n}\n\nexport interface QueryProviderProps {\n\tinitialQuery: QueryState;\n\tchildren: React.ReactNode;\n}\n\nexport interface QueryProps {\n\tquery: QueryState;\n\tsetQuery: (path: string | string[], value: any) => void;\n}\n\nexport const QueryContext = React.createContext<unknown>(null) as React.Context<QueryProps>;\n\n/**\n * Query Provider\n */\nexport const QueryProvider = ({ children, initialQuery }: QueryProviderProps) => {\n\tconst [queryState, setQueryState] = React.useState(initialQuery);\n\n\tconst setQuery = React.useCallback(\n\t\t(path, value) => {\n\t\t\tsetQueryState((prevState) => {\n\t\t\t\treturn set({ ...prevState }, path, value);\n\t\t\t});\n\t\t},\n\t\t[setQueryState]\n\t);\n\n\treturn (\n\t\t<QueryContext.Provider value={{ query: queryState, setQuery }}>\n\t\t\t{children}\n\t\t</QueryContext.Provider>\n\t);\n};\n","import * as React from 'react';\nimport { QueryContext } from './query-provider';\n\nexport const useQuery = () => {\n\tconst context = React.useContext(QueryContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useQuery must be called within QueryProvider`);\n\t}\n\n\treturn context;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface UiSettingsProps {\n\tui: import('@wcpos/common/src/hooks/use-ui').UIDocument;\n}\n\nconst UiSettings = ({ ui }: UiSettingsProps) => {\n\tconst { t } = useTranslation();\n\tconst key = ui.id.split('_')[1];\n\tconst columns = ui.get('columns');\n\tconst [visible, setVisible] = React.useState(false);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tactivator={<Icon name=\"cog\" onPress={() => setVisible(true)} tooltip=\"Table Settings\" />}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t>\n\t\t\t<Text>Columns</Text>\n\t\t\t{columns.map((column: any, index: number) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${column.key}`)}\n\t\t\t\t\t\t\tchecked={!column.hide}\n\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\tcolumns[index] = { ...column, hide: !checked };\n\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{column.display\n\t\t\t\t\t\t\t? column.display.map((display: any, i: number) => (\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-indent\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tkey={display.key}\n\t\t\t\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${display.key}`)}\n\t\t\t\t\t\t\t\t\t\tchecked={!display.hide}\n\t\t\t\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\t\t\t\tcolumn.display[i] = { ...display, hide: !checked };\n\t\t\t\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Button title=\"Restore Default Settings\" onPress={ui.reset} />\n\t\t</Popover>\n\t);\n};\n\nexport default UiSettings;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../text';\n\ntype Countries =\n\t| 'default'\n\t| 'AU'\n\t| 'AT'\n\t| 'BE'\n\t| 'CA'\n\t| 'CH'\n\t| 'CL'\n\t| 'CN'\n\t| 'CZ'\n\t| 'DE'\n\t| 'EE'\n\t| 'FI'\n\t| 'DK'\n\t| 'FR'\n\t| 'HK'\n\t| 'HU'\n\t| 'IN'\n\t| 'IS'\n\t| 'IT'\n\t| 'JP'\n\t| 'TW'\n\t| 'LI'\n\t| 'NL'\n\t| 'NZ'\n\t| 'NO'\n\t| 'PL'\n\t| 'PT'\n\t| 'SK'\n\t| 'RS'\n\t| 'SI'\n\t| 'ES'\n\t| 'SE'\n\t| 'TR'\n\t| 'UG'\n\t| 'US'\n\t| 'VN';\n\ninterface Address {\n\taddress_1?: string;\n\taddress_2?: string;\n\tcity?: string;\n\tcompany?: string;\n\tcountry?: Countries;\n\tfirst_name?: string;\n\tlast_name?: string;\n\tpostcode?: string;\n\tstate?: string;\n}\n\ntype Template = Address & {\n\tname?: string;\n\tstate_code?: string;\n\tstate_upper?: string;\n\tcity_upper?: string;\n};\n\nexport interface FormatAddressProps {\n\taddress: Address;\n\tshowName: boolean;\n}\n\nconst addresses = {\n\tdefault: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}\\n{postcode}\\n{country}',\n\tAU: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {state} {postcode}\\n{country}',\n\tAT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tBE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCA: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {state_code}&nbsp;&nbsp;{postcode}\\n{country}',\n\tCH: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{state}\\n{postcode} {city}\\n{country}',\n\tCN: '{country} {postcode}\\n{state}, {city}, {address_2}, {address_1}\\n{company}\\n{name}',\n\tCZ: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tEE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFR: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city_upper}\\n{country}',\n\tHK: '{company}\\n{first_name} {last_name_upper}\\n{address_1}\\n{address_2}\\n{city_upper}\\n{state_upper}\\n{country}',\n\tHU: '{name}\\n{company}\\n{city}\\n{address_1}\\n{address_2}\\n{postcode}\\n{country}',\n\tIN: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{state}, {country}',\n\tIS: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tIT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode}\\n{city}\\n{state_upper}\\n{country}',\n\tJP: '{postcode}\\n{state} {city} {address_1}\\n{address_2}\\n{company}\\n{last_name} {first_name}\\n{country}',\n\tTW: '{company}\\n{last_name} {first_name}\\n{address_1}\\n{address_2}\\n{state}, {city} {postcode}\\n{country}',\n\tLI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNZ: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{country}',\n\tNO: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tRS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tES: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{state}\\n{country}',\n\tSE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tTR: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city} {state}\\n{country}',\n\tUG: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}, {country}',\n\tUS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}, {state_code} {postcode}\\n{country}',\n\tVN: '{name}\\n{company}\\n{address_1}\\n{city}\\n{country}',\n};\n\nexport const FormatAddress = ({ address, showName }: FormatAddressProps) => {\n\tconst addr = { ...address } as Template; // clone address\n\tlet template =\n\t\taddr.country && addresses.hasOwnProperty(addr.country)\n\t\t\t? addresses[addr.country]\n\t\t\t: addresses.default;\n\n\tObject.assign(addr, {\n\t\tname: showName && `${addr.first_name} ${addr.last_name}`,\n\t\tstate_code: addr.state,\n\t\tstate_upper: addr.state?.toUpperCase(),\n\t\tcity_upper: addr.city?.toUpperCase(),\n\t});\n\n\tconst matches = template.match(/\\{[\\w]+\\}/g);\n\tmatches &&\n\t\tmatches.forEach((match) => {\n\t\t\tconst regex = new RegExp(match, 'g');\n\t\t\tconst prop = match.split(/{|}/g)[1] as Extract<keyof Template, string>;\n\t\t\ttemplate = template.replace(regex, addr[prop] || '');\n\t\t});\n\n\treturn (\n\t\t<View>\n\t\t\t{template.split('\\n').map((line, idx) => {\n\t\t\t\tif (line.trim()) {\n\t\t\t\t\treturn <Text key={idx}>{line}</Text>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</View>\n\t);\n};\n","import * as React from 'react';\nimport { format } from 'date-fns';\nimport Text from '../text';\n\nexport interface FormatDateProps {\n\tvalue: string;\n}\n\nconst FormatDate = ({ value }: FormatDateProps) => {\n\treturn <Text>{format(new Date(value || ''), 'dd/MM/yyyy')}</Text>;\n};\n\nexport default React.memo(FormatDate);\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatCurrencyProps {\n\tchildren: React.ReactNode;\n\tdecimal?: string;\n\tformat?: {\n\t\tneg: string;\n\t\tpos: string;\n\t\tzero: string;\n\t};\n\tprecision?: number;\n\tsymbol?: string;\n\tthousand?: string;\n}\n\nconst FormatCurrency = ({ children, symbol }: FormatCurrencyProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{symbol} {children}\n\t\t</Text>\n\t);\n};\n\nexport default React.memo(FormatCurrency);\n","import { FormatName, FormatNameProps } from './name';\nimport { FormatNumber, FormatNumberProps } from './number';\nimport { FormatList, FormatListProps } from './list';\nimport { FormatAddress, FormatAddressProps } from './address';\nimport FormatDate, { FormatDateProps } from './date';\nimport FormatCurrency, { FormatCurrencyProps } from './currency';\n\nexport type {\n\tFormatNameProps,\n\tFormatNumberProps,\n\tFormatListProps,\n\tFormatAddressProps,\n\tFormatDateProps,\n\tFormatCurrencyProps,\n};\nexport default {\n\tName: FormatName,\n\tNumber: FormatNumber,\n\tList: FormatList,\n\tAddress: FormatAddress,\n\tDate: FormatDate,\n\tCurrency: FormatCurrency,\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNameProps {\n\tfirstName?: string;\n\tlastName?: string;\n}\n\nexport const FormatName = ({ firstName, lastName }: FormatNameProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{firstName} {lastName}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNumberProps {\n\tchildren: React.ReactNode;\n\tprefix?: string;\n\tsuffix?: string;\n\tdecimalSeparator?: string;\n}\n\nexport const FormatNumber = ({ children, prefix, suffix }: FormatNumberProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{prefix} {children} {suffix}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatListProps {\n\tarray?: [];\n}\n\nexport const FormatList = ({ array }: FormatListProps) => {\n\treturn (\n\t\t<>\n\t\t\t{array?.map((item, index) => {\n\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\treturn <Text>{item}, </Text>;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t})}\n\t\t</>\n\t);\n};\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\n\nexport const Container = styled.View`\n\theight: 100%;\n`;\n\nexport const TabsContainer = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Tab = styled(Pressable)<{ selected: boolean }>`\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n`;\n\nexport const Label = styled(Text)<{ selected: boolean }>`\n\tcolor: ${({ selected, theme }) => (selected ? theme.TEXT_COLOR : theme.TEXT_COLOR_SECONDARY)};\n`;\n","import React from 'react';\nimport * as Styled from './styles';\n\nexport interface TabProps {\n\tlabel: string;\n\tselected: boolean;\n\tonSelect: () => void;\n}\n\nexport const Tab = ({ label, selected, onSelect }: TabProps) => {\n\treturn (\n\t\t<Styled.Tab selected={selected} onPress={onSelect}>\n\t\t\t<Styled.Label selected={selected}>{label}</Styled.Label>\n\t\t</Styled.Tab>\n\t);\n};\n","import React from 'react';\nimport { Tab } from './tab';\nimport * as Styled from './styles';\n\nexport interface TabsProps {\n\t/**\n\t * List of tabs.\n\t */\n\ttabs: string[];\n\t/**\n\t * Index of selected tab.\n\t */\n\tselected: number;\n\t/**\n\t * Callback when tab is selected.\n\t */\n\tonSelect: (selectedTabIndex: number) => void;\n\t/**\n\t * Content to display in tabs.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * Content to display in tabs.\n\t */\n\tposition?: 'top' | 'bottom';\n}\n\n/**\n * Use to alternate among related views sharing the same context.\n */\nexport const Tabs = ({ tabs, selected, onSelect, children, position = 'top' }: TabsProps) => {\n\tconst tabItems = React.useMemo(\n\t\t() =>\n\t\t\ttabs.map((tab, index) => (\n\t\t\t\t<Tab\n\t\t\t\t\tkey={tab}\n\t\t\t\t\tlabel={tab}\n\t\t\t\t\tselected={selected === index}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onSelect(index)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[tabs, selected, onSelect]\n\t);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{position === 'bottom' && children}\n\t\t\t<Styled.TabsContainer>{tabItems}</Styled.TabsContainer>\n\t\t\t{position === 'top' && children}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { of } from 'rxjs';\nimport { tap, filter } from 'rxjs/operators';\nimport { ObservableResource, useObservableSuspense } from 'observable-hooks';\nimport get from 'lodash/get';\nimport useAppState from '../use-app-state';\nimport initialUI from './ui-initial.json';\n\ninterface UIDisplay {\n\tkey: string;\n\thide: boolean;\n\torder: number;\n}\n\ninterface UIColumn {\n\tkey: string;\n\tdisableSort: boolean;\n\torder: number;\n\twidth: string;\n\thide: boolean;\n\thideLabel: boolean;\n\tdisplay: UIDisplay[];\n}\n\ninterface UISchema {\n\tsortBy: string;\n\tsortDirection: import('@wcpos/common/src/components/table/types').SortDirection;\n\twidth: number;\n\tcolumns: UIColumn[];\n}\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\nexport type UIDocument = import('rxdb').RxLocalDocument<UISchema>;\nexport type UIResource = import('observable-hooks').ObservableResource<UIDocument>;\n\ninterface UIResources {\n\tposProducts: UIResource;\n\tcart: UIResource;\n\tproducts: UIResource;\n\torders: UIResource;\n\tcustomers: UIResource;\n}\n\n// const uiResources: IUIResources = {\n// \tposProducts: undefined,\n// \tcart: undefined,\n// \tproducts: undefined,\n// \torders: undefined,\n// \tcustomers: undefined,\n// };\n\n// @ts-ignore\nexport const UIResourceContext = React.createContext<UIResources>();\n\ninterface UIResourceProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst UIResourceProvider = ({ children }: UIResourceProviderProps) => {\n\tconst { storeDB } = useAppState();\n\n\tconst getResource = (key: string) => {\n\t\tif (!storeDB) {\n\t\t\treturn new ObservableResource(of(null));\n\t\t}\n\n\t\tconst resource$ = storeDB.getLocal$(`ui_${key}`).pipe(\n\t\t\tfilter((uiDoc) => {\n\t\t\t\tconst initial = get(initialUI, key);\n\t\t\t\tif (!uiDoc && initial) {\n\t\t\t\t\tstoreDB.insertLocal(`ui_${key}`, initial);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// add helper function to reset the ui settings\n\t\t\t\tuiDoc.reset = () => {\n\t\t\t\t\tstoreDB.upsertLocal(`ui_${key}`, initial);\n\t\t\t\t};\n\t\t\t\treturn uiDoc;\n\t\t\t})\n\t\t);\n\n\t\treturn new ObservableResource(resource$, (val) => !!val);\n\t};\n\n\tconst uiResources = {\n\t\tposProducts: getResource('posProducts'),\n\t\tcart: getResource('cart'),\n\t\tproducts: getResource('products'),\n\t\torders: getResource('orders'),\n\t\tcustomers: getResource('customers'),\n\t};\n\n\t// @ts-ignore\n\treturn <UIResourceContext.Provider value={uiResources}>{children}</UIResourceContext.Provider>;\n};\n\nexport default UIResourceProvider;\n","import * as React from 'react';\nimport { UIResourceContext } from './ui-resource-provider';\n\nconst useUI = () => {\n\tconst context = React.useContext(UIResourceContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useUI must be called within UIResourceProvider`);\n\t}\n\n\treturn context;\n};\n\nexport default useUI;\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\nimport Button from '../button';\n\nexport const Raw = styled.TextInput`\n\tmax-height: 300px;\n`;\n\nexport const Container = styled.View`\n\tposition: relative;\n\twidth: 100%;\n`;\n\nexport const RawButtonContainer = styled.View`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface RawTreeProps {\n\tdata: any;\n}\n\nexport const Raw = ({ data }: RawTreeProps) => {\n\tconst raw = JSON.stringify(data, null, '  ');\n\n\treturn (\n\t\t<Styled.Raw multiline numberOfLines={raw.split('\\n').length} editable={false} value={raw} />\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const ObjectNode = styled.View`\n\tpadding-left: 20px;\n`;\n","import * as React from 'react';\nimport Text from '../../text';\nimport * as Styled from './styles';\n\nexport interface JsonValueProps {\n\tname: string;\n\tvalue: any;\n\toriginalValue: any;\n\tkeyPath?: string[];\n\tdeep?: number;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n}\n\nexport const JsonValue = ({ name, value, keyPath = [], deep = 0 }: JsonValueProps) => {\n\treturn (\n\t\t<Styled.ObjectNode style={{ flexDirection: 'row' }}>\n\t\t\t<Text type=\"info\">{name} : </Text>\n\t\t\t<Text>{String(value)}</Text>\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonObjectProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonObject = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonObjectProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\t\tconst collapseValue = ' {...}';\n\t\tconst numberOfItems = keyList.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'keys' : 'key';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = keyList.map((key) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={key}\n\t\t\t\tname={key}\n\t\t\t\tdata={data[key]}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text>{' {'}</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>{'}'}</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonArrayProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonArray = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonArrayProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst collapseValue = ' [...]';\n\t\tconst numberOfItems = data.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'items' : 'item';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = data.map((item: any, index: number) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={index}\n\t\t\t\tname={`${index}`}\n\t\t\t\tdata={item}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text> [</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>]</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { JsonValue } from './value';\nimport { JsonObject } from './object';\nimport { JsonArray } from './array';\nimport { getObjectType } from './utils';\n\nexport interface JsonNodeProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonNode = ({\n\tdata,\n\tname,\n\tisCollapsed = (keyPath: string[]) => keyPath.length > 0,\n\tonExpand = () => {},\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonNodeProps) => {\n\tconst dataType = getObjectType(data);\n\n\tswitch (dataType) {\n\t\tcase 'String':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={`\"${data}\"`}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Number':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Boolean':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={!!data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Date':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data.toISOString()}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Null':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"null\"\n\t\t\t\t\toriginalValue=\"null\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Undefined':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"undefined\"\n\t\t\t\t\toriginalValue=\"undefined\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Object':\n\t\t\treturn (\n\t\t\t\t<JsonObject\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Array':\n\t\t\treturn (\n\t\t\t\t<JsonArray\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import * as React from 'react';\nimport { Raw } from './raw';\nimport { JsonNode } from './json/node';\nimport Button from '../button';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface TreeProps {\n\tdata: any;\n\trootName?: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tfallback?: React.ReactNode;\n}\n\nexport const Tree = ({\n\tdata,\n\trootName = 'root',\n\tisCollapsed,\n\tonExpand,\n\tfallback = null,\n}: TreeProps) => {\n\tconst [raw, setRaw] = React.useState(false);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{raw ? (\n\t\t\t\t<Raw data={data} />\n\t\t\t) : (\n\t\t\t\t<JsonNode\n\t\t\t\t\tdata={data}\n\t\t\t\t\tname={rootName}\n\t\t\t\t\tdeep={-1}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Styled.RawButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"raw\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonPress={() => setRaw(!raw)}\n\t\t\t\t\taccessoryLeft={\n\t\t\t\t\t\traw ? (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility-off\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility\" />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Styled.RawButtonContainer>\n\t\t</Styled.Container>\n\t);\n};\n","import styled, { css } from 'styled-components/native';\nimport Icon from '../icon';\nimport Pressable from '../pressable';\n\nexport const PressableContainer = styled(Pressable)`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${({ disabled }) =>\n\t\tdisabled &&\n\t\tcss`\n\t\t\topacity: 0.5;\n\t\t`}\n`;\n\nexport const Box = styled.View<{ checked: boolean | undefined }>`\n\tflex: 0 1 auto;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-style: solid;\n\tbackground-color: ${({ theme, checked }) =>\n\t\tchecked ? theme.CHECKBOX_BACKGROUND_COLOR : 'transparent'};\n\twidth: ${({ theme }) => theme.CHECKBOX_WIDTH};\n\theight: ${({ theme }) => theme.CHECKBOX_HEIGHT};\n\tborder-width: ${({ theme }) => theme.CHECKBOX_BORDER_WIDTH};\n\tborder-color: ${({ theme }) => theme.CHECKBOX_BORDER_COLOR};\n\tborder-radius: ${({ theme }) => theme.CHECKBOX_BORDER_RADIUS};\n`;\n\nexport const Check = styled(Icon)`\n\tcolor: #fff;\n`;\n\nexport const LabelWrapper = styled.View`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0 5px;\n`;\n","import * as React from 'react';\nimport Text from '../text';\nimport { LabelWrapper } from './styles';\n\ntype Props = {\n\tlabel?: React.ReactNode;\n\tchecked?: boolean;\n\tinfo?: React.ReactNode;\n};\n\nconst Label = ({ label, checked, info }: Props) => {\n\treturn (\n\t\t<LabelWrapper>\n\t\t\t<Text>{label}</Text>\n\t\t\t{info && <Text>{info}</Text>}\n\t\t</LabelWrapper>\n\t);\n};\n\nexport default Label;\n","import * as React from 'react';\nimport { Box, Check } from './styles';\n\ntype Props = {\n\tchecked?: boolean;\n\thasError?: boolean;\n\tdisabled?: boolean;\n\tfocused?: boolean;\n\thovered?: boolean;\n\tpressed?: boolean;\n};\n\nexport default function CheckboxIcon({\n\tchecked,\n\thasError,\n\tdisabled,\n\tfocused,\n\thovered,\n\tpressed,\n}: Props) {\n\tconst errorState = hasError && !disabled && !checked;\n\tconst iconColor = disabled ? '#ccc' : '#FFFFFF';\n\treturn (\n\t\t<Box checked={checked}>\n\t\t\t{checked && <Check name=\"check\" size=\"small\" disabled={disabled} color=\"#FFF\" />}\n\t\t</Box>\n\t);\n}\n","import * as React from 'react';\nimport useUncontrolledState from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Label from './label';\nimport Icon from './icon';\nimport * as Styled from './styles';\n\nexport interface CheckboxProps {\n\t/**\n\t * True if selected.\n\t */\n\tchecked?: boolean;\n\t/**\n\t * Label to display next to the Checkbox.\n\t */\n\tlabel: React.ReactNode;\n\t/**\n\t * Additional text to aid in use.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Disables the input.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Called when selection state changes. Should propagate change to `checked` prop.\n\t *\n\t * If not set, component will be an uncontrolled component. @see https://reactjs.org/docs/uncontrolled-components.html\n\t */\n\tonChange?: (checked: boolean) => void;\n\n\t// helpText?: React.ReactNode;\n}\n\n/**\n * @TODO - hover, focus states\n */\nexport const Checkbox = ({\n\tlabel,\n\tdisabled,\n\thelpText,\n\tchecked: checkedRaw = false,\n\tonChange: onChangeRaw,\n}: CheckboxProps) => {\n\tconst [checked, onChange] = useUncontrolledState(checkedRaw, onChangeRaw);\n\tconst onPress = React.useCallback(() => onChange?.(!checked), [checked, onChange]);\n\n\t// const onPress = () => {\n\t// \tif (disabled) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst _checked = !checked;\n\t// \tsetChecked(_checked);\n\t// \tif (typeof onChange === 'function') {\n\t// \t\tonChange(_checked, { target: { name, checked: _checked } });\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<Styled.PressableContainer disabled={disabled} onPress={onPress}>\n\t\t\t<Icon checked={checked} disabled={disabled} />\n\t\t\t<Label label={label} checked={checked} info={helpText} />\n\t\t</Styled.PressableContainer>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tflex-direction: row;\n\tflex: 1;\n\talign-items: center;\n`;\n\nexport const Input = styled.View`\n\tflex: 1;\n`;\n\nexport const Actions = styled.View`\n\tflex-direction: row;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport Tag from '../tag';\nimport * as Styled from './styles';\n\n/**\n *\n */\nexport type SearchActionsProps = {\n\t/**\n\t *\n\t */\n\taction: () => void;\n} & Pick<import('../icon/icon').IconProps, 'name'>; // pass-through props\n\n/**\n *\n */\nexport type SearchFiltersProps = {\n\t/**\n\t *\n\t */\n\tlabel: string;\n} & Pick<import('../tag/tag').TagProps, 'onRemove'>; // pass-through props\n\n/**\n *\n */\nexport type SearchProps = {\n\t/**\n\t * Pass-through to TextInput onChange prop\n\t */\n\tonSearch: (value: string) => void;\n\t/**\n\t * Buttons displayed to the right of the search field\n\t */\n\tactions?: (SearchActionsProps | React.ReactElement)[];\n\t/**\n\t * Tags displayed in the search field\n\t */\n\tfilters?: SearchFiltersProps[];\n} & Pick<\n\timport('../textinput/textinput').TextInputProps,\n\t'label' | 'value' | 'onClear' | 'placeholder'\n>; // pass-through props\n\n/**\n *\n */\nexport const Search = ({ actions, onSearch, filters, ...rest }: SearchProps) => {\n\tconst renderFilters = React.useMemo(() => {\n\t\tif (filters) {\n\t\t\treturn filters.map(({ label: filterLabel, onRemove }) => (\n\t\t\t\t<Tag removable onRemove={onRemove}>\n\t\t\t\t\t{filterLabel}\n\t\t\t\t</Tag>\n\t\t\t));\n\t\t}\n\t\treturn undefined;\n\t}, [filters]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Input>\n\t\t\t\t<TextInput\n\t\t\t\t\thideLabel\n\t\t\t\t\tclearable\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tleftAccessory={renderFilters}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t</Styled.Input>\n\t\t\t{/* {actions && (\n\t\t\t\t<Styled.Actions>\n\t\t\t\t\t{actions.map((action) => {\n\t\t\t\t\t\tif (React.isValidElement(action)) {\n\t\t\t\t\t\t\treturn action;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <Icon name={action.name} onPress={action.action} />;\n\t\t\t\t\t})}\n\t\t\t\t</Styled.Actions>\n\t\t\t)} */}\n\t\t</Styled.Container>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\twidth: 8px;\n\theight: 8px;\n`;\n\nexport const Left = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-right-width: 4px;\n\tborder-right-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Right = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-left-width: 4px;\n\tborder-left-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Up = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n\nexport const Down = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface ArrowProps {\n\tdirection?: 'left' | 'right' | 'up' | 'down';\n\tsize?: 'small' | 'large' | 'default';\n}\n\nexport const Arrow = ({ direction = 'down', size = 'default' }: ArrowProps) => {\n\tconst renderArrow = () => {\n\t\tswitch (direction) {\n\t\t\tcase 'left':\n\t\t\t\treturn <Styled.Left />;\n\t\t\tcase 'right':\n\t\t\t\treturn <Styled.Right />;\n\t\t\tcase 'up':\n\t\t\t\treturn <Styled.Up />;\n\t\t\tdefault:\n\t\t\t\treturn <Styled.Down />;\n\t\t}\n\t};\n\n\treturn <Styled.Container>{renderArrow()}</Styled.Container>;\n};\n","import * as React from 'react';\nimport { useObservable, useObservableSuspense } from 'observable-hooks';\nimport { switchMap, catchError, shareReplay, first } from 'rxjs/operators';\nimport { useNavigation } from '@react-navigation/native';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\nexport interface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tfilters?: Record<string, unknown>;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/**\n *\n *\n * @param collectionName\n * @param initialQuery\n * @param options\n * @returns\n */\nexport const useDataObservable = (\n\tcollectionName: 'products' | 'orders' | 'customers',\n\tinitialQuery: QueryState,\n\toptions = {}\n) => {\n\tconst { storeDB } = useAppState();\n\tconst collection = storeDB?.collections[collectionName];\n\tconst [query, setQuery] = React.useState<QueryState>(initialQuery);\n\tconst navigation = useNavigation();\n\n\tif (!collection) {\n\t\tthrow Error('Collection not found');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst data$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\t// distinctUntilChanged((a, b) => a[0] === b[0]),\n\t\t\t\t// debounceTime(150),\n\t\t\t\tswitchMap(([q]) => {\n\t\t\t\t\t// const regexp = new RegExp(escape(q.search), 'i');\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst RxQuery = collection.query(q);\n\t\t\t\t\t// \t.find({\n\t\t\t\t\t// \t\tselector: {\n\t\t\t\t\t// \t\t\tdateCreatedGmt: { $regex: regexp },\n\t\t\t\t\t// \t\t},\n\t\t\t\t\t// \t})\n\t\t\t\t\t// \t// @ts-ignore\n\t\t\t\t\t// \t.sort({ [q.sortBy]: q.sortDirection });\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t}),\n\t\t\t\tshareReplay(1),\n\t\t\t\tcatchError((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn err;\n\t\t\t\t})\n\t\t\t),\n\t\t[query]\n\t);\n\n\t/**\n\t *\n\t */\n\t// useSubscription(data$.pipe(first()), (result: any) => {\n\t// \t// if first and empty, do an id audit\n\t// \tif (result.length === 0) {\n\t// \t\t// @ts-ignore\n\t// \t\tcollection.audit().catch((err: any) => {\n\t// \t\t\tif (err && err.response && err.response.status === 401) {\n\t// \t\t\t\t// @ts-ignore\n\t// \t\t\t\tnavigation.navigate('Modal', { login: true });\n\t// \t\t\t}\n\t// \t\t\tconsole.warn(err);\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t/**\n\t *\n\t */\n\t// React.useEffect(() => {\n\t// \t// @ts-ignore\n\t// \tcollection.restApiQuery(query).then((replicationState: any) => {\n\t// \t\treplicationState.error$.subscribe((err: any) => {\n\t// \t\t\tif (err.code === 401) {\n\t// \t\t\t\t// @ts-ignore\n\t// \t\t\t\tnavigation.navigate('Modal', { login: true });\n\t// \t\t\t}\n\t// \t\t});\n\t// \t});\n\t// }, [collection, query]);\n\n\t/**\n\t *\n\t */\n\treturn { data$, query, setQuery };\n};\n","import * as React from 'react';\nimport set from 'lodash/set';\nimport Tag from '@wcpos/common/src/components/tag';\nimport useQuery from '@wcpos/common/src/hooks/use-query';\n\ninterface ProductCategoriesProps {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n}\n\nconst ProductCategories = ({ item: product }: ProductCategoriesProps) => {\n\tconst { categories } = product;\n\tconst { setQuery } = useQuery();\n\n\t/**\n\t *\n\t */\n\tconst handleSelectCategory = React.useCallback(\n\t\t(category: any) => {\n\t\t\tsetQuery('filters.category', category);\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(categories)) {\n\t\t\treturn categories.map((cat: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: cat.id,\n\t\t\t\t\tlabel: cat.name,\n\t\t\t\t\taction: () => handleSelectCategory(cat),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [categories, handleSelectCategory]);\n\n\t/**\n\t *\n\t */\n\treturn categories ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductCategories;\n","import * as React from 'react';\nimport set from 'lodash/set';\nimport Tag from '@wcpos/common/src/components/tag';\nimport useQuery from '@wcpos/common/src/hooks/use-query';\n\ntype ProductTagsProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst ProductTags = ({ item: product }: ProductTagsProps) => {\n\tconst { tags } = product;\n\tconst { setQuery } = useQuery();\n\n\t/**\n\t *\n\t */\n\tconst handleSelectTag = React.useCallback(\n\t\t(tag: any) => {\n\t\t\tsetQuery('filters.tag', tag);\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(tags)) {\n\t\t\treturn tags.map((tag: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: tag.id,\n\t\t\t\t\tlabel: tag.name,\n\t\t\t\t\taction: () => handleSelectTag(tag),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [tags, handleSelectTag]);\n\n\t/**\n\t *\n\t */\n\treturn tags ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductTags;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Animated, {\n\tuseAnimatedGestureHandler,\n\tuseSharedValue,\n\tuseAnimatedStyle,\n\twithSpring,\n} from 'react-native-reanimated';\nimport { PanGestureHandler, PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n\nconst clamp = (value: number, lowerBound: number, upperBound: number) => {\n\t'worklet';\n\n\treturn Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nexport interface DraggableProps {\n\tchildren: React.ReactNode;\n\t/**\n\t *\n\t */\n\tonStart?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonActive?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonEnd?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\tminX?: number;\n\tminY?: number;\n\tmaxX?: number;\n\tmaxY?: number;\n}\n\nexport const Draggable = ({\n\tchildren,\n\tonStart,\n\tonActive,\n\tonEnd,\n\tminX,\n\tminY,\n\tmaxX,\n\tmaxY,\n}: DraggableProps) => {\n\tconst onGestureEvent = useAnimatedGestureHandler<\n\t\tPanGestureHandlerGestureEvent,\n\t\t{ x: number; y: number }\n\t>({\n\t\tonStart(event, ctx) {\n\t\t\tif (onStart) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonStart(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonActive(event, ctx) {\n\t\t\tif (onActive) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonActive(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonEnd(event, ctx) {\n\t\t\tif (onEnd) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonEnd(event, ctx);\n\t\t\t}\n\t\t},\n\t});\n\n\treturn <PanGestureHandler onGestureEvent={onGestureEvent}>{children}</PanGestureHandler>;\n};\n\nexport default Draggable;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Animated, {\n\tuseAnimatedRef,\n\t// measure,\n\tuseSharedValue,\n\tuseAnimatedStyle,\n\tuseDerivedValue,\n\twithSpring,\n\twithTiming,\n\trunOnUI,\n} from 'react-native-reanimated';\nimport useOnLayout from '@wcpos/common/src/hooks/use-on-layout';\nimport * as Styled from './styles';\n\nexport interface CollapsibleProps {\n\t/**\n\t * Toggle the expanded state of the Collapsible.\n\t */\n\topen: boolean;\n\t/**\n\t * Content that should be collapsible.\n\t */\n\tchildren: React.ReactNode;\n}\n\n/**\n * Make long sections of information available in a block that can expand or collapse.\n *\n * Should not wrap views with shadows, as shadow will be clipped.\n */\nexport const Collapsible = ({ open, children }: CollapsibleProps) => {\n\tconst aref = useAnimatedRef<View>();\n\tconst progress = useDerivedValue(() => (open ? withTiming(1) : withTiming(0)));\n\tconst height = useSharedValue(0);\n\n\tconst style = useAnimatedStyle(() => ({\n\t\theight: height.value * progress.value,\n\t\topacity: progress.value,\n\t}));\n\n\treturn (\n\t\t<Styled.Container as={Animated.View} style={style}>\n\t\t\t<View\n\t\t\t\tref={aref}\n\t\t\t\tonLayout={({\n\t\t\t\t\tnativeEvent: {\n\t\t\t\t\t\tlayout: { height: h },\n\t\t\t\t\t},\n\t\t\t\t}) => {\n\t\t\t\t\theight.value = h;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t</Styled.Container>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tpadding: 3px;\n\topacity: 0.6;\n`;\n\nexport const Up = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ active, theme }) =>\n\t\tactive ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n\tmargin-bottom: 2px;\n`;\n\nexport const Down = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ active, theme }) => (active ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED)};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\ntype SortDirection = import('../table/types').SortDirection;\n\nexport interface SortIconProps {\n\t/**\n\t *\n\t */\n\tdirection?: SortDirection;\n\t/**\n\t *\n\t */\n\tvisible?: boolean;\n}\n\nexport const SortIcon = ({ direction, visible = true }: SortIconProps) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Up active={direction === 'asc'} />\n\t\t\t<Styled.Down active={direction === 'desc'} />\n\t\t</Styled.Container>\n\t);\n};\n","export { Draggable as default } from './draggable';\n","import * as React from 'react';\nimport { LayoutRectangle, ViewProps } from 'react-native';\n\n/**\n * Custom hook to use with `View.onLayout` to get layout of View.\n */\nexport const useOnLayout = (): [LayoutRectangle | null, Required<ViewProps>['onLayout']] => {\n\tconst [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n\tconst onLayout = React.useCallback<Required<ViewProps>['onLayout']>(\n\t\t({ nativeEvent }) => {\n\t\t\tsetLayout(nativeEvent.layout);\n\t\t},\n\t\t[setLayout]\n\t);\n\n\treturn [layout, onLayout];\n};\n\nexport default useOnLayout;\n","/**\n * Get Object type.\n * @param obj {*} object to get type\n * @returns {*}\n */\nfunction getObjectType(obj: any) {\n\tif (\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\t!Array.isArray(obj) &&\n\t\ttypeof obj[Symbol.iterator] === 'function'\n\t) {\n\t\treturn 'Iterable';\n\t}\n\treturn Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n/**\n * Parse.\n * @param string {String} string to parse\n * @returns {*}\n */\nfunction parse(string: string) {\n\tlet result = string;\n\n\t// Check if string contains 'function' and start with it to eval it\n\tif (result.indexOf('function') === 0) {\n\t\treturn eval(`(${result})`); // eslint-disable-line no-eval\n\t}\n\n\ttry {\n\t\tresult = JSON.parse(string);\n\t} catch (e) {\n\t\t// Error\n\t}\n\treturn result;\n}\n\nexport { getObjectType, parse };\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\toverflow: hidden;\n`;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n\nexport const ProductsColumn = styled.View`\n\theight: 100%;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n\tflex-basis: 60%;\n`;\n\nexport const CartColumn = styled.View`\n\theight: 100%;\n\tflex: 1;\n`;\n\nexport const CheckoutColumn = styled.View`\n\theight: 100%;\n\tflex: 1;\n`;\n","import styled from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Display = styled.View`\n\tflex-direction: row;\n`;\n\nexport const DisplayText = styled(Text)`\n\tflex: 1;\n`;\n\nexport const Keys = styled.View`\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tflex-direction: row;\n`;\n\nexport const Key = styled(Pressable)`\n\tflex-grow: 1;\n\tflex-shrink: 0;\n\tflex-basis: 30%;\n\talign-items: center;\n\tmargin: 1px;\n`;\n\nexport const KeyText = styled(Text)``;\n","import * as React from 'react';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface NumpadProps {\n\tdisplay?: 'below' | 'center' | 'bottom' | 'inline';\n\tplaceholder?: string;\n}\n\nconst keys = ['7', '8', '9', '4', '5', '6', '1', '2', '3', '-', '0', '.'];\n\nexport const Numpad = ({ display = 'below', placeholder = '0' }: NumpadProps) => {\n\tconst [displayText, setDisplayText] = React.useState(placeholder);\n\n\tconst handleKeyPress = (key: string) => {\n\t\tsetDisplayText(displayText + key);\n\t};\n\n\tconst handleBackspace = () => {\n\t\tsetDisplayText(displayText);\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Display>\n\t\t\t\t<Styled.DisplayText>{displayText}</Styled.DisplayText>\n\t\t\t\t<Icon name=\"backspace\" onPress={handleBackspace} />\n\t\t\t</Styled.Display>\n\t\t\t<Styled.Keys>\n\t\t\t\t{keys.map((key) => (\n\t\t\t\t\t<Styled.Key key={`button-${key}`} onPress={() => handleKeyPress(key)}>\n\t\t\t\t\t\t<Styled.KeyText>{key}</Styled.KeyText>\n\t\t\t\t\t</Styled.Key>\n\t\t\t\t))}\n\t\t\t</Styled.Keys>\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Numpad from '@wcpos/common/src/components/numpad';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Quantity = ({ lineItem }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst quantity = useObservableState(lineItem.quantity$, lineItem.quantity);\n\n\tconst handleChangeText = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ quantity: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\tactivator={\n\t\t\t\t<Button title={String(quantity)} onPress={() => setVisible(true)} background=\"outline\" />\n\t\t\t}\n\t\t>\n\t\t\t<Numpad placeholder={String(quantity)} />\n\t\t</Popover>\n\t);\n};\n\nexport default Quantity;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Price = ({ lineItem }: Props) => {\n\tconst price = useObservableState(lineItem.price$, lineItem.price);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ price: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttitle={String(price)}\n\t\t\tonPress={() => {\n\t\t\t\tconsole.log('numpad');\n\t\t\t}}\n\t\t\tbackground=\"outline\"\n\t\t/>\n\t);\n};\n\nexport default Price;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Format from '@wcpos/common/src/components/format';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'total' | 'subtotal';\n}\n\nconst Total = ({ item, type = 'total' }: Props) => {\n\tconst total = useObservableState(item[`${type}$`], item[type]);\n\tuseWhyDidYouUpdate('CartLineItemTotal', { item, total });\n\n\treturn <Format.Currency>{total}</Format.Currency>;\n};\n\nexport default Total;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'totalTax' | 'subtotalTax';\n}\n\nconst Tax = ({ item, type = 'totalTax' }: Props) => {\n\tconst tax = useObservableState(item[`${type}$`], item[type]);\n\treturn <Text>{tax}</Text>;\n};\n\nexport default Tax;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View``;\n\nexport const Row = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Cell = styled.View`\n\tflex: 1;\n\tpadding: 5px;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface MetaDataProps {\n\tdata: { id: number; key: string; value: string }[];\n}\n\nexport const MetaData = ({ data }: MetaDataProps) => {\n\tconst handleAddRow = () => {\n\t\tconsole.log('hi');\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{data?.map((meta) => (\n\t\t\t\t<Styled.Row key={meta.key}>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Key\" value={meta.key} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Value\" value={meta.value} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Icon name=\"add\" onPress={handleAddRow} />\n\t\t\t\t</Styled.Row>\n\t\t\t))}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\n\nexport interface EditModalProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\tonClose: () => void;\n}\n\nconst EditModal = ({ item, onClose }: EditModalProps) => {\n\tuseObservableState(item.$); // re-render\n\n\tconst handleChangeTaxClass = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ taxClass: newValue });\n\t};\n\n\tconst hasProperty = (property: string) => {\n\t\treturn item.collection.schema.topLevelFields.includes(property);\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={item.name || item.methodTitle}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t{hasProperty('name') && <TextInput label=\"Name\" value={item.name} />}\n\t\t\t\t{hasProperty('taxStatus') && (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"Taxable\"\n\t\t\t\t\t\tchecked={item.taxStatus === 'taxable'}\n\t\t\t\t\t\tonChange={(value) => item.atomicPatch({ taxStatus: value ? 'taxable' : 'none' })}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{hasProperty('taxClass') && (\n\t\t\t\t\t<TextInput label=\"Tax Class\" value={item.taxClass} onChange={handleChangeTaxClass} />\n\t\t\t\t)}\n\t\t\t\t<MetaData\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata={item.metaData}\n\t\t\t\t/>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default EditModal;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Icon from '@wcpos/common/src/components/icon';\nimport { useSnackbar } from '@wcpos/common/src/components/snackbar/use-snackbar';\nimport { POSContext } from '../../../pos';\nimport EditModal from './edit-modal';\n\ninterface ActionProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst Actions = ({ item }: ActionProps) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst { currentOrder } = React.useContext(POSContext);\n\tconst undoFeeRemove = () => {\n\t\tconsole.log('Undo remove', item);\n\t};\n\n\tconst showSnackbar = useSnackbar({\n\t\tmessage: 'Item removed',\n\t\tdismissable: true,\n\t\taction: { label: 'Undo', action: undoFeeRemove },\n\t});\n\n\tconst handleRemove = () => {\n\t\tcurrentOrder?.removeCartLine(item);\n\t\tshowSnackbar();\n\t};\n\n\treturn (\n\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t<Icon name=\"more-vert\" size=\"large\" onPress={() => setVisible(true)} backgroundStyle=\"none\" />\n\t\t\t<Icon\n\t\t\t\tname=\"remove\"\n\t\t\t\tsize=\"x-large\"\n\t\t\t\tonPress={handleRemove}\n\t\t\t\tbackgroundStyle=\"none\"\n\t\t\t\ttype=\"critical\"\n\t\t\t/>\n\t\t\t{visible && <EditModal item={item} onClose={() => setVisible(false)} />}\n\t\t</View>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport { SnackbarOptions, SnackbarContext } from './snackbar-provider';\n\n/**\n * Get a function for showing a Snackbar with the specified options.\n *\n * Simply call the function to show the Snackbar, which will be automatically\n * dismissed.\n *\n * @example\n * const showSnackbar = useSnackbar({ message: 'This is a Snackbar!' })\n * <Button onClick={showSnackbar}>Show Snackbar!</Button>\n */\nexport const useSnackbar = (options: SnackbarOptions): (() => void) => {\n\tconst context = React.useContext(SnackbarContext);\n\n\treturn React.useCallback(() => context.show(options), [context, options]);\n};\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Quantity from './cells/quantity';\nimport Price from './cells/price';\nimport Total from './cells/total';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\titem: import('@wcpos/common/src/database').LineItemDocument;\n\tcolumns: any;\n}\n\nconst LineItem = ({ item, columns }: Props) => {\n\tuseWhyDidYouUpdate('CartLineItem', { item, columns });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <Quantity lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'subtotalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} type=\"subtotalTax\" />;\n\t\t\t\t\t\t\t\tcase 'subtotal':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} type=\"subtotal\" />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} />;\n\t\t\t\t\t\t\t\tcase 'total':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={item} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default LineItem;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst FeeAndShippingPrice = ({ item }: Props) => {\n\tconst price = useObservableState(item.total$, item.total);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ total: newValue });\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttitle={price}\n\t\t\tonPress={() => {\n\t\t\t\tconsole.log('numpad');\n\t\t\t}}\n\t\t\tbackground=\"outline\"\n\t\t/>\n\t);\n};\n\nexport default FeeAndShippingPrice;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tfee: import('@wcpos/common/src/database').FeeLineDocument;\n\tcolumns: any;\n}\n\nconst FeeLine = ({ fee, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={fee} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={fee} />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={fee} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={fee} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default FeeLine;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tshipping: import('@wcpos/common/src/database').ShippingLineDocument;\n\tcolumns: any;\n}\n\nconst ShippingLine = ({ shipping, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={shipping} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\t\treturn <Text>{shipping.methodTitle}</Text>;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={shipping} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default ShippingLine;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport { from, of, combineLatest, zip, Observable } from 'rxjs';\nimport { switchMap, tap, catchError, map } from 'rxjs/operators';\nimport { useTranslation } from 'react-i18next';\nimport orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Pressable from '@wcpos/common/src/components/pressable';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Button from '@wcpos/common/src/components/button';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport LineItem from './rows/line-item';\nimport FeeLine from './rows/fee-line';\nimport ShippingLine from './rows/shipping-line';\n\ntype ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype LineItemDocument = import('@wcpos/common/src/database').LineItemDocument;\ntype FeeLineDocument = import('@wcpos/common/src/database').FeeLineDocument;\ntype ShippingLineDocument = import('@wcpos/common/src/database').ShippingLineDocument;\n\ninterface ICartTableProps {\n\torder: OrderDocument;\n\tcolumns: ColumnProps[];\n\titems: any;\n\tquery: any;\n\tonSort: Sort;\n\tui: any;\n}\n\nconst CartTable = ({ order, columns, items, query, onSort, ui }: ICartTableProps) => {\n\tconst { t } = useTranslation();\n\n\t// const items$ = useObservable(\n\t// \t(inputs$) =>\n\t// \t\tinputs$.pipe(\n\t// \t\t\t// @ts-ignore\n\t// \t\t\tswitchMap(([o, q]) => o.getCart$(q))\n\t// \t\t),\n\t// \t[order, query]\n\t// ) as Observable<any[]>;\n\n\t// const items = useObservableState(items$, []);\n\tconst footer = React.useMemo(() => {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={{ flexDirection: 'row', padding: 5, alignItems: 'center' }}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addFeeLine({ name: 'Fee', total: '10' });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text style={{ flex: 1 }}>Add fee</Text>\n\t\t\t\t\t<Icon name=\"addCircleOutline\" />\n\t\t\t\t</Pressable>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={{ flexDirection: 'row', padding: 5, alignItems: 'center' }}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addShippingLine({\n\t\t\t\t\t\t\tmethodTitle: 'Shipping',\n\t\t\t\t\t\t\tmethodId: 'test',\n\t\t\t\t\t\t\ttotal: '5',\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text style={{ flex: 1 }}>Add shipping</Text>\n\t\t\t\t\t<Icon name=\"addCircleOutline\" />\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t);\n\t}, [order]);\n\n\tuseWhyDidYouUpdate('CartTable', { columns, items, query, onSort, ui });\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={items}\n\t\t\tsort={onSort}\n\t\t\tsortBy={query.sortBy}\n\t\t\tsortDirection={query.sortDirection}\n\t\t\tfooter={footer}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row columns={columns}>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{t(`cart.column.label.${column.key}`)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }): React.ReactElement | null => {\n\t\t\t\t\tswitch (item.collection.name) {\n\t\t\t\t\t\tcase 'line_items':\n\t\t\t\t\t\t\treturn <LineItem item={item} columns={columns} />;\n\t\t\t\t\t\tcase 'fee_lines':\n\t\t\t\t\t\t\treturn <FeeLine fee={item} columns={columns} />;\n\t\t\t\t\t\tcase 'shipping_lines':\n\t\t\t\t\t\t\treturn <ShippingLine shipping={item} columns={columns} />;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default CartTable;\n","import styled from 'styled-components/native';\n\nexport const ScrollView = styled.ScrollView`\n\tmax-height: 200px;\n`;\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport TextInput from '../textinput';\nimport * as Styled from './styles';\n\nexport interface ComboboxChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tkey: string;\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface ComboboxProps {\n\t/**\n\t * Label to display above the input.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: ComboboxChoice[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: any) => void;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonSearch?: (value: string) => void;\n\t/**\n\t * Search term\n\t */\n\tsearchValue?: string | null;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Set this to `true` to hide the label on top of the input. `label` property is still mandatory for accessibility purposes, even if not shown.\n\t */\n\thideLabel?: boolean;\n}\n\n/**\n * Let the user search and choose one option from multiple ones.\n */\nexport const Combobox = ({\n\tlabel,\n\tchoices,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\tsearchValue,\n\tonSearch,\n\thideLabel,\n}: ComboboxProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.key}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onChange(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={open}\n\t\t\tactivator={\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel={label}\n\t\t\t\t\thideLabel={hideLabel}\n\t\t\t\t\tonFocus={showPopover}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tvalue={searchValue || selected}\n\t\t\t\t\tclearable\n\t\t\t\t\tonClear={() => onChange(null)}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonRequestClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n\t\t\thideBackdrop\n\t\t\tmatchWidth\n\t\t>\n\t\t\t<Styled.ScrollView>{choiceComponents}</Styled.ScrollView>\n\t\t</Popover>\n\t);\n};\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport {\n\tswitchMap,\n\ttap,\n\tdebounceTime,\n\tcatchError,\n\tdistinctUntilChanged,\n\tmap,\n} from 'rxjs/operators';\nimport orderBy from 'lodash/orderBy';\nimport { useTranslation } from 'react-i18next';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Combobox from '@wcpos/common/src/components/combobox';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface CustomerSelectProps {\n\tselectedCustomer?: CustomerDocument;\n\tonSelectCustomer: (value: CustomerDocument) => void;\n}\n\nconst CustomerSelect = ({ selectedCustomer, onSelectCustomer }: CustomerSelectProps) => {\n\tconst { t } = useTranslation();\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tconst customers = useObservableState(data$, []) as CustomerDocument[];\n\n\tconst choices = React.useMemo(() => {\n\t\tconst sortedCustomers = orderBy(customers, 'lastName');\n\n\t\treturn sortedCustomers.map((customer) => ({\n\t\t\tlabel: `${customer.firstName} ${customer.lastName}`,\n\t\t\tvalue: customer,\n\t\t\tkey: customer.localID,\n\t\t}));\n\t}, [customers]);\n\n\tuseWhyDidYouUpdate('Customer Select', {\n\t\tselectedCustomer,\n\t\tonSelectCustomer,\n\t\tcustomers,\n\t\tonSearch,\n\t\tquery,\n\t\tsetQuery,\n\t\tdata$,\n\t});\n\n\treturn (\n\t\t<Combobox\n\t\t\tlabel=\"Search customers\"\n\t\t\thideLabel\n\t\t\tchoices={choices}\n\t\t\tplaceholder={t('customers.search.placeholder')}\n\t\t\tselected={\n\t\t\t\tselectedCustomer\n\t\t\t\t\t? // @ts-ignore\n\t\t\t\t\t  `${selectedCustomer.firstName} ${selectedCustomer.lastName}`\n\t\t\t\t\t: ''\n\t\t\t}\n\t\t\tonSearch={onSearch}\n\t\t\tsearchValue={query.search}\n\t\t\tonChange={onSelectCustomer}\n\t\t/>\n\t);\n};\n\nexport default CustomerSelect;\n","import * as React from 'react';\nimport { useObservableSuspense } from 'observable-hooks';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport interface AddEditCustomerProps {\n\tcustomer?: import('@wcpos/common/src/database').CustomerDocument;\n}\n\nconst AddEditCustomer = ({ customer }: AddEditCustomerProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [visible, setVisible] = React.useState(false);\n\tconst [firstName, setFirstName] = React.useState(customer?.firstName);\n\tconst [email, setEmail] = React.useState(customer?.email);\n\tconst [selected, setSelected] = React.useState(0);\n\tconst show = React.useCallback(() => setVisible(true), []);\n\tconst hide = React.useCallback(() => setVisible(false), []);\n\n\tconst title = customer ? 'Edit Customer' : 'Add Customer';\n\n\tconst handleSave = async () => {\n\t\tconst currentCustomer = customer;\n\t\tif (!currentCustomer) {\n\t\t\tconst customersCollection = storeDB?.collections.customers;\n\t\t\t// @ts-ignore\n\t\t\tconst currentCustomer = await customersCollection?.insert({ firstName, email });\n\t\t} else {\n\t\t\tcurrentCustomer.atomicPatch({ firstName, email });\n\t\t}\n\n\t\tif (currentCustomer) {\n\t\t\t// @ts-ignore\n\t\t\tconst replicationState = currentCustomer.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t// showAuthLogin();\n\t\t\t\t\tconsole.log('need to login');\n\t\t\t\t}\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\t};\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"First Name\" value={firstName} onChange={setFirstName} />\n\t\t\t\t<TextInput label=\"Email\" value={email} onChange={setEmail} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>{customer ? <Tree data={customer.toJSON()} /> : null}</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Icon name=\"addCustomer\" onPress={show} tooltip=\"Add new customer\" />\n\t\t\t{visible && (\n\t\t\t\t<Dialog\n\t\t\t\t\ttitle={title}\n\t\t\t\t\topen\n\t\t\t\t\tonClose={hide}\n\t\t\t\t\tprimaryAction={{ label: 'Save', action: handleSave }}\n\t\t\t\t>\n\t\t\t\t\t<Tabs tabs={['Form', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</Tabs>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default AddEditCustomer;\n","import * as React from 'react';\nimport { useObservableSuspense, useObservableState, useObservable } from 'observable-hooks';\nimport { View } from 'react-native';\nimport Text from '@wcpos/common/src/components/text';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\n\ninterface Props {\n\torder: OrderDocument;\n}\n\nconst Totals = ({ order }: Props) => {\n\tconst total = useObservableState(order.total$, order.total);\n\tconst totalTax = useObservableState(order.totalTax$, order.totalTax);\n\n\treturn (\n\t\t<>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Total Tax:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{totalTax}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Order Total:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{total}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</>\n\t);\n};\n\nexport default Totals;\n","import * as React from 'react';\nimport LoginForm from './login-form';\n\n// @ts-ignore\nexport const AuthLoginContext = React.createContext(() => {});\n/**\n *\n */\nexport const AuthLoginProvider: React.FC = ({ children }) => {\n\tconst [visible, setVisible] = React.useState(false);\n\n\tconst show = () => {\n\t\tsetVisible(true);\n\t};\n\n\treturn (\n\t\t<AuthLoginContext.Provider value={show}>\n\t\t\t{children}\n\t\t\t{visible && <LoginForm onClose={() => setVisible(false)} />}\n\t\t</AuthLoginContext.Provider>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Button from '@wcpos/common/src/components/button';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\nimport Text from '@wcpos/common/src/components/text';\nimport useAuthLogin from '@wcpos/common/src/hooks/use-auth-login';\nimport { POSContext } from '../pos';\n\nexport interface ButtonsProps {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Buttons = ({ order }: ButtonsProps) => {\n\tconst { setCurrentOrder } = React.useContext(POSContext);\n\tconst [visible, setVisible] = React.useState(false);\n\tconst showAuthLogin = useAuthLogin();\n\n\treturn (\n\t\t<>\n\t\t\t<Button.Group style={{ marginBottom: 5 }}>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Add Note\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.atomicPatch({ customerNote: 'This is a note!' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Order Meta\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetVisible(true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Save\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\tconst replicationState = order.syncRestApi({\n\t\t\t\t\t\t\tpush: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t\t\t\tshowAuthLogin();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.run(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Button.Group>\n\t\t\t<Button.Group>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Void\"\n\t\t\t\t\ttype=\"critical\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\torder.remove();\n\t\t\t\t\t\tsetCurrentOrder(undefined);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ width: '80px' }}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Checkout\"\n\t\t\t\t\taccessoryRight={<Text type=\"inverse\">{order.total}</Text>}\n\t\t\t\t\ttype=\"success\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\torder.atomicPatch({ status: 'pos-checkout' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Button.Group>\n\t\t\t{visible && (\n\t\t\t\t<Dialog\n\t\t\t\t\ttitle=\"Order Data\"\n\t\t\t\t\topen\n\t\t\t\t\tonClose={() => setVisible(false)}\n\t\t\t\t\tprimaryAction={{ label: 'Save', action: () => setVisible(false) }}\n\t\t\t\t>\n\t\t\t\t\t<Dialog.Section>\n\t\t\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"Price Includes Tax\"\n\t\t\t\t\t\t\tchecked={order.pricesIncludeTax}\n\t\t\t\t\t\t\tonChange={(value) => order.atomicPatch({ pricesIncludeTax: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MetaData\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata={order.metaData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput label=\"Currency Symbol\" value={order.currencySymbol} />\n\t\t\t\t\t</Dialog.Section>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Buttons;\n","import * as React from 'react';\nimport { AuthLoginContext } from './auth-login-provider';\n\nexport const useAuthLogin = () => {\n\treturn React.useContext(AuthLoginContext);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { useObservableState, useObservable } from 'observable-hooks';\nimport { Observable } from 'rxjs';\nimport { switchMap, filter } from 'rxjs/operators';\nimport { isRxDocument } from 'rxdb/plugins/core';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport Tag from '@wcpos/common/src/components/tag';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from './table';\nimport CustomerSelect from '../../common/customer-select';\nimport AddCustomer from '../../common/add-edit-customer';\nimport UISettings from '../../common/ui-settings';\nimport Totals from './totals';\nimport Buttons from './buttons';\nimport { POSContext } from '../pos';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\n\ninterface ICartProps {\n\tui: any;\n\torders: OrderDocument[];\n}\n\nconst Cart = ({ ui, orders = [] }: ICartProps) => {\n\tuseWhyDidYouUpdate('Cart', { ui, orders });\n\tconst { currentOrder, setCurrentOrder, currentCustomer, setCurrentCustomer } =\n\t\tReact.useContext(POSContext);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst [query, setQuery] = React.useState({\n\t\tsortBy: 'id',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst handleSort = React.useCallback<Sort>(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery({ ...query, sortBy, sortDirection });\n\t\t},\n\t\t[query]\n\t);\n\n\tconst items$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tfilter(([o, q]) => isRxDocument(o)),\n\t\t\t\t// @ts-ignore\n\t\t\t\t// switchMap(([o, q]) => o.getCart$(q))\n\t\t\t\tswitchMap(([o, q]) => o.cart$)\n\t\t\t),\n\t\t[currentOrder, query]\n\t) as Observable<any[]>;\n\n\tconst items = useObservableState(items$, []);\n\n\tconst handleSelectCustomer = React.useCallback(\n\t\t(value: CustomerDocument) => {\n\t\t\tif (currentOrder) {\n\t\t\t\tcurrentOrder.addCustomer(value);\n\t\t\t}\n\t\t\tsetCurrentCustomer(value);\n\t\t},\n\t\t[currentOrder, setCurrentCustomer]\n\t);\n\n\tconst cartTabs = React.useMemo(() => {\n\t\treturn orders.map((order) => {\n\t\t\treturn order.total;\n\t\t});\n\t}, [orders]);\n\n\tconst onSelect = React.useCallback(\n\t\t(index) => {\n\t\t\tsetCurrentOrder(orders[index]);\n\t\t},\n\t\t[orders, setCurrentOrder]\n\t);\n\n\treturn (\n\t\t<Tabs\n\t\t\t// @ts-ignore\n\t\t\ttabs={cartTabs}\n\t\t\tselected={0}\n\t\t\tonSelect={onSelect}\n\t\t\tposition=\"bottom\"\n\t\t>\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t\t{currentCustomer ? (\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Text>Customer: </Text>\n\t\t\t\t\t\t\t\t<Tag\n\t\t\t\t\t\t\t\t\tremovable\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('edit customer');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonRemove={() => {\n\t\t\t\t\t\t\t\t\t\tsetCurrentCustomer(undefined);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>{`${currentCustomer.firstName} ${currentCustomer.lastName}`}</Tag>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<CustomerSelect onSelectCustomer={handleSelectCustomer} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</View>\n\t\t\t\t\t<AddCustomer />\n\t\t\t\t\t<UISettings ui={ui} />\n\t\t\t\t</Segment>\n\t\t\t\t{currentOrder ? (\n\t\t\t\t\t<Segment.Group grow>\n\t\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\torder={currentOrder}\n\t\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\tonSort={handleSort}\n\t\t\t\t\t\t\t\tui={ui}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Totals order={currentOrder} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Buttons order={currentOrder} />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Segment.Group>\n\t\t\t\t) : (\n\t\t\t\t\t<Segment content=\"Add item to cart\" grow />\n\t\t\t\t)}\n\t\t\t</Segment.Group>\n\t\t</Tabs>\n\t);\n};\n\nexport default Cart;\n","import * as React from 'react';\nimport http from 'axios';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport { useNavigation } from '@react-navigation/native';\nimport get from 'lodash/get';\n\ntype CollectionNames = 'products';\n\nconst fields = {\n\tproducts: ['id', 'name'],\n};\n\n/**\n * Fetch a full list of IDs available on the server and compare to the local records\n */\nconst useIdAudit = (collectionName: CollectionNames) => {\n\tconst { storeDB, site, wpCredentials } = useAppState();\n\tconst navigation = useNavigation();\n\n\tReact.useEffect(() => {\n\t\tconst request = http.CancelToken.source();\n\t\tconst headers = {\n\t\t\t'X-WCPOS': '1',\n\t\t};\n\t\tif (wpCredentials.wpNonce) {\n\t\t\tObject.assign(headers, { 'X-WP-Nonce': wpCredentials.wpNonce });\n\t\t}\n\t\tif (wpCredentials.jwt) {\n\t\t\tObject.assign(headers, { Authorization: `Bearer ${wpCredentials.jwt}` });\n\t\t}\n\n\t\thttp\n\t\t\t// @ts-ignore\n\t\t\t.get('products', {\n\t\t\t\tbaseURL: site.wcApiUrl,\n\t\t\t\tparams: { fields: fields[collectionName], posts_per_page: -1 },\n\t\t\t\theaders,\n\t\t\t})\n\t\t\t.then(({ data }: any) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn storeDB.collections[collectionName].auditIdsFromServer(data);\n\t\t\t})\n\t\t\t.catch(({ response }) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (!response) {\n\t\t\t\t\tconsole.error('CORS error');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tnavigation.navigate('Modal', { login: true });\n\t\t\t\t}\n\t\t\t\tif (response.status === 403) {\n\t\t\t\t\tconsole.error('invalid nonce');\n\t\t\t\t}\n\t\t\t});\n\n\t\t// cancel server request on unmount\n\t\treturn () => {\n\t\t\trequest.cancel();\n\t\t};\n\t}, [\n\t\tcollectionName,\n\t\tnavigation,\n\t\tsite.wcApiUrl,\n\t\tstoreDB.collections,\n\t\twpCredentials.jwt,\n\t\twpCredentials.wpNonce,\n\t]);\n};\n\nexport default useIdAudit;\n","import * as React from 'react';\nimport { useObservable, useSubscription } from 'observable-hooks';\nimport { withLatestFrom } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { replicateRxCollection } from 'rxdb/plugins/replication';\nimport http from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport camelCase from 'lodash/camelCase';\nimport forEach from 'lodash/forEach';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport unset from 'lodash/unset';\nimport difference from 'lodash/difference';\nimport useQuery from '../use-query';\nimport useAppState from '../use-app-state';\n\nexport const useRestQuery = (collectionName: 'products' | 'orders' | 'customers', options = {}) => {\n\tconst { storeDB, site, wpCredentials } = useAppState();\n\tconst collection = storeDB.collections[collectionName];\n\tconst { query } = useQuery();\n\tconst navigation = useNavigation();\n\n\tconst restQuery$ = useObservable(\n\t\t(query$) =>\n\t\t\tquery$.pipe(\n\t\t\t\t// @ts-ignore\n\t\t\t\twithLatestFrom(collection.unsyncedDocuments$),\n\t\t\t\ttap(async ([[q], unsyncedDocuments]) => {\n\t\t\t\t\tconst replicationState = await replicateRxCollection({\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tcollection,\n\t\t\t\t\t\treplicationIdentifier: 'product-replication',\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * By default it will do a one-time replication.\n\t\t\t\t\t\t * By settings live: true the replication will continuously\n\t\t\t\t\t\t * replicate all changes.\n\t\t\t\t\t\t * (optional), default is false.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// live: true,\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Interval in milliseconds on when to run the next replication cycle.\n\t\t\t\t\t\t * Set this to 0 when you have a back-channel from your remote\n\t\t\t\t\t\t * that that tells the client when to fetch remote changes.\n\t\t\t\t\t\t * (optional), only needed when live=true, default is 10 seconds.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// liveInterval: 10000,\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Time in milliseconds after when a failed replication cycle\n\t\t\t\t\t\t * has to be retried.\n\t\t\t\t\t\t * (optional), default is 5 seconds.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// retryTime: number,\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Optional,\n\t\t\t\t\t\t * only needed when you want to replicate remote changes to the local state.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tpull: {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Pull handler\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tasync handler(latestPullDocument) {\n\t\t\t\t\t\t\t\tconsole.log(latestPullDocument);\n\t\t\t\t\t\t\t\tconsole.log(q);\n\n\t\t\t\t\t\t\t\tconst headers = {\n\t\t\t\t\t\t\t\t\t'X-WCPOS': '1',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (wpCredentials.wpNonce) {\n\t\t\t\t\t\t\t\t\tObject.assign(headers, { 'X-WP-Nonce': wpCredentials.wpNonce });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (wpCredentials.jwt) {\n\t\t\t\t\t\t\t\t\tObject.assign(headers, { Authorization: `Bearer ${wpCredentials.jwt}` });\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst params = {\n\t\t\t\t\t\t\t\t\tper_page: 10,\n\t\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\t\torder: q.sortDirection,\n\t\t\t\t\t\t\t\t\torderby: q.sortBy === 'name' ? 'title' : q.sortBy,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (get(q, 'filters.category.id')) {\n\t\t\t\t\t\t\t\t\tset(params, 'category', get(q, 'filters.category.id'));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (get(q, 'filters.tag.id')) {\n\t\t\t\t\t\t\t\t\tset(params, 'tag', get(q, 'filters.tag.id'));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst result = await http\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t.get('products', {\n\t\t\t\t\t\t\t\t\t\tbaseURL: site.wcApiUrl,\n\t\t\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(({ response }) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t\t\t\tif (!response) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error('CORS error');\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\tnavigation.navigate('Modal', { login: true });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (response.status === 403) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error('invalid nonce');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t\t\t\t// need to add localId to each product\n\t\t\t\t\t\t\t\tconst data = result?.data || [];\n\t\t\t\t\t\t\t\tconst promises = data.map(async (product: any) => {\n\t\t\t\t\t\t\t\t\tconst existing = await collection.findOne().where('id').eq(product.id).exec();\n\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\tObject.assign(product, { localID: existing.localID });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// delete product._links;\n\t\t\t\t\t\t\t\t\t// TODO - this should be called by middleware\n\t\t\t\t\t\t\t\t\treturn parsePlainData(collection, product);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tconst documents = await Promise.all(promises);\n\t\t\t\t\t\t\t\t// const limitPerPull = 10;\n\t\t\t\t\t\t\t\t// const minTimestamp = latestPullDocument ? latestPullDocument.updatedAt : 0;\n\t\t\t\t\t\t\t\t// /**\n\t\t\t\t\t\t\t\t//  * In this example we replicate with a remote REST server\n\t\t\t\t\t\t\t\t//  */\n\t\t\t\t\t\t\t\t// const documentsFromRemote = fetch(\n\t\t\t\t\t\t\t\t// \t`https://example.com/api/sync/?minUpdatedAt=${minTimestamp}&limit=${limitPerPull}`\n\t\t\t\t\t\t\t\t// ).json();\n\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * Contains the pulled documents from the remote.\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tdocuments,\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * Must be true if there might be more newer changes on the remote.\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\thasMoreDocuments: false,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Optional,\n\t\t\t\t\t\t * only needed when you want to replicate local changes to the remote instance.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// push: {\n\t\t\t\t\t\t// \t/**\n\t\t\t\t\t\t// \t * Push handler\n\t\t\t\t\t\t// \t */\n\t\t\t\t\t\t// \tasync handler(docs) {\n\t\t\t\t\t\t// \t\t/**\n\t\t\t\t\t\t// \t\t * Push the local documents to a remote REST server.\n\t\t\t\t\t\t// \t\t */\n\t\t\t\t\t\t// \t\tawait postData('https://example.com/api/sync/push', { docs });\n\t\t\t\t\t\t// \t},\n\t\t\t\t\t\t// \t/**\n\t\t\t\t\t\t// \t * Batch size, optional\n\t\t\t\t\t\t// \t * Defines how many documents will be given to the push handler at once.\n\t\t\t\t\t\t// \t */\n\t\t\t\t\t\t// \tbatchSize: 5,\n\t\t\t\t\t\t// },\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t[query]\n\t);\n\n\tconst subscription = useSubscription(restQuery$);\n};\n\n/**\n * Parse plain data helper\n * Converts properties to camelCase and strips out any properties not in the schema\n *\n * @param plainData\n * @param collection\n */\nfunction parsePlainData(collection: any, plainData: Record<string, unknown>) {\n\tconst topLevelFields = get(collection, 'schema.topLevelFields');\n\n\t/**\n\t * convert all plainData properties to camelCase\n\t */\n\tforEach(plainData, (data, key) => {\n\t\tconst privateProperties = ['localID', '_attachments', '_rev'];\n\t\tif (!privateProperties.includes(key) && key.includes('_')) {\n\t\t\tplainData[camelCase(key)] = data;\n\t\t\tunset(plainData, key);\n\t\t}\n\t});\n\n\t/**\n\t * @TODO - change this to a validator \n\t * special fix for metaData values to make sure they are strings\n\t * fixes bug where WC REST API customer endpoint for returns:\n\t * {\n\t\t\t\"id\": 18,\n\t\t\t\"key\": \"community-events-location\",\n\t\t\t\"value\": {\n\t\t\t\t\"ip\": \"XXX.XXX.XXX.XXX\"\n\t\t\t}\n\t\t}\n\t\t*/\n\tif (Array.isArray(plainData.metaData)) {\n\t\tforEach(plainData.metaData, (meta) => {\n\t\t\tif (typeof meta.value === 'object' && meta.value !== null) {\n\t\t\t\tmeta.value = JSON.stringify(meta.value);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * remove any properties not in the schema\n\t */\n\tconst omitProperties = difference(Object.keys(plainData), topLevelFields);\n\tif (omitProperties.length > 0) {\n\t\tconsole.log('the following properties are being omitted', omitProperties);\n\t\tomitProperties.forEach((prop: string) => {\n\t\t\tunset(plainData, prop);\n\t\t});\n\t}\n\n\treturn plainData;\n}\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport { switchMap, map, debounceTime } from 'rxjs/operators';\nimport set from 'lodash/set';\nimport get from 'lodash/get';\nimport forEach from 'lodash/forEach';\nimport orderBy from 'lodash/orderBy';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useQuery from '@wcpos/common/src/hooks/use-query';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\n\nexport interface QueryState {\n\tsearch: any;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tfilters?: Record<string, unknown>;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/**\n *\n *\n * @param collectionName\n * @param options\n * @returns\n */\nexport const useCollectionQuery = (\n\tcollectionName: 'products' | 'orders' | 'customers',\n\toptions = {}\n) => {\n\tconst { storeDB } = useAppState();\n\tconst collection = storeDB.collections[collectionName];\n\tconst { query } = useQuery();\n\n\tconst [data, updateQuery] = useObservableState<any[], QueryState>((query$) => {\n\t\treturn query$.pipe(\n\t\t\t// debounce hits to the local db\n\t\t\tdebounceTime(100),\n\t\t\t// switchMap to the collection query\n\t\t\tswitchMap((q) => {\n\t\t\t\tconst selector = {};\n\t\t\t\tforEach(q.search, function (value, key) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tset(selector, [key, '$regex'], new RegExp(escape(value), 'i'));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (get(q, 'filters.category.id')) {\n\t\t\t\t\tset(selector, ['categories', '$elemMatch', 'id'], get(q, 'filters.category.id'));\n\t\t\t\t}\n\t\t\t\tif (get(q, 'filters.tag.id')) {\n\t\t\t\t\tset(selector, ['tags', '$elemMatch', 'id'], get(q, 'filters.tag.id'));\n\t\t\t\t}\n\n\t\t\t\tconst RxQuery = collection.find({ selector });\n\n\t\t\t\treturn RxQuery.$.pipe(\n\t\t\t\t\t// sort the results\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tmap((result) => {\n\t\t\t\t\t\tconst array = Array.isArray(result) ? result : [];\n\t\t\t\t\t\tconst productSorter = (product: any) => {\n\t\t\t\t\t\t\tif (q.sortBy === 'name') {\n\t\t\t\t\t\t\t\t// @TODO - this doens't work\n\t\t\t\t\t\t\t\treturn product[q.sortBy].toLowerCase();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn product[q.sortBy];\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn orderBy(array, [productSorter], [q.sortDirection]);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}, []);\n\n\t/**\n\t * TODO: React 18 use Transition\n\t */\n\tReact.useEffect(() => {\n\t\t// @ts-ignore\n\t\tupdateQuery(query);\n\t}, [query, updateQuery]);\n\n\tuseWhyDidYouUpdate('Collection Query', {\n\t\tstoreDB,\n\t\tcollection,\n\t\tquery,\n\t\tdata,\n\t\tupdateQuery,\n\t});\n\n\treturn { data, count: data.length };\n};\n","import styled from 'styled-components/native';\n\nexport const Table = styled.View`\n\twidth: 100%;\n\theight: 100%;\n`;\n\nexport const Row = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n\tborder-bottom-width: 1px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n`;\n\nexport const Cell = styled.View`\n\tpadding: 5px;\n\talign-items: flex-start;\n`;\n\nexport const HeaderRow = styled.View`\n\tflex-direction: row;\n\tborder-bottom-width: 2px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n\tbackground-color: #ffffff;\n`;\n\nexport const HeaderCell = styled.View`\n\tpadding: 5px;\n`;\n\nexport const HeaderTextWrapper = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { GestureResponderEvent, ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport SortIcon from '../sort-icon';\n\nexport interface TableHeaderProps<T> {\n\tcolumns: import('./table').ColumnProps<T>[];\n\tstyle?: ViewStyle;\n\tsort?: import('./table').Sort;\n\tsortBy?: keyof T & string;\n\tsortDirection?: import('./table').SortDirection;\n}\n\nconst TableHeader: <T>(props: TableHeaderProps<T>) => React.ReactElement = ({\n\tcolumns,\n\tstyle,\n\tsort,\n\tsortBy,\n\tsortDirection,\n}) => {\n\treturn (\n\t\t<Styled.HeaderRow>\n\t\t\t{columns.map((column) => {\n\t\t\t\tconst {\n\t\t\t\t\tkey,\n\t\t\t\t\tflexGrow = 1,\n\t\t\t\t\tflexShrink = 1,\n\t\t\t\t\tflexBasis = 'auto',\n\t\t\t\t\twidth = '100%',\n\t\t\t\t\tdisableSort = false,\n\t\t\t\t\tdefaultSortDirection = 'asc',\n\t\t\t\t\thideLabel = false,\n\t\t\t\t\tlabel,\n\t\t\t\t} = column;\n\t\t\t\tconst sortable = !disableSort && typeof sort === 'function';\n\t\t\t\tconst showSortIndicator = sortable && sortBy === key;\n\t\t\t\tconst newSortDirection =\n\t\t\t\t\tsortBy !== key ? defaultSortDirection : sortDirection === 'desc' ? 'asc' : 'desc';\n\n\t\t\t\tconst handlePress = (event: GestureResponderEvent) => {\n\t\t\t\t\tif (sortable) {\n\t\t\t\t\t\tsort({\n\t\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\tsortBy: key,\n\t\t\t\t\t\t\tsortDirection: newSortDirection,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn (\n\t\t\t\t\t<Styled.HeaderCell key={key} style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t\t\t\t{sortable ? (\n\t\t\t\t\t\t\t<Pressable onPress={handlePress}>\n\t\t\t\t\t\t\t\t{({ hovered }: any) => (\n\t\t\t\t\t\t\t\t\t<Styled.HeaderTextWrapper>\n\t\t\t\t\t\t\t\t\t\t<Text>{label}</Text>\n\t\t\t\t\t\t\t\t\t\t<SortIcon\n\t\t\t\t\t\t\t\t\t\t\tvisible={hovered || showSortIndicator}\n\t\t\t\t\t\t\t\t\t\t\tdirection={showSortIndicator ? sortDirection : undefined}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Styled.HeaderTextWrapper>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t!hideLabel && <Text>{label}</Text>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Styled.HeaderCell>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.HeaderRow>\n\t);\n};\n\nexport default React.memo(TableHeader) as typeof TableHeader;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport { isRxDocument } from 'rxdb/plugins/core';\nimport { useObservableState } from 'observable-hooks';\nimport Text from '../text';\nimport * as Styled from './styles';\n\n/**\n *\n */\nexport const renderCell: <T>(\n\titem: T,\n\tcolumn: import('./table').ColumnProps<T>,\n\tindex: number\n) => React.ReactNode = (item, column, index) => {\n\treturn column.onRender ? (\n\t\tcolumn.onRender(item, column, index)\n\t) : (\n\t\t<Text>{String(item[column.key] ?? '')}</Text>\n\t);\n};\n\nexport interface TableRowProps<T> {\n\titem: T;\n\tcolumns: import('./table').ColumnProps<T>[];\n\trowStyle?: ViewStyle;\n\tcellStyle?: ViewStyle;\n}\n\n/**\n *\n */\nexport const TableRow = React.memo(function TableRow<T>({\n\titem,\n\tcolumns,\n\trowStyle,\n\tcellStyle,\n}: // ...props\nTableRowProps<T>) {\n\t// subscribe to item, special case to trigger render for data changes\n\t// @TODO: find a better way to do this\n\t// @ts-ignore\n\tconst forceRender = useObservableState(item.$);\n\n\treturn (\n\t\t<Styled.Row style={rowStyle}>\n\t\t\t{columns.map((column, index) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cell = renderCell(item, column, index);\n\t\t\t\tconst { flexGrow = 1, flexShrink = 1, flexBasis = 'auto', width = '100%' } = column;\n\t\t\t\treturn (\n\t\t\t\t\t<Styled.Cell\n\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\tstyle={[{ flexGrow, flexShrink, flexBasis, width }, cellStyle]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{cell}\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Row>\n\t);\n});\n\n// export default React.memo(TableRow);\n","import * as React from 'react';\nimport Text from '../text';\n\n// interface EmptyRowProps {\n// }\n\nconst EmptyRow = () => {\n\treturn <Text>No results found</Text>;\n};\n\nexport default EmptyRow;\n","import * as React from 'react';\nimport { View, ViewStyle, NativeSyntheticEvent, NativeTouchEvent } from 'react-native';\nimport { useVirtual } from 'react-virtual';\nimport get from 'lodash/get';\nimport Text from '../text';\nimport EmptyRow from './empty';\n\nexport type RowVirtualizer = ReturnType<typeof useVirtual>;\n\nexport interface VirtualListProps<T extends object> {\n\t/**\n\t * The data source to render\n\t */\n\tdata: T[];\n\tstyle?: ViewStyle;\n\t/**\n\t * additional context that will be passed verbatim to the itemRenderer, so that it can be easily memoized\n\t */\n\tcontext?: any;\n\t/**\n\t * Takes care of rendering an item\n\t * @param item The item as stored in the dataSource\n\t * @param index The index of the item being rendered. The index represents the offset in the _visible_ items of the dataSource\n\t * @param context The optional context passed into this DataSourceRenderer\n\t */\n\trowRenderer: (item: T, index: number, context: any) => React.ReactNode;\n\temptyRenderer?: () => React.ReactNode;\n\tvirtualizerRef?: React.MutableRefObject<RowVirtualizer | undefined>;\n}\n\n/**\n * This component is UI agnostic, and just takes care of virtualizing the provided dataSource, and render it as efficiently a possibible,\n * de priorizing off screen updates etc.\n */\n// @ts-ignore\nexport const VirtualList: <T extends object>(props: VirtualListProps<T>) => React.ReactElement =\n\tReact.memo(function VirtualList({\n\t\tdata,\n\t\tstyle,\n\t\tcontext,\n\t\temptyRenderer = () => <EmptyRow />,\n\t\trowRenderer,\n\t\tvirtualizerRef,\n\t}) {\n\t\tconst parentRef = React.useRef() as React.MutableRefObject<View>;\n\t\tconst [, setForceUpdate] = React.useState(0);\n\t\tconst forceHeightRecalculation = React.useRef(0);\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tconst rowVirtualizer = useVirtual({\n\t\t\tsize: data.length,\n\t\t\tparentRef,\n\t\t\toverscan: 10,\n\t\t});\n\t\tif (virtualizerRef) {\n\t\t\tvirtualizerRef.current = rowVirtualizer;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tconst keyExtractor = React.useCallback(\n\t\t\t(item: any, index: number) => get(item, 'localID') || index,\n\t\t\t[]\n\t\t);\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tconst redraw = React.useCallback(() => {\n\t\t\tforceHeightRecalculation.current++;\n\t\t\tsetForceUpdate((x) => x + 1);\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<RedrawContext.Provider value={redraw}>\n\t\t\t\t<View\n\t\t\t\t\tref={parentRef}\n\t\t\t\t\tstyle={{ overflow: 'scroll', flexGrow: 1, flexShrink: 1, flexBasis: 0 }}\n\t\t\t\t>\n\t\t\t\t\t{rowVirtualizer.virtualItems.length === 0 ? emptyRenderer?.() : null}\n\t\t\t\t\t<View style={{ position: 'relative', width: '100&', height: rowVirtualizer.totalSize }}>\n\t\t\t\t\t\t{rowVirtualizer.virtualItems.map((virtualRow) => {\n\t\t\t\t\t\t\tconst item = data[virtualRow.index];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\tkey={keyExtractor(item, virtualRow.index)}\n\t\t\t\t\t\t\t\t\t// @ts-ignore - may not work with react-native View?\n\t\t\t\t\t\t\t\t\tref={virtualRow.measureRef}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\ttransform: [{ translateY: virtualRow.start }],\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{rowRenderer(item, virtualRow.index, context)}\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</RedrawContext.Provider>\n\t\t);\n\t});\n\nexport const RedrawContext = React.createContext<undefined | (() => void)>(undefined);\n\nexport function useTableRedraw() {\n\treturn React.useContext(RedrawContext);\n}\n\n// export default React.memo(VirtualList);\n","import * as React from 'react';\nimport { ViewStyle, NativeSyntheticEvent, NativeTouchEvent } from 'react-native';\nimport Header from './header';\nimport { TableRow } from './row';\nimport EmptyRow from './empty';\nimport { VirtualList } from './virtual-list';\nimport * as Styled from './styles';\n\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortProps {\n\tdefaultSortDirection?: SortDirection;\n\tevent: NativeSyntheticEvent<NativeTouchEvent>;\n\tsortBy: string | number;\n\tsortDirection?: SortDirection;\n}\n\nexport type Sort = (props: SortProps) => void;\n\nexport interface ColumnProps<T = any> {\n\tkey: keyof T & string;\n\tonRender?: (item: T, column: ColumnProps<T>, index: number) => React.ReactNode;\n\tlabel: string;\n\thide?: boolean;\n\tdisableSort?: boolean;\n\thideLabel?: boolean;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tdefaultSortDirection?: SortDirection;\n}\n\nexport interface TableProps<T = any> {\n\t/**\n\t * The data source to render\n\t */\n\tdata: T[];\n\tcolumns: ColumnProps<T>[];\n\tstyle?: ViewStyle;\n\temptyRenderer?: () => React.ReactNode;\n\t/**\n\t * additional context that will be passed verbatim to the itemRenderer, so that it can be easily memoized\n\t */\n\tcontext?: any;\n\t/**\n\t * Takes care of rendering an item\n\t * @param item The item as stored in the dataSource\n\t * @param index The index of the item being rendered. The index represents the offset in the _visible_ items of the dataSource\n\t * @param context The optional context passed into this DataSourceRenderer\n\t */\n\trowRenderer?: (item: T, index: number, context: any) => React.ReactNode;\n\tenableColumnHeaders?: boolean;\n\tfooter?: React.ReactNode;\n\tsort?: Sort;\n\tsortBy?: keyof T & string;\n\tsortDirection?: SortDirection;\n}\n\n// const Table: <T>(props: TableProps<T>) => React.ReactElement = ({\n// \tdata,\n// \tcolumns,\n// \tstyle,\n// \tenableColumnHeaders = true,\n// }) => {\nfunction Table<T extends object>({\n\tdata,\n\tcolumns,\n\tstyle,\n\tenableColumnHeaders = true,\n\tfooter,\n\tsort,\n\tsortBy,\n\tsortDirection,\n}: TableProps<T>): React.ReactElement {\n\t// const visibleColumns = React.useMemo(() => columns.filter((column) => !column.hide), [columns]);\n\n\t/**\n\t *\n\t */\n\tconst rowRenderer = React.useCallback(\n\t\t(\n\t\t\titem,\n\t\t\tindex\n\t\t\t// renderContext: TableRowRenderContext<T>,\n\t\t) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\t// config={renderContext}\n\t\t\t\t\titem={item}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t// itemIndex={index}\n\t\t\t\t/>\n\t\t\t);\n\t\t},\n\t\t[columns]\n\t);\n\n\tconst header = enableColumnHeaders && (\n\t\t<Header<T> columns={columns} sort={sort} sortBy={sortBy} sortDirection={sortDirection} />\n\t);\n\n\treturn (\n\t\t<Styled.Table style={style}>\n\t\t\t{header}\n\t\t\t<VirtualList<T> data={data} rowRenderer={rowRenderer} />\n\t\t\t{footer}\n\t\t</Styled.Table>\n\t);\n}\n\n// Table.Row = Row;\nexport default Table;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '@wcpos/common/src/components/text';\nimport Button from '@wcpos/common/src/components/button';\n// import useAppState from '@wcpos/common/src/hooks/use-app-state';\n// import WcApiService from '@wcpos/common/src/services/wc-api';\n\ninterface Props {\n\tproduct: any;\n\t// addToCart: any;\n}\n\nconst Variations = ({ product }: Props) => {\n\t// const { user, storeDB } = useAppState();\n\tconst [variations, setVariations] = React.useState([]);\n\n\tconst addToCart = async (variation: any) => {\n\t\tconst order = await product.collections().orders.findOne().exec();\n\t\torder.addOrUpdateLineItem(variation, product);\n\t};\n\n\t// React.useEffect(() => {\n\t// \t(async () => {\n\t// \t\tconst vars = await storeDB.collections.variations.findByIds(product.variations.map(String));\n\t// \t\tsetVariations(Array.from(vars.values()));\n\t// \t})();\n\t// }, [product, storeDB.collections.variations]);\n\n\tconst fetchData = async (endpoint: string) => {\n\t\t// const path = storePath.split('.');\n\t\t// const site = user.get(path.slice(1, 3).join('.'));\n\t\t// const wpCredentials = user.get(path.slice(1, 5).join('.'));\n\t\t// const api = new WcApiService({\n\t\t// \tbaseUrl: site.wc_api_url,\n\t\t// \tcollection: endpoint,\n\t\t// \tkey: wpCredentials.consumer_key,\n\t\t// \tsecret: wpCredentials.consumer_secret,\n\t\t// });\n\t\t// const result = await api.fetch();\n\t\t// console.log(result);\n\t\t// storeDB.collections.variations.bulkInsert(result);\n\t};\n\n\tif (variations.length === 0) {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\ttitle=\"Fetch variations\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tfetchData(`products/${product.id}/variations`);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{variations.map((variation: any) => (\n\t\t\t\t<View key={variation.id}>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\t{variation.id} -\n\t\t\t\t\t\t{variation.attributes.map((attribute: any) => (\n\t\t\t\t\t\t\t<Text key={attribute.id}>\n\t\t\t\t\t\t\t\t{attribute.name} -{attribute.option},\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t- {variation.price}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Button title=\"Add to Cart\" onPress={() => addToCart(variation)} />\n\t\t\t\t</View>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default Variations;\n","import * as React from 'react';\nimport { useObservableSuspense } from 'observable-hooks';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Button from '@wcpos/common/src/components/button';\nimport Popover from '@wcpos/common/src/components/popover';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Variations from './variations';\nimport { POSContext } from '../../pos';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n}\n\nconst Actions = ({ item: product }: Props) => {\n\tconst { currentOrder, setCurrentOrder } = React.useContext(POSContext);\n\tconst { storeDB } = useAppState();\n\tconst [visible, setVisible] = React.useState(false);\n\n\tconst addToCart = React.useCallback(async () => {\n\t\tif (currentOrder) {\n\t\t\tcurrentOrder.addOrUpdateLineItem(product);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tconst newOrder = await storeDB?.collections.orders.createNewOrderWithProduct(product);\n\t\t\tsetCurrentOrder(newOrder);\n\t\t}\n\t}, [currentOrder, product, setCurrentOrder, storeDB?.collections.orders]);\n\n\tif (!product.isSynced()) {\n\t\treturn <Icon.Skeleton size=\"x-large\" />;\n\t}\n\n\tif (product.isVariable()) {\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\topen={visible}\n\t\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\t\tactivator={<Button title=\"->\" onPress={() => setVisible(true)} />}\n\t\t\t>\n\t\t\t\t<Variations product={product} />\n\t\t\t</Popover>\n\t\t);\n\t}\n\n\treturn <Icon name=\"addCircle\" size=\"x-large\" backgroundStyle=\"none\" onPress={addToCart} />;\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Image = ({ item: product }: Props) => {\n\tconst { thumbnail } = product;\n\n\treturn (\n\t\t<Img\n\t\t\tsrc={thumbnail}\n\t\t\t// placeholder={<Img source={require('@wcpos/common/src/assets/placeholder.png')} />}\n\t\t/>\n\t);\n};\n\nexport default Image;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport find from 'lodash/find';\nimport Text from '@wcpos/common/src/components/text';\nimport Categories from '../../../common/product-categories';\nimport Tags from '../../../common/product-tags';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tcolumn: any;\n}\n\nconst Name = ({ item: product, column }: Props) => {\n\tconst { display } = column;\n\n\t/**\n\t *\n\t */\n\tconst show = React.useCallback(\n\t\t(key: string): boolean => {\n\t\t\tconst d = find(display, { key });\n\t\t\treturn !(d && d.hide);\n\t\t},\n\t\t[display]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Text>{product.name}</Text>\n\t\t\t{show('sku') && <Text size=\"small\">{product.sku}</Text>}\n\t\t\t{show('categories') && <Categories item={product} />}\n\t\t\t{show('tags') && <Tags item={product} />}\n\t\t\t{product.type === 'variable' && (\n\t\t\t\t<View>\n\t\t\t\t\t{(product.attributes as [])\n\t\t\t\t\t\t.filter((attr: any) => attr.variation)\n\t\t\t\t\t\t.map((attr: any) => (\n\t\t\t\t\t\t\t<Text key={attr.id} size=\"small\">\n\t\t\t\t\t\t\t\t<Text size=\"small\" type=\"secondary\">\n\t\t\t\t\t\t\t\t\t{attr.name}:\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{attr.options.join(', ')}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Name;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype PriceProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Price = ({ item: product }: PriceProps) => {\n\treturn product.isSynced() ? <Text>{product.price}</Text> : <Text.Skeleton length=\"short\" />;\n};\n\nexport default Price;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst RegularPrice = ({ item: product }: Props) => {\n\treturn <Text>{product.regular_price}</Text>;\n};\n\nexport default RegularPrice;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype SKUProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst SKU = ({ item: product }: SKUProps) => {\n\treturn product.isSynced() ? <Text>{product.sku}</Text> : <Text.Skeleton length=\"short\" />;\n};\n\nexport default SKU;\n","import styled from 'styled-components/native';\n\nexport const Footer = styled.View`\n\talign-items: end;\n`;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport * as Styled from './styles';\n\ninterface ProductFooterProps {\n\tcount: number;\n}\n\nconst ProductsFooter = ({ count }: ProductFooterProps) => {\n\tconst { storeDB } = useAppState();\n\tconst total = useObservableState(storeDB.products.totalDocuments$, 0);\n\n\treturn (\n\t\t<Styled.Footer>\n\t\t\t<Text>\n\t\t\t\t{count} of {total}\n\t\t\t</Text>\n\t\t</Styled.Footer>\n\t);\n};\n\nexport default ProductsFooter;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport orderBy from 'lodash/orderBy';\nimport get from 'lodash/get';\nimport useData from '@wcpos/common/src/hooks/use-collection-query';\nimport useQuery from '@wcpos/common/src/hooks/use-query';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from '@wcpos/common/src/components/table3';\nimport Actions from './cells/actions';\nimport Categories from '../../common/product-categories';\nimport Image from './cells/image';\nimport Name from './cells/name';\nimport Price from './cells/price';\nimport RegularPrice from './cells/regular-price';\nimport Sku from './cells/sku';\nimport Tag from '../../common/product-tags';\nimport Footer from './footer';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype ProductDocument = import('@wcpos/common/src/database').ProductDocument;\ntype ColumnProps = import('@wcpos/common/src/components/table3/table').ColumnProps<ProductDocument>;\n\ninterface POSProductsTableProps {\n\tcolumns: ColumnProps[];\n}\n\nconst cells = {\n\tactions: Actions,\n\tcategories: Categories,\n\timage: Image,\n\tname: Name,\n\tprice: Price,\n\tregularPrice: RegularPrice,\n\tsku: Sku,\n\ttag: Tag,\n};\n\n/**\n *\n */\nconst POSProductsTable = ({ columns }: POSProductsTableProps) => {\n\tconst { t } = useTranslation();\n\tconst { data } = useData('products');\n\tconst { query, setQuery } = useQuery();\n\n\t/**\n\t * - filter visible columns\n\t * - translate column label\n\t * - asssign cell renderer\n\t */\n\tconst visibleColumns = React.useMemo(\n\t\t() =>\n\t\t\tcolumns\n\t\t\t\t.filter((column) => !column.hide)\n\t\t\t\t.map((column) => {\n\t\t\t\t\t// clone column and add label, onRender function\n\t\t\t\t\tconst Cell = get(cells, column.key);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...column,\n\t\t\t\t\t\tlabel: t(`products.column.label.${column.key}`),\n\t\t\t\t\t\tonRender: (item: ProductDocument) => {\n\t\t\t\t\t\t\treturn Cell ? <Cell item={item} column={column} /> : null;\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t[columns, t]\n\t);\n\n\t/**\n\t * in memory sort\n\t */\n\tconst sortedData = React.useMemo(() => {\n\t\treturn orderBy(data, [query.sortBy], [query.sortDirection]);\n\t}, [data, query.sortBy, query.sortDirection]);\n\n\t/**\n\t * handle sort\n\t */\n\tconst handleSort: Sort = React.useCallback(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\tsetQuery('sortBy', sortBy);\n\t\t\tsetQuery('sortDirection', sortDirection);\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tuseWhyDidYouUpdate('Table', { data });\n\n\treturn (\n\t\t<Table<ProductDocument>\n\t\t\tcolumns={visibleColumns}\n\t\t\tdata={sortedData}\n\t\t\tsort={handleSort}\n\t\t\tsortBy={query.sortBy}\n\t\t\tsortDirection={query.sortDirection}\n\t\t\tfooter={<Footer count={data.length} />}\n\t\t/>\n\t);\n};\n\nexport default POSProductsTable;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport get from 'lodash/get';\nimport Search from '@wcpos/common/src/components/search';\nimport useQuery from '@wcpos/common/src/hooks/use-query';\nimport UiSettings from '../../common/ui-settings';\n\ninterface SearchBarProps {\n\tui: any;\n}\n\nconst SearchBar = ({ ui }: SearchBarProps) => {\n\tconst { query, setQuery } = useQuery();\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery(['search', 'name'], search);\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery('filters.category', null);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery('filters.tag', null);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t<Search\n\t\t\t\tlabel=\"Search Products\"\n\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\tvalue={get(query, ['search', 'name'], '')}\n\t\t\t\tonSearch={onSearch}\n\t\t\t\tfilters={filters}\n\t\t\t/>\n\t\t\t<UiSettings ui={ui} />\n\t\t</View>\n\t);\n};\n\nexport default SearchBar;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport useIdAudit from '@wcpos/common/src/hooks/use-id-audit';\nimport useRestQuery from '@wcpos/common/src/hooks/use-rest-query';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Table from './table';\nimport SearchBar from './search-bar';\n\ninterface POSProductsProps {\n\tui: any;\n}\n\n/**\n *\n */\nconst Products = ({ ui }: POSProductsProps) => {\n\tconst columns$ = ui.get$('columns');\n\tconst columns = useObservableState(columns$, ui.get('columns'));\n\tuseIdAudit('products');\n\tuseRestQuery('products');\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<SearchBar ui={ui} />\n\t\t\t\t{/* <Search\n\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\tvalue={query.search}\n\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\tfilters={filters}\n\t\t\t\t/> */}\n\t\t\t</Segment>\n\t\t\t<Segment grow>\n\t\t\t\t<Table columns={columns} />\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default Products;\n","import * as React from 'react';\nimport Button from '../button';\n\ntype Props = {\n\tsrc: string;\n\ttitle?: string;\n\tonMessage?: (event: MessageEvent) => void;\n\tonLoad?: (event: React.SyntheticEvent<HTMLIFrameElement, Event>) => void;\n\tonError?: (event: React.SyntheticEvent<HTMLIFrameElement, Event>) => void;\n};\n\nconst WebView: React.FC<Props> = ({ src, title, onError, onMessage, onLoad }) => {\n\t// eslint-disable-next-line consistent-return\n\tReact.useEffect(() => {\n\t\tif (typeof onMessage === 'function') {\n\t\t\twindow.addEventListener('message', onMessage);\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('message', onMessage);\n\t\t\t};\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<iframe\n\t\t\t\ttitle={title}\n\t\t\t\tsrc={src}\n\t\t\t\tonLoad={onLoad}\n\t\t\t\tonError={onError}\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"100%\"\n\t\t\t\t// @ts-ignore\n\t\t\t\tallowpaymentrequest\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default WebView;\n","import styled from 'styled-components/native';\nimport { Text } from '../text/text';\nimport Pressable from '../pressable';\n\nexport const Container = styled.View``;\n\nexport const LabelContainer = styled(Pressable)``;\n\nexport const Label = styled(Text)``;\n\nexport const ContentContainer = styled.View``;\n\nexport const Content = styled(Text)``;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Collapsable from '../collapsible';\nimport * as Styled from './styles';\n\ninterface AccordionItemProps {\n\tlabel: React.ReactNode;\n\tcontent: React.ReactNode;\n}\n\nexport interface AccordionProps {\n\titems: AccordionItemProps[];\n}\n\nexport const Accordion = ({ items }: AccordionProps) => {\n\tconst [currentIndex, setCurrentIndex] = React.useState<number | null>(null);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{items.map(({ label, content }, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Styled.LabelContainer\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tsetCurrentIndex(index === currentIndex ? null : index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Styled.Label>{label}</Styled.Label>\n\t\t\t\t\t\t</Styled.LabelContainer>\n\t\t\t\t\t\t<Collapsable open={index === currentIndex}>\n\t\t\t\t\t\t\t{typeof content === 'string' ? <Styled.Content>{content}</Styled.Content> : content}\n\t\t\t\t\t\t</Collapsable>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport WebView from '@wcpos/common/src/components/webview';\nimport Button from '@wcpos/common/src/components/button';\nimport Accordion from '@wcpos/common/src/components/accordion';\nimport { POSContext } from '../pos';\n\nexport const Checkout = () => {\n\tconst { currentOrder, currentCustomer } = React.useContext(POSContext);\n\tconst paymentUrlMeta = currentOrder?.metaData?.find((meta) => meta.key === '_pos_checkout_url');\n\n\tif (currentOrder?.status !== 'pos-checkout') {\n\t\tthrow Error('Order does not have the right status');\n\t}\n\n\tReact.useEffect(() => {\n\t\tasync function saveOrder() {\n\t\t\tconst replicationState = currentOrder?.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\n\t\tsaveOrder();\n\t}, [currentOrder]);\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<Text>Order Total: {currentOrder?.total}</Text>\n\t\t\t</Segment>\n\t\t\t<Segment grow>\n\t\t\t\t{paymentUrlMeta?.value ? (\n\t\t\t\t\t<Accordion\n\t\t\t\t\t\titems={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Stripe',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=stripe`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'BACS',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=bacs`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Cheque',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=cheque`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'COD',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=cod`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'PayPal',\n\t\t\t\t\t\t\t\tcontent: <WebView src={`${paymentUrlMeta?.value}&wcpos=1&gateway=paypal`} />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Go Back\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tcurrentOrder.atomicPatch({ status: 'pos-open' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n","import styled, { css } from 'styled-components/native';\nimport Platform from '@wcpos/common/src/lib/platform';\n\nexport const View = styled.View<{ hovered: boolean }>`\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: ${({ hovered }) => (hovered ? '#f5f5f5' : 'transparent')};\n\twidth: 10px;\n\n\t${\n\t\tPlatform.OS !== 'ios' &&\n\t\tPlatform.OS !== 'android' &&\n\t\tcss`\n\t\t\tcursor: col-resize;\n\t\t`\n\t}}\n`;\n","import * as React from 'react';\nimport { Pressable } from 'react-native';\nimport * as Styled from './styles';\nimport Icon from '../icon';\n\nexport interface GutterProps {\n\tchildren?: React.ReactNode;\n\tstyle?: any;\n}\n\nexport const Gutter = ({ children, style }: GutterProps) => {\n\treturn (\n\t\t<Pressable style={[{ flexDirection: 'row', height: '100%' }, style]}>\n\t\t\t{({\n\t\t\t\t// @ts-ignore\n\t\t\t\thovered,\n\t\t\t}) => <Styled.View hovered={hovered}>{children || <Icon name=\"more-vert\" />}</Styled.View>}\n\t\t</Pressable>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\nexport type ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\ntype CellRenderProps = {\n\tcellData: any;\n\tcolumn: ColumnProps;\n\tgetCellProps: GetCellPropsFunction;\n};\nexport type ItemProp =\n\t| import('@wcpos/common/src/database').ProductDocument\n\t| import('@wcpos/common/src/database').OrderDocument\n\t| import('@wcpos/common/src/database').CustomerDocument;\nexport type CellsProp = Record<\n\tstring,\n\tReact.FunctionComponent<{ item: any; column: any; setQuery?: any }>\n>;\n\ninterface CommonRowProps {\n\titem: ItemProp;\n\tcolumns: ColumnProps[];\n\tcells: CellsProp;\n\tsetQuery: any;\n}\n\n// @ts-ignore\nconst DefaultCell = ({ item, column }) => {\n\treturn <Text>{String(item[column.key])}</Text>;\n};\n\n/**\n *\n */\nconst CommonRow = ({ item, columns, cells, setQuery }: CommonRowProps) => {\n\tconst forceRender = useObservableState(item.$);\n\tuseWhyDidYouUpdate('Common Table Row', { forceRender, item, columns, cells });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column, getCellProps }: CellRenderProps): React.ReactElement => {\n\t\t\t\tconst Cell = cells[column.key] ? cells[column.key] : DefaultCell;\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t<Cell item={item} column={column} setQuery={setQuery} />\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default React.memo(CommonRow);\n","import * as React from 'react';\nimport { Observable } from 'rxjs';\nimport { useObservableState } from 'observable-hooks';\nimport { useTranslation } from 'react-i18next';\nimport _flatten from 'lodash/flatten';\nimport _orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Row, { CellsProp, ItemProp, ColumnProps } from './row';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\n\ninterface CommonTableProps {\n\tcollection: any;\n\tcolumns: ColumnProps[];\n\tdata$: Observable<ItemProp[]>;\n\tsetQuery: any;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tcells: CellsProp;\n}\n\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\n\n/**\n *\n */\nconst CommonTable = ({\n\tcollection,\n\tcolumns,\n\tdata$,\n\tsetQuery,\n\tsortBy: _sortBy,\n\tsortDirection: _sortDirection,\n\tcells,\n}: CommonTableProps) => {\n\tconst { t } = useTranslation();\n\tconst data = useObservableState(data$, []);\n\t// const syncState = React.useRef<number[]>([]);\n\n\tconst handleSort: Sort = React.useCallback(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery((prev) => ({ ...prev, sortBy, sortDirection }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t * maybe in memory sort\n\t */\n\tconst maybeSortedData = React.useMemo(() => {\n\t\tconst indexes = _flatten(collection.schema.indexes);\n\t\tif (!indexes.includes(_sortBy)) {\n\t\t\treturn _orderBy(data, [_sortBy], [_sortDirection]);\n\t\t}\n\t\treturn data;\n\t}, [_sortBy, _sortDirection, collection.schema.indexes, data]);\n\n\t/**\n\t *\n\t */\n\tconst getItemLayout = React.useCallback(\n\t\t(d, index) => ({ length: 100, offset: 100 * index, index }),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('Common Table', {\n\t\tcollection,\n\t\tcolumns,\n\t\tdata,\n\t\tmaybeSortedData,\n\t\tsetQuery,\n\t\t_sortBy,\n\t\t_sortDirection,\n\t\tcells,\n\t\t// syncingCustomers,\n\t\tt,\n\t});\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={maybeSortedData}\n\t\t\tsort={handleSort}\n\t\t\tsortBy={_sortBy}\n\t\t\tsortDirection={_sortDirection}\n\t\t\t// // @ts-ignore\n\t\t\t// onViewableItemsChanged={handleVieweableItemsChanged}\n\t\t\t// @ts-ignore\n\t\t\tgetItemLayout={getItemLayout}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{t(`${collection.name}.column.label.${column.key}`)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }) => (\n\t\t\t\t\t<Row item={item} columns={columns} cells={cells} setQuery={setQuery} />\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default React.memo(CommonTable);\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Image = ({ item: product }: Props) => {\n\treturn <Img src={product.thumbnail} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Image;\n","import * as React from 'react';\nimport TextInput from '@wcpos/common/src/components/textinput';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Name = ({ item: product }: Props) => {\n\tconst handleChangeText = async (newValue: string) => {\n\t\tawait product.atomicPatch({ name: newValue });\n\t};\n\n\treturn <TextInput label=\"Name\" value={product.name} onChange={handleChangeText} hideLabel />;\n};\n\nexport default Name;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedPrice = ({ item, column }: Props) => {\n\t// const { userDB, storeID } = useAppState();\n\t// const [currency, setCurrency] = React.useState();\n\n\t// // get currency settings\n\t// React.useEffect(() => {\n\t// \tasync function fetchStore() {\n\t// \t\tif (storeID) {\n\t// \t\t\tconst store = await userDB?.collections.stores.findOne(storeID).exec();\n\t// \t\t\tsetCurrency(store?.accounting.currency);\n\t// \t\t}\n\t// \t}\n\t// \tfetchStore();\n\t// }, []);\n\n\treturn <Format.Currency symbol=\"$\">{item[column.key]}</Format.Currency>;\n};\n\nexport default FormattedPrice;\n","import styled, { css } from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Item = styled(Pressable)`\n\tpadding: 5px 10px;\n`;\n\nexport const Label = styled(Text)<{ hovered: boolean }>`\n\t${({ hovered, theme, type }) =>\n\t\thovered &&\n\t\t// @ts-ignore\n\t\t(type === 'critical') | (type === 'warning') &&\n\t\t`\n    color: ${theme.TEXT_COLOR_INVERSE};\n  `}\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport { useTheme } from 'styled-components/native';\nimport * as Styled from './styles';\n\nexport interface ItemProps {\n\t/**\n\t *\n\t */\n\tchildren?: string;\n\t/**\n\t *\n\t */\n\tlabel?: string;\n\t/**\n\t *\n\t */\n\tonPress?: (value: any) => void;\n\t/**\n\t *\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n\t/**\n\t *\n\t */\n\tstyle?: ViewStyle;\n}\n\nexport const Item = ({ children, label = '', onPress, action, type, style }: ItemProps) => {\n\tconst theme = useTheme();\n\n\t/**\n\t *\n\t */\n\tconst handlePress = React.useCallback(() => {\n\t\tif (typeof action === 'function') {\n\t\t\taction();\n\t\t}\n\t\tif (typeof onPress === 'function') {\n\t\t\tonPress(label);\n\t\t}\n\t}, [action, label, onPress]);\n\n\t/**\n\t *\n\t */\n\tconst calculatedStyled = React.useCallback(\n\t\t({ hovered }) => {\n\t\t\tlet hoverBackgroundColor = theme.MENU_ITEM_HOVER_BACKGROUND_COLOR;\n\t\t\tif (type) {\n\t\t\t\tconst color = `color_${type}`.toUpperCase();\n\t\t\t\t// @ts-ignore\n\t\t\t\thoverBackgroundColor = theme[color];\n\t\t\t}\n\t\t\treturn [{ backgroundColor: hovered ? hoverBackgroundColor : 'transparent' }, style];\n\t\t},\n\t\t[style, theme, type]\n\t);\n\n\treturn (\n\t\t<Styled.Item onPress={handlePress} style={calculatedStyled}>\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\t({ hovered }) => (\n\t\t\t\t\t<Styled.Label type={type} hovered={hovered}>\n\t\t\t\t\t\t{children || label}\n\t\t\t\t\t</Styled.Label>\n\t\t\t\t)\n\t\t\t}\n\t\t</Styled.Item>\n\t);\n};\n","import * as React from 'react';\nimport snakeCase from 'lodash/snakeCase';\nimport { Item, ItemProps } from './item';\nimport * as Styled from './styles';\n\n/**\n * Action with a Label.\n */\nexport interface TextAction {\n\t/**\n\t * Label to display.\n\t */\n\tlabel: string;\n\t/**\n\t * Action to execute on click.\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n}\n\n// export interface IconAction {\n// \t/**\n// \t * Icon to display.\n// \t */\n// \ticon: IconName;\n// \t/**\n// \t * Color of the icon.\n// \t */\n// \tcolor?: IconProps['color'];\n// \t/**\n// \t * Action to execute on click.\n// \t */\n// \taction?: () => void;\n// }\n\n// export type TextWithIconAction = TextAction & IconAction;\n// export type TextWithOptionalIconAction = TextAction & Partial<IconAction>;\n\nexport interface MenuProps {\n\t/**\n\t *\n\t */\n\titems: (TextAction | string)[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n}\n\nexport const Menu: React.FC<MenuProps> & { Item: typeof Item } = ({\n\titems,\n\t// @ts-ignore\n\tonSelect = () => {},\n}) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{items.map((rawItem, index) => {\n\t\t\t\tconst item = typeof rawItem === 'string' ? { label: rawItem } : rawItem;\n\t\t\t\treturn (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={snakeCase(`${item.label}_${index}`)}\n\t\t\t\t\t\t{...item}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tonSelect(item);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Container>\n\t);\n};\n\nexport type MenuItemProps = ItemProps;\nMenu.Item = Item;\n","import * as React from 'react';\nimport get from 'lodash/get';\nimport Popover from '../popover';\nimport Menu from '../menu';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport Arrow from '../arrow';\nimport * as Styled from './styles';\n\ntype TextAction = import('../menu/menu').TextAction;\n\n/**\n *\n */\nexport interface DropdownProps {\n\t/**\n\t *\n\t */\n\titems: string[] | TextAction[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n\t/**\n\t *\n\t */\n\tactivator: React.ReactElement | string;\n}\n\n/**\n *\n */\nexport const Dropdown = ({ items, onSelect, activator }: DropdownProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst show = React.useCallback(() => setOpen(true), []);\n\tconst hide = React.useCallback(() => setOpen(false), []);\n\n\tconst _activator = React.useMemo(() => {\n\t\t// wrap string\n\t\tif (typeof activator === 'string') {\n\t\t\treturn (\n\t\t\t\t<Text onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t\t{activator}\n\t\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t\t// special case for icon\n\t\tif (React.isValidElement(activator) && get(activator, 'type.name') === 'Icon') {\n\t\t\t// @ts-ignore\n\t\t\treturn React.cloneElement(activator, { onPress: show });\n\t\t}\n\t\t// else wrap in Pressable\n\t\treturn (\n\t\t\t<Pressable onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t{activator}\n\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t</Pressable>\n\t\t);\n\t}, [activator, open, show]);\n\n\treturn (\n\t\t<Popover\n\t\t\tactivator={_activator}\n\t\t\tonRequestClose={hide}\n\t\t\topen={open}\n\t\t\thideBackdrop\n\t\t\tplacement=\"bottom-end\"\n\t\t\tpopoverStyle={{ paddingLeft: 0, paddingRight: 0 }}\n\t\t>\n\t\t\t<Menu items={items} onSelect={onSelect} />\n\t\t</Popover>\n\t);\n};\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport Arrow from '../arrow';\nimport BaseInput, { BaseInputContainer } from '../base-input';\n\nexport interface SelectChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface SelectProps {\n\t/**\n\t * Label for the Select.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: SelectChoice[] | string[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: string) => void;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Additional text to help the user.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Display an error state.\n\t */\n\terror?: boolean | string;\n\t/**\n\t * Disable the input and choice selection.\n\t */\n\tdisabled?: boolean;\n}\n\nconst maxHeight = 300;\n\n/**\n * Let the user choose one option from multiple ones.\n */\nexport const Select = ({\n\tlabel,\n\tchoices: choicesRaw,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\thelpText,\n\terror = false,\n\tdisabled = false,\n}: SelectProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst hidePopover = React.useCallback(() => setOpen(false), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choices = React.useMemo(\n\t\t() =>\n\t\t\tchoicesRaw.map((choice) =>\n\t\t\t\ttypeof choice === 'string' ? { label: choice, value: choice } : choice\n\t\t\t),\n\t\t[choicesRaw]\n\t);\n\n\tconst selectedChoice = React.useMemo(\n\t\t() => choices.find((x) => x.value === selected),\n\t\t[choices, selected]\n\t);\n\n\tconst handleSelect = (value: string) => {\n\t\tonChange(value);\n\t\tsetOpen(false);\n\t};\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.value}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => handleSelect(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<BaseInputContainer\n\t\t\tlabel={label}\n\t\t\tdisabled={disabled}\n\t\t\thelpText={helpText}\n\t\t\terror={error}\n\t\t\tonLabelClick={showPopover}\n\t\t>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tactivator={\n\t\t\t\t\t<BaseInput\n\t\t\t\t\t\tvalue={selectedChoice?.label ?? ''}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tfocused={open}\n\t\t\t\t\t\tonPress={showPopover}\n\t\t\t\t\t\trightAccessory={<Arrow direction={open ? 'up' : 'down'} />}\n\t\t\t\t\t\tstyle={{ minWidth: '100px' }}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonRequestClose={hidePopover}\n\t\t\t\tpopoverStyle={{ maxHeight }}\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\thideBackdrop\n\t\t\t\tmatchWidth\n\t\t\t>\n\t\t\t\t<ScrollView>{choiceComponents}</ScrollView>\n\t\t\t</Popover>\n\t\t</BaseInputContainer>\n\t);\n};\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ product, onClose }: ProductModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Name\" value={product.name} />\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\tchoices={['draft', 'pending', 'private', 'publish']}\n\t\t\t\t\tselected={product.status}\n\t\t\t\t/>\n\t\t\t\t<TextInput label=\"Price\" value={product.price} />\n\t\t\t\t<TextInput label=\"Regular Price\" value={product.regularPrice} />\n\t\t\t\t<TextInput label=\"Sale Price\" value={product.salePrice} />\n\t\t\t\t<Checkbox label=\"On Sale\" checked={product.onSale} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={product.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog title={product.name} open onClose={onClose} primaryAction={{ label: 'Save' }}>\n\t\t\t<Tabs tabs={['Product', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst DeleteDialog = ({ product, onClose }: ProductModalProps) => {\n\treturn (\n\t\t<Dialog\n\t\t\ttitle=\"Confirm\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{\n\t\t\t\tlabel: 'Delete',\n\t\t\t\taction: () => {\n\t\t\t\t\tconsole.log('delete locally and on server');\n\t\t\t\t},\n\t\t\t\ttype: 'critical',\n\t\t\t}}\n\t\t\tsecondaryActions={[\n\t\t\t\t{ label: 'Delete locally', action: product.remove },\n\t\t\t\t{ label: 'Cancel', action: onClose },\n\t\t\t]}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t<Text>You are about to delete {product.name}</Text>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default DeleteDialog;\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport ProductModal from './modal';\nimport DeleteDialog from './delete-dialog';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Actions = ({ item: product }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst [showDialog, setShowDialog] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\tconst replicationState = product.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tproduct.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: () => setShowDialog(true), type: 'critical' },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{showDialog && <DeleteDialog product={product} onClose={() => setShowDialog(false)} />}\n\t\t\t{visible && <ProductModal product={product} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedDate = ({ item, column }: Props) => {\n\treturn item[column.key] ? <Format.Date value={item[column.key]} /> : null;\n};\n\nexport default FormattedDate;\n","import image from './image';\nimport name from './name';\nimport categories from '../../common/product-categories';\nimport tags from '../../common/product-tags';\nimport Price from '../../common/price';\nimport actions from './actions';\nimport dateCreated from '../../common/date';\n\nexport default {\n\timage,\n\tname,\n\tcategories,\n\ttags,\n\tregularPrice: Price,\n\tsalePrice: Price,\n\tactions,\n\tdateCreated,\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\n/**\n *\n */\nconst Products = () => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.products);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\t// @ts-ignore\n\tconst totalRecords = useObservableState(storeDB?.collections.products.totalRecords$);\n\tconst [isSyncing, setIsSyncing] = React.useState<boolean>(false);\n\tconst [recordsShowing, setRecordsShowing] = React.useState<number>(0);\n\tconst { data$, query, setQuery } = useDataObservable('products', {\n\t\tsearch: '',\n\t\tsortBy: 'name',\n\t\tsortDirection: 'asc',\n\t\tfilters: {\n\t\t\tcategory: null,\n\t\t\ttag: null,\n\t\t},\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\tfilters={filters}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment grow>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcollection={storeDB.collections.products}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment style={{ alignItems: 'flex-end' }}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tShowing {recordsShowing} of {totalRecords}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Products;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tree from '@wcpos/common/src/components/tree';\n\ntype OrderModalProps = {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ order, onClose }: OrderModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={order.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog open title=\"Order\" onClose={onClose} primaryAction={{ label: 'Save ' }}>\n\t\t\t<Tabs tabs={['Order', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport OrderModal from './modal';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Actions = ({ item: order }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst navigation = useNavigation();\n\n\tconst handleSync = () => {\n\t\tconsole.log('sync');\n\t};\n\n\tconst handleOpen = React.useCallback(() => {\n\t\torder.atomicPatch({ status: 'pos-open' });\n\t\t// @ts-ignore\n\t\tnavigation.navigate('POS', { currentOrder: order });\n\t}, [navigation, order]);\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Open in Cart', action: handleOpen },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: order.remove },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{visible && <OrderModal order={order} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: order, column }: Props) => {\n\tconst address = order[column.key];\n\n\treturn address ? <Format.Address address={address} showName={false} /> : <Text.Skeleton />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Customer = ({ item: order }: Props) => {\n\treturn order.customer_id ? <Text>{order.customer_id}</Text> : <Text.Skeleton />;\n};\n\nexport default Customer;\n","import actions from './actions';\nimport Address from './address';\nimport customer from './customer';\nimport customerNote from './note';\nimport status from './status';\n\nexport default {\n\tactions,\n\tbilling: Address,\n\tshipping: Address,\n\tcustomer,\n\tcustomerNote,\n\tstatus,\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype OrderNoteProps = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Note = ({ item: order }: OrderNoteProps) => {\n\tif (!order.note) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip content={order.note}>\n\t\t\t<Icon name=\"note\" />\n\t\t</Tooltip>\n\t);\n};\n\nexport default Note;\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Status = ({ item: order }: Props) => {\n\treturn order.status ? (\n\t\t<Tooltip content={order.status}>\n\t\t\t<Icon name={order.status} />\n\t\t</Tooltip>\n\t) : (\n\t\t<Icon.Skeleton />\n\t);\n};\n\nexport default Status;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport { useObservableState, useObservable, useObservableSuspense } from 'observable-hooks';\nimport { switchMap, tap, debounceTime, catchError, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Button from '@wcpos/common/src/components/button';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ninterface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\nconst Orders = () => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.orders);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('orders', {\n\t\tsearch: '',\n\t\tsortBy: 'dateCreatedGmt',\n\t\tsortDirection: 'desc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading orders...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Orders\"\n\t\t\t\t\t\t\tplaceholder=\"Search Orders\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.orders}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Orders;\n","import * as React from 'react';\nimport { useObservableSuspense } from 'observable-hooks';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\n\nexport interface AddCustomerProps {\n\tonClose: () => void;\n\tcustomer?: import('@wcpos/common/src/database').CustomerDocument;\n}\n\nconst AddCustomer = ({ onClose, customer }: AddCustomerProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [firstName, setFirstName] = React.useState(customer?.firstName);\n\tconst [email, setEmail] = React.useState(customer?.email);\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst title = customer ? 'Edit Customer' : 'Add Customer';\n\n\tconst handleSave = async () => {\n\t\tconst currentCustomer = customer;\n\t\tif (!currentCustomer) {\n\t\t\tconst customersCollection = storeDB?.collections.customers;\n\t\t\t// @ts-ignore\n\t\t\tconst currentCustomer = await customersCollection?.insert({ firstName, email });\n\t\t} else {\n\t\t\tcurrentCustomer.atomicPatch({ firstName, email });\n\t\t}\n\n\t\tif (currentCustomer) {\n\t\t\t// @ts-ignore\n\t\t\tconst replicationState = currentCustomer.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t// showAuthLogin();\n\t\t\t\t\tconsole.log('need to login');\n\t\t\t\t}\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\t};\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"First Name\" value={firstName} onChange={setFirstName} />\n\t\t\t\t<TextInput label=\"Email\" value={email} onChange={setEmail} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>{customer ? <Tree data={customer.toJSON()} /> : null}</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={title}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: handleSave }}\n\t\t>\n\t\t\t<Tabs tabs={['Form', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default AddCustomer;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: customer, column }: Props) => {\n\treturn <Format.Address address={customer[column.key]} showName={false} />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Name = ({ item: customer, column }: Props) => {\n\tconst name = customer[column.key];\n\n\treturn name !== undefined ? <Text>{name}</Text> : <Text.Skeleton />;\n};\n\nexport default Name;\n","import avatarUrl from './avatar';\nimport actions from './actions';\nimport Address from './address';\nimport Name from './name';\nimport email from './email';\n\nexport default {\n\tavatarUrl,\n\tfirstName: Name,\n\tlastName: Name,\n\temail,\n\tbilling: Address,\n\tshipping: Address,\n\tactions,\n};\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Avatar = ({ item: customer }: Props) => {\n\treturn <Img src={customer.avatarUrl} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Avatar;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Email = ({ item: customer }: Props) => {\n\treturn customer.email !== undefined ? <Text>{customer.email}</Text> : <Text.Skeleton />;\n};\n\nexport default Email;\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport EditCustomer from '../add-customer-modal';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Actions = ({ item: customer }: Props) => {\n\tconst [showModal, setShowModal] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\t// @ts-ignore\n\t\tconst replicationState = customer.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tcustomer.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Edit', action: () => setShowModal(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: handleDelete },\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{showModal && <EditCustomer onClose={() => setShowModal(false)} customer={customer} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport { useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype CustomersScreenProps = import('@wcpos/common/src/navigators/main').CustomersScreenProps;\n\nconst Customers = ({ navigation }: CustomersScreenProps) => {\n\tconst { storeDB } = useAppState();\n\tconst resources = useUIResource();\n\tconst ui = useObservableSuspense(resources.customers);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\tuseWhyDidYouUpdate('Customer Page', { data$, query, ui, columns, storeDB, navigation });\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading customers...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Customers\"\n\t\t\t\t\t\t\tplaceholder=\"Search Customers\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'add',\n\t\t\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('show modal');\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t<UiSettings ui={ui} />,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.customers}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Customers;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport forEach from 'lodash/forEach';\nimport map from 'lodash/map';\n\ntype UserDatabase = import('@wcpos/common/src/database').UserDatabase;\n\nconst AuthDB = () => {\n\t// const { userDB } = useUser();\n\tconst [counts, setCounts] = React.useState<any[]>([]);\n\n\t// subscribe to all collection changes\n\t// forEach(userDB.collections, (collection, key) => {\n\t// \tcollection.$.subscribe((changeEvent) => console.log(key, changeEvent));\n\t// });\n\n\tReact.useEffect(() => {\n\t\t(async function init() {\n\t\t\t// const promises = map(userDB.collections, async (collection, key) => {\n\t\t\t// \tconst records = await collection.find().exec();\n\t\t\t// \treturn {\n\t\t\t// \t\tname: key,\n\t\t\t// \t\tcount: records.length,\n\t\t\t// \t};\n\t\t\t// });\n\t\t\t// const resolved = await Promise.all(promises);\n\t\t\t// setCounts(resolved);\n\t\t})();\n\t}, []);\n\tconst deleteAll = async (table: string) => {\n\t\t// const query = userDB.collections.map[table].query();\n\t\t// await userDB.action(async () => {\n\t\t// \tawait query.destroyAllPermanently();\n\t\t// });\n\t};\n\n\tconst printToConsole = async (collection: string) => {\n\t\t// @ts-ignore\n\t\tconst data = await userDB.collections[collection].find().exec();\n\t\tconsole.log(data);\n\t};\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={counts}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\t// flexGrow={flexGrow}\n\t\t\t\t\t\t\t\t// flexShrink={flexShrink}\n\t\t\t\t\t\t\t\t// width={width}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: any) => (\n\t\t\t\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t\t\t\t{({ column, getCellProps }: any) => {\n\t\t\t\t\t\t\tif (column.key === 'actions') {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteAll(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Info\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tprintToConsole(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <Table.Body.Row.Cell {...getCellProps()} />;\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Table.Body.Row>\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default AuthDB;\n","import * as React from 'react';\nimport { useObservableState, useObservableSuspense } from 'observable-hooks';\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\ntype Collection = import('rxdb/plugins/core').RxCollection;\n\nconst Row = ({ item, columns }: { item: Collection; columns: any[] }) => {\n\t// @ts-ignore\n\tconst count = useObservableState(item.totalRecords$);\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column }: any) => {\n\t\t\t\tswitch (column.key) {\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={item.name} />;\n\t\t\t\t\tcase 'count':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={count} />;\n\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nconst StoreDB = () => {\n\tconst { storeDB } = useAppState();\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={Object.values(storeDB.collections)}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>{({ item }: any) => <Row item={item} columns={columns} />}</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default StoreDB;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport AuthDB from './auth-db';\nimport StoreDB from './store-db';\nimport Segment from '../../components/segment';\n\nconst Support = () => {\n\treturn (\n\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Authentication Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<AuthDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Store Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<StoreDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</View>\n\t);\n};\n\nexport default Support;\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { View } from 'react-native';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\nimport Select from '@wcpos/common/src/components/select';\nimport Table from '@wcpos/common/src/components/table';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface UserSettingsProps {\n\tonClose: () => void;\n}\n\nconst UserSettings = ({ onClose }: UserSettingsProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [country, setCountry] = React.useState('GB');\n\n\tconst taxRates$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tswitchMap((q) => {\n\t\t\t\t\tconst RxQuery = storeDB?.collections.taxes.find().where('country').eq(country);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t})\n\t\t\t),\n\t\t[country]\n\t);\n\n\tconst taxRates = useObservableState(taxRates$, []);\n\tconsole.log(taxRates);\n\n\treturn (\n\t\t<Dialog\n\t\t\tsectioned\n\t\t\ttitle=\"Settings\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<View style={{ zIndex: 999999 }}>\n\t\t\t\t<Text>Store location: </Text>\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\tplaceholder=\"GB\"\n\t\t\t\t\tchoices={[\n\t\t\t\t\t\t{ label: 'GB', value: 'GB' },\n\t\t\t\t\t\t{ label: 'US', value: 'US' },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Table\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{ key: 'country', label: 'Country' },\n\t\t\t\t\t\t{ key: 'name', label: 'Name' },\n\t\t\t\t\t\t{ key: 'rate', label: 'Rate' },\n\t\t\t\t\t]}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata={taxRates}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</Dialog>\n\t);\n};\n\nexport default UserSettings;\n","import styled from 'styled-components/native';\n\nexport const DropDown = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\n// import useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Avatar from '@wcpos/common/src/components/avatar';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Text from '@wcpos/common/src/components/text';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport UserSettings from './user-settings';\nimport * as Styled from './styles';\n\n// interface Props {\n// user: import('@wcpos/common/src/database').UserDocument;\n// }\n\nexport const UserMenu = () => {\n\tconst { site, wpCredentials, store } = useAppState();\n\tconst [showSettings, setShowSettings] = React.useState(false);\n\tconst navigation = useNavigation();\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={\n\t\t\t\t\t<Styled.DropDown>\n\t\t\t\t\t\t<Text type=\"inverse\">Test</Text>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsrc=\"https://secure.gravatar.com/avatar/a2a53c07cdd4a8aa81c043baafd0915f\"\n\t\t\t\t\t\t\t// placeholder=\"PK\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Styled.DropDown>\n\t\t\t\t}\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Logout',\n\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\tsite.collection.upsertLocal('current', { id: null });\n\t\t\t\t\t\t\twpCredentials.collection.upsertLocal('current', { id: null });\n\t\t\t\t\t\t\tstore.collection.upsertLocal('current', { id: null });\n\t\t\t\t\t\t\tnavigation.goBack();\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Settings',\n\t\t\t\t\t\taction: () => setShowSettings(true),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Modal',\n\t\t\t\t\t\taction: () =>\n\t\t\t\t\t\t\tnavigation.dispatch(\n\t\t\t\t\t\t\t\tCommonActions.navigate({ name: 'Modal', params: { foo: 'bar' } })\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\n\t\t\t{showSettings && <UserSettings onClose={() => setShowSettings(false)} />}\n\t\t</>\n\t);\n};\n","import * as React from 'react';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Online = () => {\n\tconst { online } = useAppState();\n\n\treturn <Icon name=\"circle\" size=\"x-small\" color={online ? 'green' : 'red'} />;\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Notifications = () => {\n\treturn (\n\t\t<>\n\t\t\t<Icon name=\"notifications\" onPress={() => {}} />\n\t\t</>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Right = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport UserMenu from './user-menu';\nimport Online from './online';\nimport Notifications from './notifications';\nimport * as Styled from './styles';\n\nconst HeaderRight = () => {\n\treturn (\n\t\t<Styled.Right>\n\t\t\t<Online />\n\t\t\t<Notifications />\n\t\t\t<UserMenu />\n\t\t</Styled.Right>\n\t);\n};\n\nexport default HeaderRight;\n","import * as React from 'react';\nimport { useNavigation, DrawerActions, RouteProp } from '@react-navigation/native';\nimport {\n\tcreateDrawerNavigator,\n\tDrawerNavigationOptions,\n\tDrawerNavigationProp,\n} from '@react-navigation/drawer';\nimport POS from '@wcpos/common/src/screens/pos';\nimport Products from '@wcpos/common/src/screens/products';\nimport Orders from '@wcpos/common/src/screens/orders';\nimport Customers from '@wcpos/common/src/screens/customers';\nimport Support from '@wcpos/common/src/screens/support';\nimport Button from '@wcpos/common/src/components/button';\nimport HeaderRight from '@wcpos/common/src/screens/header/right';\nimport { UIResourceProvider } from '@wcpos/common/src/hooks/use-ui';\n\ntype MainScreenProps = import('./app').MainScreenProps;\n\nexport type DrawerParamList = {\n\tPOS: undefined;\n\tProducts: undefined;\n\tOrders: undefined;\n\tCustomers: undefined;\n\tSupport: undefined;\n};\n\nexport interface POSScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'POS'>;\n\troute: RouteProp<DrawerParamList, 'POS'>;\n}\n\nexport interface ProductsScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Products'>;\n\troute: RouteProp<DrawerParamList, 'Products'>;\n}\n\nexport interface OrdersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Orders'>;\n\troute: RouteProp<DrawerParamList, 'Orders'>;\n}\n\nexport interface CustomersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Customers'>;\n\troute: RouteProp<DrawerParamList, 'Customers'>;\n}\n\nexport interface SupportScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Support'>;\n\troute: RouteProp<DrawerParamList, 'Support'>;\n}\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n\n/**\n *\n */\nconst MainNavigator = ({ navigation, route }: MainScreenProps) => {\n\t// const navigation = useNavigation();\n\n\tconst openDrawer = React.useCallback(() => {\n\t\tnavigation.dispatch(DrawerActions.openDrawer());\n\t}, []);\n\n\tconst screenOptions = React.useMemo<DrawerNavigationOptions>(\n\t\t() => ({\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#f4511e',\n\t\t\t\theight: '40px',\n\t\t\t},\n\t\t\theaderTintColor: '#fff',\n\t\t\theaderTitleStyle: {\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\ttextAlign: 'center',\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t\theaderBackgroundContainerStyle: {},\n\t\t\theaderLeftContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderRightContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderTitleContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '100%',\n\t\t\t},\n\t\t\theaderLeft: () => <Button onPress={openDrawer} title=\"Menu\" />,\n\t\t\theaderRight: HeaderRight,\n\t\t}),\n\t\t[openDrawer]\n\t);\n\n\treturn (\n\t\t<UIResourceProvider>\n\t\t\t<Drawer.Navigator screenOptions={screenOptions}>\n\t\t\t\t<Drawer.Screen name=\"POS\" component={POS} />\n\t\t\t\t<Drawer.Screen name=\"Products\" component={Products} />\n\t\t\t\t<Drawer.Screen name=\"Orders\" component={Orders} />\n\t\t\t\t<Drawer.Screen name=\"Customers\" component={Customers} />\n\t\t\t\t<Drawer.Screen name=\"Support\" component={Support} />\n\t\t\t</Drawer.Navigator>\n\t\t</UIResourceProvider>\n\t);\n};\n\nexport default MainNavigator;\n"],"sourceRoot":""}